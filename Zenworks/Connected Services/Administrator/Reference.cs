//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zenworks.Administrator {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/exceptions")]
    public partial class RemoteDataModelException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int codeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", ConfigurationName="Administrator.AdministratorAdminService")]
    public interface AdministratorAdminService {
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (adminWasNaggedRequest) von Nachricht "adminWasNaggedRequest" nicht mit dem Standardwert (adminWasNagged) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/adminWasNaggedRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/adminWasNaggedResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.adminWasNaggedResponse adminWasNagged(Zenworks.Administrator.adminWasNaggedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/adminWasNaggedRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/adminWasNaggedResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.adminWasNaggedResponse> adminWasNaggedAsync(Zenworks.Administrator.adminWasNaggedRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (assignAdminRightsRequest) von Nachricht "assignAdminRightsRequest" nicht mit dem Standardwert (assignAdminRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignAdminRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.assignAdminRightsResponse assignAdminRights(Zenworks.Administrator.assignAdminRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignAdminRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.assignAdminRightsResponse> assignAdminRightsAsync(Zenworks.Administrator.assignAdminRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (assignRoleRequest) von Nachricht "assignRoleRequest" nicht mit dem Standardwert (assignRole) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignRoleRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.assignRoleResponse assignRole(Zenworks.Administrator.assignRoleRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignRoleRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignRoleResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.assignRoleResponse> assignRoleAsync(Zenworks.Administrator.assignRoleRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (assignRoleRightsRequest) von Nachricht "assignRoleRightsRequest" nicht mit dem Standardwert (assignRoleRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignRoleRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignRoleRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.assignRoleRightsResponse assignRoleRights(Zenworks.Administrator.assignRoleRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignRoleRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/assignRoleRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.assignRoleRightsResponse> assignRoleRightsAsync(Zenworks.Administrator.assignRoleRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (clearAdminRightsRequest) von Nachricht "clearAdminRightsRequest" nicht mit dem Standardwert (clearAdminRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/clearAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/clearAdminRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.clearAdminRightsResponse clearAdminRights(Zenworks.Administrator.clearAdminRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/clearAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/clearAdminRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.clearAdminRightsResponse> clearAdminRightsAsync(Zenworks.Administrator.clearAdminRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (clearRoleRightsRequest) von Nachricht "clearRoleRightsRequest" nicht mit dem Standardwert (clearRoleRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/clearRoleRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/clearRoleRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.clearRoleRightsResponse clearRoleRights(Zenworks.Administrator.clearRoleRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/clearRoleRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/clearRoleRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.clearRoleRightsResponse> clearRoleRightsAsync(Zenworks.Administrator.clearRoleRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (cloneRequest) von Nachricht "cloneRequest" nicht mit dem Standardwert (clone) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/cloneRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/cloneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.cloneResponse clone(Zenworks.Administrator.cloneRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/cloneRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/cloneResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.cloneResponse> cloneAsync(Zenworks.Administrator.cloneRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (createRequest) von Nachricht "createRequest" nicht mit dem Standardwert (create) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/createRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/createResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.createResponse create(Zenworks.Administrator.createRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/createRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/createResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.createResponse> createAsync(Zenworks.Administrator.createRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (createAdministratorRequest) von Nachricht "createAdministratorRequest" nicht mit dem Standardwert (createAdministrator) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/createAdministratorRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/createAdministratorResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.createAdministratorResponse createAdministrator(Zenworks.Administrator.createAdministratorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/createAdministratorRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/createAdministratorResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.createAdministratorResponse> createAdministratorAsync(Zenworks.Administrator.createAdministratorRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (deleteRequest) von Nachricht "deleteRequest" nicht mit dem Standardwert (delete) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/deleteRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/deleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.deleteResponse delete(Zenworks.Administrator.deleteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/deleteRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/deleteResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.deleteResponse> deleteAsync(Zenworks.Administrator.deleteRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (deleteRecursiveRequest) von Nachricht "deleteRecursiveRequest" nicht mit dem Standardwert (deleteRecursive) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/deleteRecursiveRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/deleteRecursiveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.deleteRecursiveResponse deleteRecursive(Zenworks.Administrator.deleteRecursiveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/deleteRecursiveRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/deleteRecursiveResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.deleteRecursiveResponse> deleteRecursiveAsync(Zenworks.Administrator.deleteRecursiveRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (existsByParentAndNameRequest) von Nachricht "existsByParentAndNameRequest" nicht mit dem Standardwert (existsByParentAndName) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/existsByParentAndNameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/existsByParentAndNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.existsByParentAndNameResponse existsByParentAndName(Zenworks.Administrator.existsByParentAndNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/existsByParentAndNameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/existsByParentAndNameResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.existsByParentAndNameResponse> existsByParentAndNameAsync(Zenworks.Administrator.existsByParentAndNameRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (existsByUIDRequest) von Nachricht "existsByUIDRequest" nicht mit dem Standardwert (existsByUID) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/existsByUIDRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/existsByUIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.existsByUIDResponse existsByUID(Zenworks.Administrator.existsByUIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/existsByUIDRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/existsByUIDResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.existsByUIDResponse> existsByUIDAsync(Zenworks.Administrator.existsByUIDRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAdminRightsRequest) von Nachricht "getAdminRightsRequest" nicht mit dem Standardwert (getAdminRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdminRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getAdminRightsResponse getAdminRights(Zenworks.Administrator.getAdminRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdminRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAdminRightsResponse> getAdminRightsAsync(Zenworks.Administrator.getAdminRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAdminRightsAtOrBelowRequest) von Nachricht "getAdminRightsAtOrBelowRequest" nicht mit dem Standardwert (getAdminRightsAtOrBelow) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdminRightsAtOrBelowRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdminRightsAtOrBelowResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getAdminRightsAtOrBelowResponse getAdminRightsAtOrBelow(Zenworks.Administrator.getAdminRightsAtOrBelowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdminRightsAtOrBelowRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdminRightsAtOrBelowResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAdminRightsAtOrBelowResponse> getAdminRightsAtOrBelowAsync(Zenworks.Administrator.getAdminRightsAtOrBelowRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAdministratorLoginNameRequest) von Nachricht "getAdministratorLoginNameRequest" nicht mit dem Standardwert (getAdministratorLoginName) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdministratorLoginNameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdministratorLoginNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getAdministratorLoginNameResponse getAdministratorLoginName(Zenworks.Administrator.getAdministratorLoginNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdministratorLoginNameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdministratorLoginNameResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAdministratorLoginNameResponse> getAdministratorLoginNameAsync(Zenworks.Administrator.getAdministratorLoginNameRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAdministratorSettingsRequest) von Nachricht "getAdministratorSettingsRequest" nicht mit dem Standardwert (getAdministratorSettings) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdministratorSettingsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdministratorSettingsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getAdministratorSettingsResponse getAdministratorSettings(Zenworks.Administrator.getAdministratorSettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdministratorSettingsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAdministratorSettingsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAdministratorSettingsResponse> getAdministratorSettingsAsync(Zenworks.Administrator.getAdministratorSettingsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllSearchResultsRequest) von Nachricht "getAllSearchResultsRequest" nicht mit dem Standardwert (getAllSearchResults) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAllSearchResultsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAllSearchResultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getAllSearchResultsResponse getAllSearchResults(Zenworks.Administrator.getAllSearchResultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAllSearchResultsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAllSearchResultsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAllSearchResultsResponse> getAllSearchResultsAsync(Zenworks.Administrator.getAllSearchResultsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllSearchResultsWIthTokenRequest) von Nachricht "getAllSearchResultsWIthTokenRequest" nicht mit dem Standardwert (getAllSearchResultsWIthToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAllSearchResultsWIthTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAllSearchResultsWIthTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getAllSearchResultsWIthTokenResponse getAllSearchResultsWIthToken(Zenworks.Administrator.getAllSearchResultsWIthTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAllSearchResultsWIthTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAllSearchResultsWIthTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAllSearchResultsWIthTokenResponse> getAllSearchResultsWIthTokenAsync(Zenworks.Administrator.getAllSearchResultsWIthTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAssignedAdministratorsRequest) von Nachricht "getAssignedAdministratorsRequest" nicht mit dem Standardwert (getAssignedAdministrators) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAssignedAdministratorsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAssignedAdministratorsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getAssignedAdministratorsResponse getAssignedAdministrators(Zenworks.Administrator.getAssignedAdministratorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAssignedAdministratorsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAssignedAdministratorsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAssignedAdministratorsResponse> getAssignedAdministratorsAsync(Zenworks.Administrator.getAssignedAdministratorsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAssignedRolesRequest) von Nachricht "getAssignedRolesRequest" nicht mit dem Standardwert (getAssignedRoles) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAssignedRolesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAssignedRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getAssignedRolesResponse getAssignedRoles(Zenworks.Administrator.getAssignedRolesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAssignedRolesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAssignedRolesResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAssignedRolesResponse> getAssignedRolesAsync(Zenworks.Administrator.getAssignedRolesRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAttributesRequest) von Nachricht "getAttributesRequest" nicht mit dem Standardwert (getAttributes) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAttributesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAttributesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getAttributesResponse getAttributes(Zenworks.Administrator.getAttributesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAttributesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getAttributesResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAttributesResponse> getAttributesAsync(Zenworks.Administrator.getAttributesRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getBasicObjectRequest) von Nachricht "getBasicObjectRequest" nicht mit dem Standardwert (getBasicObject) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getBasicObjectRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getBasicObjectResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getBasicObjectResponse getBasicObject(Zenworks.Administrator.getBasicObjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getBasicObjectRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getBasicObjectResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getBasicObjectResponse> getBasicObjectAsync(Zenworks.Administrator.getBasicObjectRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getByParentAndNameRequest) von Nachricht "getByParentAndNameRequest" nicht mit dem Standardwert (getByParentAndName) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByParentAndNameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByParentAndNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getByParentAndNameResponse getByParentAndName(Zenworks.Administrator.getByParentAndNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByParentAndNameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByParentAndNameResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getByParentAndNameResponse> getByParentAndNameAsync(Zenworks.Administrator.getByParentAndNameRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getByParentUIDAndNameRequest) von Nachricht "getByParentUIDAndNameRequest" nicht mit dem Standardwert (getByParentUIDAndName) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByParentUIDAndNameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByParentUIDAndNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getByParentUIDAndNameResponse getByParentUIDAndName(Zenworks.Administrator.getByParentUIDAndNameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByParentUIDAndNameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByParentUIDAndNameResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getByParentUIDAndNameResponse> getByParentUIDAndNameAsync(Zenworks.Administrator.getByParentUIDAndNameRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getByUIDRequest) von Nachricht "getByUIDRequest" nicht mit dem Standardwert (getByUID) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByUIDRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByUIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getByUIDResponse getByUID(Zenworks.Administrator.getByUIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByUIDRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getByUIDResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getByUIDResponse> getByUIDAsync(Zenworks.Administrator.getByUIDRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getEffectiveAdminRightsRequest) von Nachricht "getEffectiveAdminRightsRequest" nicht mit dem Standardwert (getEffectiveAdminRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getEffectiveAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getEffectiveAdminRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getEffectiveAdminRightsResponse getEffectiveAdminRights(Zenworks.Administrator.getEffectiveAdminRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getEffectiveAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getEffectiveAdminRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getEffectiveAdminRightsResponse> getEffectiveAdminRightsAsync(Zenworks.Administrator.getEffectiveAdminRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getEffectiveAdminRightsAtOrBelowRequest) von Nachricht "getEffectiveAdminRightsAtOrBelowRequest" nicht mit dem Standardwert (getEffectiveAdminRightsAtOrBelow) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getEffectiveAdminRightsAtOrBelowRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getEffectiveAdminRightsAtOrBelowResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowResponse getEffectiveAdminRightsAtOrBelow(Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getEffectiveAdminRightsAtOrBelowRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getEffectiveAdminRightsAtOrBelowResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowResponse> getEffectiveAdminRightsAtOrBelowAsync(Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getObjectHierachyRequest) von Nachricht "getObjectHierachyRequest" nicht mit dem Standardwert (getObjectHierachy) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getObjectHierachyRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getObjectHierachyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getObjectHierachyResponse getObjectHierachy(Zenworks.Administrator.getObjectHierachyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getObjectHierachyRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getObjectHierachyResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getObjectHierachyResponse> getObjectHierachyAsync(Zenworks.Administrator.getObjectHierachyRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRightsByCategoryRequest) von Nachricht "getRightsByCategoryRequest" nicht mit dem Standardwert (getRightsByCategory) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsByCategoryRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsByCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRightsByCategoryResponse getRightsByCategory(Zenworks.Administrator.getRightsByCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsByCategoryRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsByCategoryResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRightsByCategoryResponse> getRightsByCategoryAsync(Zenworks.Administrator.getRightsByCategoryRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRightsCategoriesRequest) von Nachricht "getRightsCategoriesRequest" nicht mit dem Standardwert (getRightsCategories) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsCategoriesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsCategoriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRightsCategoriesResponse getRightsCategories(Zenworks.Administrator.getRightsCategoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsCategoriesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsCategoriesResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRightsCategoriesResponse> getRightsCategoriesAsync(Zenworks.Administrator.getRightsCategoriesRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRightsCategoryRequest) von Nachricht "getRightsCategoryRequest" nicht mit dem Standardwert (getRightsCategory) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsCategoryRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRightsCategoryResponse getRightsCategory(Zenworks.Administrator.getRightsCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsCategoryRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRightsCategoryResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRightsCategoryResponse> getRightsCategoryAsync(Zenworks.Administrator.getRightsCategoryRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRoleAdminAssignmentsRequest) von Nachricht "getRoleAdminAssignmentsRequest" nicht mit dem Standardwert (getRoleAdminAssignments) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAdminAssignmentsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAdminAssignmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRoleAdminAssignmentsResponse getRoleAdminAssignments(Zenworks.Administrator.getRoleAdminAssignmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAdminAssignmentsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAdminAssignmentsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleAdminAssignmentsResponse> getRoleAdminAssignmentsAsync(Zenworks.Administrator.getRoleAdminAssignmentsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRoleAssignmentRequest) von Nachricht "getRoleAssignmentRequest" nicht mit dem Standardwert (getRoleAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAssignmentRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRoleAssignmentResponse getRoleAssignment(Zenworks.Administrator.getRoleAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAssignmentRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAssignmentResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleAssignmentResponse> getRoleAssignmentAsync(Zenworks.Administrator.getRoleAssignmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRoleAssignmentsRequest) von Nachricht "getRoleAssignmentsRequest" nicht mit dem Standardwert (getRoleAssignments) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAssignmentsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAssignmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRoleAssignmentsResponse getRoleAssignments(Zenworks.Administrator.getRoleAssignmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAssignmentsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleAssignmentsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleAssignmentsResponse> getRoleAssignmentsAsync(Zenworks.Administrator.getRoleAssignmentsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRoleFolderPathRequest) von Nachricht "getRoleFolderPathRequest" nicht mit dem Standardwert (getRoleFolderPath) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleFolderPathRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleFolderPathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRoleFolderPathResponse getRoleFolderPath(Zenworks.Administrator.getRoleFolderPathRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleFolderPathRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleFolderPathResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleFolderPathResponse> getRoleFolderPathAsync(Zenworks.Administrator.getRoleFolderPathRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRoleRightsRequest) von Nachricht "getRoleRightsRequest" nicht mit dem Standardwert (getRoleRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRoleRightsResponse getRoleRights(Zenworks.Administrator.getRoleRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRoleRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleRightsResponse> getRoleRightsAsync(Zenworks.Administrator.getRoleRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRolesRequest) von Nachricht "getRolesRequest" nicht mit dem Standardwert (getRoles) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRolesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRolesResponse getRoles(Zenworks.Administrator.getRolesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRolesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRolesResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRolesResponse> getRolesAsync(Zenworks.Administrator.getRolesRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRootRequest) von Nachricht "getRootRequest" nicht mit dem Standardwert (getRoot) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRootResponse getRoot(Zenworks.Administrator.getRootRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRootResponse> getRootAsync(Zenworks.Administrator.getRootRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRootPathRequest) von Nachricht "getRootPathRequest" nicht mit dem Standardwert (getRootPath) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootPathRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootPathResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRootPathResponse getRootPath(Zenworks.Administrator.getRootPathRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootPathRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootPathResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRootPathResponse> getRootPathAsync(Zenworks.Administrator.getRootPathRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getRootUIDRequest) von Nachricht "getRootUIDRequest" nicht mit dem Standardwert (getRootUID) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootUIDRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootUIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getRootUIDResponse getRootUID(Zenworks.Administrator.getRootUIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootUIDRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getRootUIDResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRootUIDResponse> getRootUIDAsync(Zenworks.Administrator.getRootUIDRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getSearchResultsRequest) von Nachricht "getSearchResultsRequest" nicht mit dem Standardwert (getSearchResults) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getSearchResultsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getSearchResultsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getSearchResultsResponse getSearchResults(Zenworks.Administrator.getSearchResultsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getSearchResultsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getSearchResultsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getSearchResultsResponse> getSearchResultsAsync(Zenworks.Administrator.getSearchResultsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getSettingRequest) von Nachricht "getSettingRequest" nicht mit dem Standardwert (getSetting) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getSettingRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.getSettingResponse getSetting(Zenworks.Administrator.getSettingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getSettingRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/getSettingResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.getSettingResponse> getSettingAsync(Zenworks.Administrator.getSettingRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (hasFullVLRightsRequest) von Nachricht "hasFullVLRightsRequest" nicht mit dem Standardwert (hasFullVLRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasFullVLRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasFullVLRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.hasFullVLRightsResponse hasFullVLRights(Zenworks.Administrator.hasFullVLRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasFullVLRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasFullVLRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.hasFullVLRightsResponse> hasFullVLRightsAsync(Zenworks.Administrator.hasFullVLRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (hasRightsRequest) von Nachricht "hasRightsRequest" nicht mit dem Standardwert (hasRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.hasRightsResponse hasRights(Zenworks.Administrator.hasRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.hasRightsResponse> hasRightsAsync(Zenworks.Administrator.hasRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (hasRightsByCategoryRequest) von Nachricht "hasRightsByCategoryRequest" nicht mit dem Standardwert (hasRightsByCategory) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsByCategoryRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsByCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.hasRightsByCategoryResponse hasRightsByCategory(Zenworks.Administrator.hasRightsByCategoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsByCategoryRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsByCategoryResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.hasRightsByCategoryResponse> hasRightsByCategoryAsync(Zenworks.Administrator.hasRightsByCategoryRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (hasRightsByComponentRequest) von Nachricht "hasRightsByComponentRequest" nicht mit dem Standardwert (hasRightsByComponent) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsByComponentRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsByComponentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.hasRightsByComponentResponse hasRightsByComponent(Zenworks.Administrator.hasRightsByComponentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsByComponentRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/hasRightsByComponentResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.hasRightsByComponentResponse> hasRightsByComponentAsync(Zenworks.Administrator.hasRightsByComponentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (moveRequest) von Nachricht "moveRequest" nicht mit dem Standardwert (move) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/moveRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/moveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.moveResponse move(Zenworks.Administrator.moveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/moveRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/moveResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.moveResponse> moveAsync(Zenworks.Administrator.moveRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (refreshSearchTokenRequest) von Nachricht "refreshSearchTokenRequest" nicht mit dem Standardwert (refreshSearchToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/refreshSearchTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/refreshSearchTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.refreshSearchTokenResponse refreshSearchToken(Zenworks.Administrator.refreshSearchTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/refreshSearchTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/refreshSearchTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.refreshSearchTokenResponse> refreshSearchTokenAsync(Zenworks.Administrator.refreshSearchTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (releaseSearchTokenRequest) von Nachricht "releaseSearchTokenRequest" nicht mit dem Standardwert (releaseSearchToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/releaseSearchTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/releaseSearchTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.releaseSearchTokenResponse releaseSearchToken(Zenworks.Administrator.releaseSearchTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/releaseSearchTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/releaseSearchTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.releaseSearchTokenResponse> releaseSearchTokenAsync(Zenworks.Administrator.releaseSearchTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (removeRoleAssignmentRequest) von Nachricht "removeRoleAssignmentRequest" nicht mit dem Standardwert (removeRoleAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/removeRoleAssignmentRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/removeRoleAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.removeRoleAssignmentResponse removeRoleAssignment(Zenworks.Administrator.removeRoleAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/removeRoleAssignmentRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/removeRoleAssignmentResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.removeRoleAssignmentResponse> removeRoleAssignmentAsync(Zenworks.Administrator.removeRoleAssignmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (renameRequest) von Nachricht "renameRequest" nicht mit dem Standardwert (rename) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/renameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/renameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.renameResponse rename(Zenworks.Administrator.renameRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/renameRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/renameResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.renameResponse> renameAsync(Zenworks.Administrator.renameRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (searchRequest) von Nachricht "searchRequest" nicht mit dem Standardwert (search) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/searchRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/searchResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.searchResponse search(Zenworks.Administrator.searchRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/searchRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/searchResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.searchResponse> searchAsync(Zenworks.Administrator.searchRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (setAdministratorSettingRequest) von Nachricht "setAdministratorSettingRequest" nicht mit dem Standardwert (setAdministratorSetting) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setAdministratorSettingRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setAdministratorSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.setAdministratorSettingResponse setAdministratorSetting(Zenworks.Administrator.setAdministratorSettingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setAdministratorSettingRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setAdministratorSettingResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.setAdministratorSettingResponse> setAdministratorSettingAsync(Zenworks.Administrator.setAdministratorSettingRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (setAllRoleContextsRequest) von Nachricht "setAllRoleContextsRequest" nicht mit dem Standardwert (setAllRoleContexts) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setAllRoleContextsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setAllRoleContextsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.setAllRoleContextsResponse setAllRoleContexts(Zenworks.Administrator.setAllRoleContextsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setAllRoleContextsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setAllRoleContextsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.setAllRoleContextsResponse> setAllRoleContextsAsync(Zenworks.Administrator.setAllRoleContextsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (setPasswordRequest) von Nachricht "setPasswordRequest" nicht mit dem Standardwert (setPassword) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setPasswordRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setPasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.setPasswordResponse setPassword(Zenworks.Administrator.setPasswordRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setPasswordRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setPasswordResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.setPasswordResponse> setPasswordAsync(Zenworks.Administrator.setPasswordRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (setRoleContextsRequest) von Nachricht "setRoleContextsRequest" nicht mit dem Standardwert (setRoleContexts) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setRoleContextsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setRoleContextsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.setRoleContextsResponse setRoleContexts(Zenworks.Administrator.setRoleContextsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setRoleContextsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setRoleContextsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.setRoleContextsResponse> setRoleContextsAsync(Zenworks.Administrator.setRoleContextsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (setSettingRequest) von Nachricht "setSettingRequest" nicht mit dem Standardwert (setSetting) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setSettingRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.setSettingResponse setSetting(Zenworks.Administrator.setSettingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setSettingRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/setSettingResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.setSettingResponse> setSettingAsync(Zenworks.Administrator.setSettingRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (updateRequest) von Nachricht "updateRequest" nicht mit dem Standardwert (update) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/updateRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/updateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.updateResponse update(Zenworks.Administrator.updateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/updateRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/updateResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.updateResponse> updateAsync(Zenworks.Administrator.updateRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (validateCredentialsRequest) von Nachricht "validateCredentialsRequest" nicht mit dem Standardwert (validateCredentials) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/validateCredentialsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/validateCredentialsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.validateCredentialsResponse validateCredentials(Zenworks.Administrator.validateCredentialsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/validateCredentialsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/validateCredentialsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.validateCredentialsResponse> validateCredentialsAsync(Zenworks.Administrator.validateCredentialsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (computeAdminRightsRequest) von Nachricht "computeAdminRightsRequest" nicht mit dem Standardwert (computeAdminRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/computeAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/computeAdminRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.computeAdminRightsResponse computeAdminRights(Zenworks.Administrator.computeAdminRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/computeAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/computeAdminRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.computeAdminRightsResponse> computeAdminRightsAsync(Zenworks.Administrator.computeAdminRightsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (computeSuperAdminRightsRequest) von Nachricht "computeSuperAdminRightsRequest" nicht mit dem Standardwert (computeSuperAdminRights) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/computeSuperAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/computeSuperAdminRightsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Administrator.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Administrator.computeSuperAdminRightsResponse computeSuperAdminRights(Zenworks.Administrator.computeSuperAdminRightsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/computeSuperAdminRightsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/administrators/soap/AdministratorAd" +
            "minService/computeSuperAdminRightsResponse")]
        System.Threading.Tasks.Task<Zenworks.Administrator.computeSuperAdminRightsResponse> computeSuperAdminRightsAsync(Zenworks.Administrator.computeSuperAdminRightsRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="adminWasNaggedRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class adminWasNaggedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string uid;
        
        public adminWasNaggedRequest() {
        }
        
        public adminWasNaggedRequest(string uid) {
            this.uid = uid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="adminWasNaggedResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class adminWasNaggedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public adminWasNaggedResponse() {
        }
        
        public adminWasNaggedResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class Rights : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string localizedNameField;
        
        private string localizedShortNameField;
        
        private string objectUIDField;
        
        private RightsItem[] rightsItemsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string localizedName {
            get {
                return this.localizedNameField;
            }
            set {
                this.localizedNameField = value;
                this.RaisePropertyChanged("localizedName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string localizedShortName {
            get {
                return this.localizedShortNameField;
            }
            set {
                this.localizedShortNameField = value;
                this.RaisePropertyChanged("localizedShortName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string objectUID {
            get {
                return this.objectUIDField;
            }
            set {
                this.objectUIDField = value;
                this.RaisePropertyChanged("objectUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("rightsItems", Order=4)]
        public RightsItem[] rightsItems {
            get {
                return this.rightsItemsField;
            }
            set {
                this.rightsItemsField = value;
                this.RaisePropertyChanged("rightsItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=5)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class RightsItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string localizedNameField;
        
        private string localizedShortNameField;
        
        private bool valueField;
        
        private bool valueFieldSpecified;
        
        private string[] dependenciesField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string localizedName {
            get {
                return this.localizedNameField;
            }
            set {
                this.localizedNameField = value;
                this.RaisePropertyChanged("localizedName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string localizedShortName {
            get {
                return this.localizedShortNameField;
            }
            set {
                this.localizedShortNameField = value;
                this.RaisePropertyChanged("localizedShortName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
                this.RaisePropertyChanged("valueSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dependencies", Order=4)]
        public string[] dependencies {
            get {
                return this.dependenciesField;
            }
            set {
                this.dependenciesField = value;
                this.RaisePropertyChanged("dependencies");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=5)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="assignAdminRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class assignAdminRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("rights")]
        public Zenworks.Administrator.Rights[] rights;
        
        public assignAdminRightsRequest() {
        }
        
        public assignAdminRightsRequest(string adminUID, Zenworks.Administrator.Rights[] rights) {
            this.adminUID = adminUID;
            this.rights = rights;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="assignAdminRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class assignAdminRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public assignAdminRightsResponse() {
        }
        
        public assignAdminRightsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="assignRoleRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class assignRoleRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string roleUID;
        
        public assignRoleRequest() {
        }
        
        public assignRoleRequest(string adminUID, string roleUID) {
            this.adminUID = adminUID;
            this.roleUID = roleUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="assignRoleResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class assignRoleResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public assignRoleResponse() {
        }
        
        public assignRoleResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="assignRoleRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class assignRoleRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string roleUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("rights")]
        public Zenworks.Administrator.Rights[] rights;
        
        public assignRoleRightsRequest() {
        }
        
        public assignRoleRightsRequest(string roleUID, Zenworks.Administrator.Rights[] rights) {
            this.roleUID = roleUID;
            this.rights = rights;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="assignRoleRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class assignRoleRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public assignRoleRightsResponse() {
        }
        
        public assignRoleRightsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="clearAdminRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class clearAdminRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("rights")]
        public Zenworks.Administrator.Rights[] rights;
        
        public clearAdminRightsRequest() {
        }
        
        public clearAdminRightsRequest(string adminUID, Zenworks.Administrator.Rights[] rights) {
            this.adminUID = adminUID;
            this.rights = rights;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="clearAdminRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class clearAdminRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public clearAdminRightsResponse() {
        }
        
        public clearAdminRightsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="clearRoleRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class clearRoleRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string roleUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("rights")]
        public Zenworks.Administrator.Rights[] rights;
        
        public clearRoleRightsRequest() {
        }
        
        public clearRoleRightsRequest(string roleUID, Zenworks.Administrator.Rights[] rights) {
            this.roleUID = roleUID;
            this.rights = rights;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="clearRoleRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class clearRoleRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public clearRoleRightsResponse() {
        }
        
        public clearRoleRightsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Role))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdministratorUserGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AdministratorGroup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Administrator))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Folder))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class ZENObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uIDField;
        
        private string nameField;
        
        private string internalNameField;
        
        private string parentUIDField;
        
        private string pathField;
        
        private string internalPathField;
        
        private string adminIDField;
        
        private string descriptionField;
        
        private string primaryTypeField;
        
        private string subTypeField;
        
        private short generalTypeField;
        
        private bool deletableField;
        
        private bool undeletableField;
        
        private bool undeletableFieldSpecified;
        
        private int errorWarningStatusField;
        
        private int complianceStatusField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
                this.RaisePropertyChanged("UID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string InternalName {
            get {
                return this.internalNameField;
            }
            set {
                this.internalNameField = value;
                this.RaisePropertyChanged("InternalName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ParentUID {
            get {
                return this.parentUIDField;
            }
            set {
                this.parentUIDField = value;
                this.RaisePropertyChanged("ParentUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
                this.RaisePropertyChanged("Path");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string InternalPath {
            get {
                return this.internalPathField;
            }
            set {
                this.internalPathField = value;
                this.RaisePropertyChanged("InternalPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AdminID {
            get {
                return this.adminIDField;
            }
            set {
                this.adminIDField = value;
                this.RaisePropertyChanged("AdminID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string PrimaryType {
            get {
                return this.primaryTypeField;
            }
            set {
                this.primaryTypeField = value;
                this.RaisePropertyChanged("PrimaryType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
                this.RaisePropertyChanged("SubType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public short GeneralType {
            get {
                return this.generalTypeField;
            }
            set {
                this.generalTypeField = value;
                this.RaisePropertyChanged("GeneralType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public bool Deletable {
            get {
                return this.deletableField;
            }
            set {
                this.deletableField = value;
                this.RaisePropertyChanged("Deletable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public bool Undeletable {
            get {
                return this.undeletableField;
            }
            set {
                this.undeletableField = value;
                this.RaisePropertyChanged("Undeletable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UndeletableSpecified {
            get {
                return this.undeletableFieldSpecified;
            }
            set {
                this.undeletableFieldSpecified = value;
                this.RaisePropertyChanged("UndeletableSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public int ErrorWarningStatus {
            get {
                return this.errorWarningStatusField;
            }
            set {
                this.errorWarningStatusField = value;
                this.RaisePropertyChanged("ErrorWarningStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public int ComplianceStatus {
            get {
                return this.complianceStatusField;
            }
            set {
                this.complianceStatusField = value;
                this.RaisePropertyChanged("ComplianceStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=15)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators")]
    public partial class Role : ZENObject {
        
        private System.Xml.XmlElement[] any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators", Order=0)]
        public System.Xml.XmlElement[] Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators")]
    public partial class AdministratorUserGroup : ZENObject {
        
        private string referenceUIDField;
        
        private string authoritativeSourceNameField;
        
        private System.Xml.XmlElement[] any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ReferenceUID {
            get {
                return this.referenceUIDField;
            }
            set {
                this.referenceUIDField = value;
                this.RaisePropertyChanged("ReferenceUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string AuthoritativeSourceName {
            get {
                return this.authoritativeSourceNameField;
            }
            set {
                this.authoritativeSourceNameField = value;
                this.RaisePropertyChanged("AuthoritativeSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators", Order=2)]
        public System.Xml.XmlElement[] Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators")]
    public partial class AdministratorGroup : ZENObject {
        
        private System.Xml.XmlElement[] any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators", Order=0)]
        public System.Xml.XmlElement[] Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators")]
    public partial class Administrator : ZENObject {
        
        private string fullNameField;
        
        private string referenceUIDField;
        
        private System.DateTime lastNagTimeField;
        
        private bool lastNagTimeFieldSpecified;
        
        private string loginNameField;
        
        private string authoritativeSourceNameField;
        
        private bool superAdministratorField;
        
        private System.Xml.XmlElement[] any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
                this.RaisePropertyChanged("FullName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ReferenceUID {
            get {
                return this.referenceUIDField;
            }
            set {
                this.referenceUIDField = value;
                this.RaisePropertyChanged("ReferenceUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime lastNagTime {
            get {
                return this.lastNagTimeField;
            }
            set {
                this.lastNagTimeField = value;
                this.RaisePropertyChanged("lastNagTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lastNagTimeSpecified {
            get {
                return this.lastNagTimeFieldSpecified;
            }
            set {
                this.lastNagTimeFieldSpecified = value;
                this.RaisePropertyChanged("lastNagTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
                this.RaisePropertyChanged("LoginName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string AuthoritativeSourceName {
            get {
                return this.authoritativeSourceNameField;
            }
            set {
                this.authoritativeSourceNameField = value;
                this.RaisePropertyChanged("AuthoritativeSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool SuperAdministrator {
            get {
                return this.superAdministratorField;
            }
            set {
                this.superAdministratorField = value;
                this.RaisePropertyChanged("SuperAdministrator");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators", Order=6)]
        public System.Xml.XmlElement[] Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/folders")]
    public partial class Folder : ZENObject {
        
        private System.Xml.XmlElement[] any1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/folders", Order=0)]
        public System.Xml.XmlElement[] Any1 {
            get {
                return this.any1Field;
            }
            set {
                this.any1Field = value;
                this.RaisePropertyChanged("Any1");
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cloneRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class cloneRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject obj;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string newName;
        
        public cloneRequest() {
        }
        
        public cloneRequest(Zenworks.Administrator.ZENObject obj, string newName) {
            this.obj = obj;
            this.newName = newName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cloneResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class cloneResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject @return;
        
        public cloneResponse() {
        }
        
        public cloneResponse(Zenworks.Administrator.ZENObject @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class createRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject @object;
        
        public createRequest() {
        }
        
        public createRequest(Zenworks.Administrator.ZENObject @object) {
            this.@object = @object;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class createResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject @return;
        
        public createResponse() {
        }
        
        public createResponse(Zenworks.Administrator.ZENObject @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createAdministratorRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class createAdministratorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string fullName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=3)]
        public bool sameRightsAsMe;
        
        public createAdministratorRequest() {
        }
        
        public createAdministratorRequest(string name, string fullName, string password, bool sameRightsAsMe) {
            this.name = name;
            this.fullName = fullName;
            this.password = password;
            this.sameRightsAsMe = sameRightsAsMe;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createAdministratorResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class createAdministratorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.Administrator @return;
        
        public createAdministratorResponse() {
        }
        
        public createAdministratorResponse(Zenworks.Administrator.Administrator @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class deleteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string uid;
        
        public deleteRequest() {
        }
        
        public deleteRequest(string uid) {
            this.uid = uid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class deleteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public deleteResponse() {
        }
        
        public deleteResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteRecursiveRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class deleteRecursiveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string uid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public bool recursive;
        
        public deleteRecursiveRequest() {
        }
        
        public deleteRecursiveRequest(string uid, bool recursive) {
            this.uid = uid;
            this.recursive = recursive;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteRecursiveResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class deleteRecursiveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public deleteRecursiveResponse() {
        }
        
        public deleteRecursiveResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="existsByParentAndNameRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class existsByParentAndNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string parentUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string name;
        
        public existsByParentAndNameRequest() {
        }
        
        public existsByParentAndNameRequest(string parentUID, string name) {
            this.parentUID = parentUID;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="existsByParentAndNameResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class existsByParentAndNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public existsByParentAndNameResponse() {
        }
        
        public existsByParentAndNameResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="existsByUIDRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class existsByUIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string uid;
        
        public existsByUIDRequest() {
        }
        
        public existsByUIDRequest(string uid) {
            this.uid = uid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="existsByUIDResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class existsByUIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public existsByUIDResponse() {
        }
        
        public existsByUIDResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAdminRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAdminRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string category;
        
        public getAdminRightsRequest() {
        }
        
        public getAdminRightsRequest(string adminUID, string category) {
            this.adminUID = adminUID;
            this.category = category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAdminRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAdminRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.Rights[] @return;
        
        public getAdminRightsResponse() {
        }
        
        public getAdminRightsResponse(Zenworks.Administrator.Rights[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAdminRightsAtOrBelowRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAdminRightsAtOrBelowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string contextUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public string category;
        
        public getAdminRightsAtOrBelowRequest() {
        }
        
        public getAdminRightsAtOrBelowRequest(string adminUID, string contextUID, string category) {
            this.adminUID = adminUID;
            this.contextUID = contextUID;
            this.category = category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAdminRightsAtOrBelowResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAdminRightsAtOrBelowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.Rights[] @return;
        
        public getAdminRightsAtOrBelowResponse() {
        }
        
        public getAdminRightsAtOrBelowResponse(Zenworks.Administrator.Rights[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAdministratorLoginNameRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAdministratorLoginNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string uid;
        
        public getAdministratorLoginNameRequest() {
        }
        
        public getAdministratorLoginNameRequest(string uid) {
            this.uid = uid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAdministratorLoginNameResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAdministratorLoginNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string @return;
        
        public getAdministratorLoginNameResponse() {
        }
        
        public getAdministratorLoginNameResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAdministratorSettingsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAdministratorSettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string userUID;
        
        public getAdministratorSettingsRequest() {
        }
        
        public getAdministratorSettingsRequest(string userUID) {
            this.userUID = userUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAdministratorSettingsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAdministratorSettingsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string @return;
        
        public getAdministratorSettingsResponse() {
        }
        
        public getAdministratorSettingsResponse(string @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class SearchOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameFilterField;
        
        private string[] typeFilterField;
        
        private bool recursiveField;
        
        private string[] returnFieldsField;
        
        private FilterSetList filterField;
        
        private SortOptions sortOptionsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string NameFilter {
            get {
                return this.nameFilterField;
            }
            set {
                this.nameFilterField = value;
                this.RaisePropertyChanged("NameFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TypeFilter", Order=1)]
        public string[] TypeFilter {
            get {
                return this.typeFilterField;
            }
            set {
                this.typeFilterField = value;
                this.RaisePropertyChanged("TypeFilter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Recursive {
            get {
                return this.recursiveField;
            }
            set {
                this.recursiveField = value;
                this.RaisePropertyChanged("Recursive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ReturnFields", Order=3)]
        public string[] ReturnFields {
            get {
                return this.returnFieldsField;
            }
            set {
                this.returnFieldsField = value;
                this.RaisePropertyChanged("ReturnFields");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public FilterSetList Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
                this.RaisePropertyChanged("Filter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public SortOptions SortOptions {
            get {
                return this.sortOptionsField;
            }
            set {
                this.sortOptionsField = value;
                this.RaisePropertyChanged("SortOptions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=6)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class FilterSetList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string conjunctionStringField;
        
        private FilterSet[] filterSetsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ConjunctionString {
            get {
                return this.conjunctionStringField;
            }
            set {
                this.conjunctionStringField = value;
                this.RaisePropertyChanged("ConjunctionString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FilterSets", Order=2)]
        public FilterSet[] FilterSets {
            get {
                return this.filterSetsField;
            }
            set {
                this.filterSetsField = value;
                this.RaisePropertyChanged("FilterSets");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class FilterSet : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private Filter[] filtersField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Filters", Order=2)]
        public Filter[] Filters {
            get {
                return this.filtersField;
            }
            set {
                this.filtersField = value;
                this.RaisePropertyChanged("Filters");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class Filter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private bool notField;
        
        private string memberField;
        
        private string typeStringField;
        
        private string operatorStringField;
        
        private string magnitudeStringField;
        
        private object[] valuesField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Not {
            get {
                return this.notField;
            }
            set {
                this.notField = value;
                this.RaisePropertyChanged("Not");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Member {
            get {
                return this.memberField;
            }
            set {
                this.memberField = value;
                this.RaisePropertyChanged("Member");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TypeString {
            get {
                return this.typeStringField;
            }
            set {
                this.typeStringField = value;
                this.RaisePropertyChanged("TypeString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string OperatorString {
            get {
                return this.operatorStringField;
            }
            set {
                this.operatorStringField = value;
                this.RaisePropertyChanged("OperatorString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string MagnitudeString {
            get {
                return this.magnitudeStringField;
            }
            set {
                this.magnitudeStringField = value;
                this.RaisePropertyChanged("MagnitudeString");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Values", Order=6)]
        public object[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
                this.RaisePropertyChanged("Values");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=7)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class SortOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] fieldNamesField;
        
        private int optionsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("FieldNames", Order=0)]
        public string[] FieldNames {
            get {
                return this.fieldNamesField;
            }
            set {
                this.fieldNamesField = value;
                this.RaisePropertyChanged("FieldNames");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class SearchResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uIDField;
        
        private string nameField;
        
        private string internalNameField;
        
        private string pathField;
        
        private string internalPathField;
        
        private string primaryTypeField;
        
        private string subTypeField;
        
        private SearchField[] fieldsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
                this.RaisePropertyChanged("UID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string InternalName {
            get {
                return this.internalNameField;
            }
            set {
                this.internalNameField = value;
                this.RaisePropertyChanged("InternalName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
                this.RaisePropertyChanged("Path");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string InternalPath {
            get {
                return this.internalPathField;
            }
            set {
                this.internalPathField = value;
                this.RaisePropertyChanged("InternalPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string PrimaryType {
            get {
                return this.primaryTypeField;
            }
            set {
                this.primaryTypeField = value;
                this.RaisePropertyChanged("PrimaryType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
                this.RaisePropertyChanged("SubType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Fields", Order=7)]
        public SearchField[] Fields {
            get {
                return this.fieldsField;
            }
            set {
                this.fieldsField = value;
                this.RaisePropertyChanged("Fields");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=8)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class SearchField : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private object[] valuesField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Values", Order=1)]
        public object[] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
                this.RaisePropertyChanged("Values");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllSearchResultsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAllSearchResultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string folderUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public Zenworks.Administrator.SearchOptions options;
        
        public getAllSearchResultsRequest() {
        }
        
        public getAllSearchResultsRequest(string folderUID, Zenworks.Administrator.SearchOptions options) {
            this.folderUID = folderUID;
            this.options = options;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllSearchResultsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAllSearchResultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.SearchResult[] @return;
        
        public getAllSearchResultsResponse() {
        }
        
        public getAllSearchResultsResponse(Zenworks.Administrator.SearchResult[] @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class SearchToken : Token {
        
        private string adminIDField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AdminID {
            get {
                return this.adminIDField;
            }
            set {
                this.adminIDField = value;
                this.RaisePropertyChanged("AdminID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchToken))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class Token : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uIDField;
        
        private int countField;
        
        private bool countCompleteField;
        
        private bool orderedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
                this.RaisePropertyChanged("UID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("Count");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool CountComplete {
            get {
                return this.countCompleteField;
            }
            set {
                this.countCompleteField = value;
                this.RaisePropertyChanged("CountComplete");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Ordered {
            get {
                return this.orderedField;
            }
            set {
                this.orderedField = value;
                this.RaisePropertyChanged("Ordered");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllSearchResultsWIthTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAllSearchResultsWIthTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.SearchToken searchToken;
        
        public getAllSearchResultsWIthTokenRequest() {
        }
        
        public getAllSearchResultsWIthTokenRequest(Zenworks.Administrator.SearchToken searchToken) {
            this.searchToken = searchToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllSearchResultsWIthTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAllSearchResultsWIthTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.SearchResult[] @return;
        
        public getAllSearchResultsWIthTokenResponse() {
        }
        
        public getAllSearchResultsWIthTokenResponse(Zenworks.Administrator.SearchResult[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignedAdministratorsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAssignedAdministratorsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string roleUID;
        
        public getAssignedAdministratorsRequest() {
        }
        
        public getAssignedAdministratorsRequest(string roleUID) {
            this.roleUID = roleUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignedAdministratorsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAssignedAdministratorsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.Administrator[] @return;
        
        public getAssignedAdministratorsResponse() {
        }
        
        public getAssignedAdministratorsResponse(Zenworks.Administrator.Administrator[] @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class BasicObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uIDField;
        
        private string nameField;
        
        private string internalNameField;
        
        private string parentUIDField;
        
        private string pathField;
        
        private string internalPathField;
        
        private string primaryTypeField;
        
        private string subTypeField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
                this.RaisePropertyChanged("UID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string InternalName {
            get {
                return this.internalNameField;
            }
            set {
                this.internalNameField = value;
                this.RaisePropertyChanged("InternalName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ParentUID {
            get {
                return this.parentUIDField;
            }
            set {
                this.parentUIDField = value;
                this.RaisePropertyChanged("ParentUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
                this.RaisePropertyChanged("Path");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string InternalPath {
            get {
                return this.internalPathField;
            }
            set {
                this.internalPathField = value;
                this.RaisePropertyChanged("InternalPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string PrimaryType {
            get {
                return this.primaryTypeField;
            }
            set {
                this.primaryTypeField = value;
                this.RaisePropertyChanged("PrimaryType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
                this.RaisePropertyChanged("SubType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=8)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignedRolesRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAssignedRolesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        public getAssignedRolesRequest() {
        }
        
        public getAssignedRolesRequest(string adminUID) {
            this.adminUID = adminUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignedRolesResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAssignedRolesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.BasicObject[] @return;
        
        public getAssignedRolesResponse() {
        }
        
        public getAssignedRolesResponse(Zenworks.Administrator.BasicObject[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAttributesRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAttributesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string uid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("attributes")]
        public string[] attributes;
        
        public getAttributesRequest() {
        }
        
        public getAttributesRequest(string uid, string[] attributes) {
            this.uid = uid;
            this.attributes = attributes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAttributesResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getAttributesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public object[] @return;
        
        public getAttributesResponse() {
        }
        
        public getAttributesResponse(object[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBasicObjectRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getBasicObjectRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string uid;
        
        public getBasicObjectRequest() {
        }
        
        public getBasicObjectRequest(string uid) {
            this.uid = uid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBasicObjectResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getBasicObjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.BasicObject @return;
        
        public getBasicObjectResponse() {
        }
        
        public getBasicObjectResponse(Zenworks.Administrator.BasicObject @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getByParentAndNameRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getByParentAndNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject parent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string name;
        
        public getByParentAndNameRequest() {
        }
        
        public getByParentAndNameRequest(Zenworks.Administrator.ZENObject parent, string name) {
            this.parent = parent;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getByParentAndNameResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getByParentAndNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject @return;
        
        public getByParentAndNameResponse() {
        }
        
        public getByParentAndNameResponse(Zenworks.Administrator.ZENObject @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getByParentUIDAndNameRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getByParentUIDAndNameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string parentUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string name;
        
        public getByParentUIDAndNameRequest() {
        }
        
        public getByParentUIDAndNameRequest(string parentUID, string name) {
            this.parentUID = parentUID;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getByParentUIDAndNameResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getByParentUIDAndNameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject @return;
        
        public getByParentUIDAndNameResponse() {
        }
        
        public getByParentUIDAndNameResponse(Zenworks.Administrator.ZENObject @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getByUIDRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getByUIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string uid;
        
        public getByUIDRequest() {
        }
        
        public getByUIDRequest(string uid) {
            this.uid = uid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getByUIDResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getByUIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject @return;
        
        public getByUIDResponse() {
        }
        
        public getByUIDResponse(Zenworks.Administrator.ZENObject @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEffectiveAdminRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getEffectiveAdminRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string category;
        
        public getEffectiveAdminRightsRequest() {
        }
        
        public getEffectiveAdminRightsRequest(string adminUID, string category) {
            this.adminUID = adminUID;
            this.category = category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEffectiveAdminRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getEffectiveAdminRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.Rights[] @return;
        
        public getEffectiveAdminRightsResponse() {
        }
        
        public getEffectiveAdminRightsResponse(Zenworks.Administrator.Rights[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEffectiveAdminRightsAtOrBelowRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getEffectiveAdminRightsAtOrBelowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string contextUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public string category;
        
        public getEffectiveAdminRightsAtOrBelowRequest() {
        }
        
        public getEffectiveAdminRightsAtOrBelowRequest(string adminUID, string contextUID, string category) {
            this.adminUID = adminUID;
            this.contextUID = contextUID;
            this.category = category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getEffectiveAdminRightsAtOrBelowResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getEffectiveAdminRightsAtOrBelowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.Rights[] @return;
        
        public getEffectiveAdminRightsAtOrBelowResponse() {
        }
        
        public getEffectiveAdminRightsAtOrBelowResponse(Zenworks.Administrator.Rights[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getObjectHierachyRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getObjectHierachyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string uid;
        
        public getObjectHierachyRequest() {
        }
        
        public getObjectHierachyRequest(string uid) {
            this.uid = uid;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getObjectHierachyResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getObjectHierachyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getObjectHierachyResponse() {
        }
        
        public getObjectHierachyResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRightsByCategoryRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRightsByCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string category;
        
        public getRightsByCategoryRequest() {
        }
        
        public getRightsByCategoryRequest(string adminUID, string category) {
            this.adminUID = adminUID;
            this.category = category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRightsByCategoryResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRightsByCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.Rights[] @return;
        
        public getRightsByCategoryResponse() {
        }
        
        public getRightsByCategoryResponse(Zenworks.Administrator.Rights[] @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class RightsCategory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string localizedNameField;
        
        private string localizedShortNameField;
        
        private RightsCategoryPath[] pathsField;
        
        private RightsCategoryItem[] categoryItemsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string localizedName {
            get {
                return this.localizedNameField;
            }
            set {
                this.localizedNameField = value;
                this.RaisePropertyChanged("localizedName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string localizedShortName {
            get {
                return this.localizedShortNameField;
            }
            set {
                this.localizedShortNameField = value;
                this.RaisePropertyChanged("localizedShortName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("paths", Order=3)]
        public RightsCategoryPath[] paths {
            get {
                return this.pathsField;
            }
            set {
                this.pathsField = value;
                this.RaisePropertyChanged("paths");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("categoryItems", Order=4)]
        public RightsCategoryItem[] categoryItems {
            get {
                return this.categoryItemsField;
            }
            set {
                this.categoryItemsField = value;
                this.RaisePropertyChanged("categoryItems");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=5)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class RightsCategoryPath : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string pathField;
        
        private string[] validObjectTypesField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
                this.RaisePropertyChanged("path");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("validObjectTypes", Order=1)]
        public string[] validObjectTypes {
            get {
                return this.validObjectTypesField;
            }
            set {
                this.validObjectTypesField = value;
                this.RaisePropertyChanged("validObjectTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class RightsCategoryItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string keyField;
        
        private string localizedNameField;
        
        private string localizedShortNameField;
        
        private bool defaultValueField;
        
        private bool defaultValueFieldSpecified;
        
        private string[] dependenciesField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
                this.RaisePropertyChanged("key");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string localizedName {
            get {
                return this.localizedNameField;
            }
            set {
                this.localizedNameField = value;
                this.RaisePropertyChanged("localizedName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string localizedShortName {
            get {
                return this.localizedShortNameField;
            }
            set {
                this.localizedShortNameField = value;
                this.RaisePropertyChanged("localizedShortName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool defaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                this.defaultValueField = value;
                this.RaisePropertyChanged("defaultValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool defaultValueSpecified {
            get {
                return this.defaultValueFieldSpecified;
            }
            set {
                this.defaultValueFieldSpecified = value;
                this.RaisePropertyChanged("defaultValueSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("dependencies", Order=4)]
        public string[] dependencies {
            get {
                return this.dependenciesField;
            }
            set {
                this.dependenciesField = value;
                this.RaisePropertyChanged("dependencies");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=5)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRightsCategoriesRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRightsCategoriesRequest {
        
        public getRightsCategoriesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRightsCategoriesResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRightsCategoriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.RightsCategory[] @return;
        
        public getRightsCategoriesResponse() {
        }
        
        public getRightsCategoriesResponse(Zenworks.Administrator.RightsCategory[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRightsCategoryRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRightsCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string key;
        
        public getRightsCategoryRequest() {
        }
        
        public getRightsCategoryRequest(string key) {
            this.key = key;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRightsCategoryResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRightsCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.RightsCategory @return;
        
        public getRightsCategoryResponse() {
        }
        
        public getRightsCategoryResponse(Zenworks.Administrator.RightsCategory @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators")]
    public partial class AdministratorRoleAssignment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BasicObject adminBasicObjectField;
        
        private RoleRights roleRightsField;
        
        private RightsCategoryContextObjects[] categoryContextsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BasicObject AdminBasicObject {
            get {
                return this.adminBasicObjectField;
            }
            set {
                this.adminBasicObjectField = value;
                this.RaisePropertyChanged("AdminBasicObject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RoleRights RoleRights {
            get {
                return this.roleRightsField;
            }
            set {
                this.roleRightsField = value;
                this.RaisePropertyChanged("RoleRights");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CategoryContexts", Order=2)]
        public RightsCategoryContextObjects[] CategoryContexts {
            get {
                return this.categoryContextsField;
            }
            set {
                this.categoryContextsField = value;
                this.RaisePropertyChanged("CategoryContexts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators", Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators")]
    public partial class RoleRights : object, System.ComponentModel.INotifyPropertyChanged {
        
        private BasicObject roleBasicObjectField;
        
        private Rights[] rightsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BasicObject RoleBasicObject {
            get {
                return this.roleBasicObjectField;
            }
            set {
                this.roleBasicObjectField = value;
                this.RaisePropertyChanged("RoleBasicObject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Rights", Order=1)]
        public Rights[] Rights {
            get {
                return this.rightsField;
            }
            set {
                this.rightsField = value;
                this.RaisePropertyChanged("Rights");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators", Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators")]
    public partial class RightsCategoryContextObjects : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string categoryField;
        
        private BasicObject[] assignedContextObjectsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("Category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AssignedContextObjects", Order=1)]
        public BasicObject[] AssignedContextObjects {
            get {
                return this.assignedContextObjectsField;
            }
            set {
                this.assignedContextObjectsField = value;
                this.RaisePropertyChanged("AssignedContextObjects");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators", Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleAdminAssignmentsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleAdminAssignmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string roleUID;
        
        public getRoleAdminAssignmentsRequest() {
        }
        
        public getRoleAdminAssignmentsRequest(string roleUID) {
            this.roleUID = roleUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleAdminAssignmentsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleAdminAssignmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.AdministratorRoleAssignment[] @return;
        
        public getRoleAdminAssignmentsResponse() {
        }
        
        public getRoleAdminAssignmentsResponse(Zenworks.Administrator.AdministratorRoleAssignment[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string roleUID;
        
        public getRoleAssignmentRequest() {
        }
        
        public getRoleAssignmentRequest(string adminUID, string roleUID) {
            this.adminUID = adminUID;
            this.roleUID = roleUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.AdministratorRoleAssignment @return;
        
        public getRoleAssignmentResponse() {
        }
        
        public getRoleAssignmentResponse(Zenworks.Administrator.AdministratorRoleAssignment @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleAssignmentsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleAssignmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        public getRoleAssignmentsRequest() {
        }
        
        public getRoleAssignmentsRequest(string adminUID) {
            this.adminUID = adminUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleAssignmentsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleAssignmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.AdministratorRoleAssignment[] @return;
        
        public getRoleAssignmentsResponse() {
        }
        
        public getRoleAssignmentsResponse(Zenworks.Administrator.AdministratorRoleAssignment[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleFolderPathRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleFolderPathRequest {
        
        public getRoleFolderPathRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleFolderPathResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleFolderPathResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string @return;
        
        public getRoleFolderPathResponse() {
        }
        
        public getRoleFolderPathResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string roleUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string category;
        
        public getRoleRightsRequest() {
        }
        
        public getRoleRightsRequest(string roleUID, string category) {
            this.roleUID = roleUID;
            this.category = category;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRoleRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRoleRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.Rights[] @return;
        
        public getRoleRightsResponse() {
        }
        
        public getRoleRightsResponse(Zenworks.Administrator.Rights[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRolesRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRolesRequest {
        
        public getRolesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRolesResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRolesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.RoleRights[] @return;
        
        public getRolesResponse() {
        }
        
        public getRolesResponse(Zenworks.Administrator.RoleRights[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRootRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRootRequest {
        
        public getRootRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRootResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRootResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.Folder @return;
        
        public getRootResponse() {
        }
        
        public getRootResponse(Zenworks.Administrator.Folder @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRootPathRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRootPathRequest {
        
        public getRootPathRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRootPathResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRootPathResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string @return;
        
        public getRootPathResponse() {
        }
        
        public getRootPathResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRootUIDRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRootUIDRequest {
        
        public getRootUIDRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getRootUIDResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getRootUIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string @return;
        
        public getRootUIDResponse() {
        }
        
        public getRootUIDResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSearchResultsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getSearchResultsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.SearchToken searchToken;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public int index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public int count;
        
        public getSearchResultsRequest() {
        }
        
        public getSearchResultsRequest(Zenworks.Administrator.SearchToken searchToken, int index, int count) {
            this.searchToken = searchToken;
            this.index = index;
            this.count = count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSearchResultsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getSearchResultsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Administrator.SearchResult[] @return;
        
        public getSearchResultsResponse() {
        }
        
        public getSearchResultsResponse(Zenworks.Administrator.SearchResult[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSettingRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getSettingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string userUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string name;
        
        public getSettingRequest() {
        }
        
        public getSettingRequest(string userUID, string name) {
            this.userUID = userUID;
            this.name = name;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSettingResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class getSettingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string @return;
        
        public getSettingResponse() {
        }
        
        public getSettingResponse(string @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="hasFullVLRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class hasFullVLRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string objectUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public string rightsString;
        
        public hasFullVLRightsRequest() {
        }
        
        public hasFullVLRightsRequest(string adminUID, string objectUID, string rightsString) {
            this.adminUID = adminUID;
            this.objectUID = objectUID;
            this.rightsString = rightsString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="hasFullVLRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class hasFullVLRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public hasFullVLRightsResponse() {
        }
        
        public hasFullVLRightsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="hasRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class hasRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string objectUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public string rightsString;
        
        public hasRightsRequest() {
        }
        
        public hasRightsRequest(string adminUID, string objectUID, string rightsString) {
            this.adminUID = adminUID;
            this.objectUID = objectUID;
            this.rightsString = rightsString;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="hasRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class hasRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public hasRightsResponse() {
        }
        
        public hasRightsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="hasRightsByCategoryRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class hasRightsByCategoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string objectUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public string category;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=3)]
        public string item;
        
        public hasRightsByCategoryRequest() {
        }
        
        public hasRightsByCategoryRequest(string adminUID, string objectUID, string category, string item) {
            this.adminUID = adminUID;
            this.objectUID = objectUID;
            this.category = category;
            this.item = item;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="hasRightsByCategoryResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class hasRightsByCategoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public hasRightsByCategoryResponse() {
        }
        
        public hasRightsByCategoryResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="hasRightsByComponentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class hasRightsByComponentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string objectUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public string component;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=3)]
        public long rights;
        
        public hasRightsByComponentRequest() {
        }
        
        public hasRightsByComponentRequest(string adminUID, string objectUID, string component, long rights) {
            this.adminUID = adminUID;
            this.objectUID = objectUID;
            this.component = component;
            this.rights = rights;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="hasRightsByComponentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class hasRightsByComponentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public hasRightsByComponentResponse() {
        }
        
        public hasRightsByComponentResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="moveRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class moveRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject obj;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public Zenworks.Administrator.ZENObject newParent;
        
        public moveRequest() {
        }
        
        public moveRequest(Zenworks.Administrator.ZENObject obj, Zenworks.Administrator.ZENObject newParent) {
            this.obj = obj;
            this.newParent = newParent;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="moveResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class moveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public moveResponse() {
        }
        
        public moveResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="refreshSearchTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class refreshSearchTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.SearchToken searchToken;
        
        public refreshSearchTokenRequest() {
        }
        
        public refreshSearchTokenRequest(Zenworks.Administrator.SearchToken searchToken) {
            this.searchToken = searchToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="refreshSearchTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class refreshSearchTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.SearchToken @return;
        
        public refreshSearchTokenResponse() {
        }
        
        public refreshSearchTokenResponse(Zenworks.Administrator.SearchToken @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="releaseSearchTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class releaseSearchTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.SearchToken searchToken;
        
        public releaseSearchTokenRequest() {
        }
        
        public releaseSearchTokenRequest(Zenworks.Administrator.SearchToken searchToken) {
            this.searchToken = searchToken;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="releaseSearchTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class releaseSearchTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public releaseSearchTokenResponse() {
        }
        
        public releaseSearchTokenResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeRoleAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class removeRoleAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string roleUID;
        
        public removeRoleAssignmentRequest() {
        }
        
        public removeRoleAssignmentRequest(string adminUID, string roleUID) {
            this.adminUID = adminUID;
            this.roleUID = roleUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeRoleAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class removeRoleAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public removeRoleAssignmentResponse() {
        }
        
        public removeRoleAssignmentResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="renameRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class renameRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject obj;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string newName;
        
        public renameRequest() {
        }
        
        public renameRequest(Zenworks.Administrator.ZENObject obj, string newName) {
            this.obj = obj;
            this.newName = newName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="renameResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class renameResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public renameResponse() {
        }
        
        public renameResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="searchRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class searchRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string folderUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public Zenworks.Administrator.SearchOptions options;
        
        public searchRequest() {
        }
        
        public searchRequest(string folderUID, Zenworks.Administrator.SearchOptions options) {
            this.folderUID = folderUID;
            this.options = options;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="searchResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class searchResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.SearchToken @return;
        
        public searchResponse() {
        }
        
        public searchResponse(Zenworks.Administrator.SearchToken @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setAdministratorSettingRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setAdministratorSettingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string userUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string settings;
        
        public setAdministratorSettingRequest() {
        }
        
        public setAdministratorSettingRequest(string userUID, string settings) {
            this.userUID = userUID;
            this.settings = settings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setAdministratorSettingResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setAdministratorSettingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public setAdministratorSettingResponse() {
        }
        
        public setAdministratorSettingResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators")]
    public partial class RightsCategoryContextUIDs : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string categoryField;
        
        private string[] assignedContextUIDsField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("Category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AssignedContextUIDs", Order=1)]
        public string[] AssignedContextUIDs {
            get {
                return this.assignedContextUIDsField;
            }
            set {
                this.assignedContextUIDsField = value;
                this.RaisePropertyChanged("AssignedContextUIDs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/administrators", Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setAllRoleContextsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setAllRoleContextsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string roleUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("categoryContexts")]
        public Zenworks.Administrator.RightsCategoryContextUIDs[] categoryContexts;
        
        public setAllRoleContextsRequest() {
        }
        
        public setAllRoleContextsRequest(string adminUID, string roleUID, Zenworks.Administrator.RightsCategoryContextUIDs[] categoryContexts) {
            this.adminUID = adminUID;
            this.roleUID = roleUID;
            this.categoryContexts = categoryContexts;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setAllRoleContextsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setAllRoleContextsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public setAllRoleContextsResponse() {
        }
        
        public setAllRoleContextsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setPasswordRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setPasswordRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string oldPassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public string newPassword;
        
        public setPasswordRequest() {
        }
        
        public setPasswordRequest(string adminName, string oldPassword, string newPassword) {
            this.adminName = adminName;
            this.oldPassword = oldPassword;
            this.newPassword = newPassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setPasswordResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setPasswordResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public setPasswordResponse() {
        }
        
        public setPasswordResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setRoleContextsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setRoleContextsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string roleUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public Zenworks.Administrator.RightsCategoryContextUIDs categoryContexts;
        
        public setRoleContextsRequest() {
        }
        
        public setRoleContextsRequest(string adminUID, string roleUID, Zenworks.Administrator.RightsCategoryContextUIDs categoryContexts) {
            this.adminUID = adminUID;
            this.roleUID = roleUID;
            this.categoryContexts = categoryContexts;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setRoleContextsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setRoleContextsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public setRoleContextsResponse() {
        }
        
        public setRoleContextsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setSettingRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setSettingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string userUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=2)]
        public string settings;
        
        public setSettingRequest() {
        }
        
        public setSettingRequest(string userUID, string name, string settings) {
            this.userUID = userUID;
            this.name = name;
            this.settings = settings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="setSettingResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class setSettingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public setSettingResponse() {
        }
        
        public setSettingResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class updateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public Zenworks.Administrator.ZENObject @object;
        
        public updateRequest() {
        }
        
        public updateRequest(Zenworks.Administrator.ZENObject @object) {
            this.@object = @object;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class updateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public updateResponse() {
        }
        
        public updateResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="validateCredentialsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class validateCredentialsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=1)]
        public string oldpassword;
        
        public validateCredentialsRequest() {
        }
        
        public validateCredentialsRequest(string adminName, string oldpassword) {
            this.adminName = adminName;
            this.oldpassword = oldpassword;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="validateCredentialsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class validateCredentialsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public validateCredentialsResponse() {
        }
        
        public validateCredentialsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="computeAdminRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class computeAdminRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        public computeAdminRightsRequest() {
        }
        
        public computeAdminRightsRequest(string adminUID) {
            this.adminUID = adminUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="computeAdminRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class computeAdminRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public computeAdminRightsResponse() {
        }
        
        public computeAdminRightsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="computeSuperAdminRightsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class computeSuperAdminRightsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public string adminUID;
        
        public computeSuperAdminRightsRequest() {
        }
        
        public computeSuperAdminRightsRequest(string adminUID) {
            this.adminUID = adminUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="computeSuperAdminRightsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/administrators/soap", IsWrapped=true)]
    public partial class computeSuperAdminRightsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/administrators/soap", Order=0)]
        public bool @return;
        
        public computeSuperAdminRightsResponse() {
        }
        
        public computeSuperAdminRightsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AdministratorAdminServiceChannel : Zenworks.Administrator.AdministratorAdminService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdministratorAdminServiceClient : System.ServiceModel.ClientBase<Zenworks.Administrator.AdministratorAdminService>, Zenworks.Administrator.AdministratorAdminService {
        
        public AdministratorAdminServiceClient() {
        }
        
        public AdministratorAdminServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdministratorAdminServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministratorAdminServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdministratorAdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.adminWasNaggedResponse Zenworks.Administrator.AdministratorAdminService.adminWasNagged(Zenworks.Administrator.adminWasNaggedRequest request) {
            return base.Channel.adminWasNagged(request);
        }
        
        public bool adminWasNagged(string uid) {
            Zenworks.Administrator.adminWasNaggedRequest inValue = new Zenworks.Administrator.adminWasNaggedRequest();
            inValue.uid = uid;
            Zenworks.Administrator.adminWasNaggedResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).adminWasNagged(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.adminWasNaggedResponse> Zenworks.Administrator.AdministratorAdminService.adminWasNaggedAsync(Zenworks.Administrator.adminWasNaggedRequest request) {
            return base.Channel.adminWasNaggedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.adminWasNaggedResponse> adminWasNaggedAsync(string uid) {
            Zenworks.Administrator.adminWasNaggedRequest inValue = new Zenworks.Administrator.adminWasNaggedRequest();
            inValue.uid = uid;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).adminWasNaggedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.assignAdminRightsResponse Zenworks.Administrator.AdministratorAdminService.assignAdminRights(Zenworks.Administrator.assignAdminRightsRequest request) {
            return base.Channel.assignAdminRights(request);
        }
        
        public bool assignAdminRights(string adminUID, Zenworks.Administrator.Rights[] rights) {
            Zenworks.Administrator.assignAdminRightsRequest inValue = new Zenworks.Administrator.assignAdminRightsRequest();
            inValue.adminUID = adminUID;
            inValue.rights = rights;
            Zenworks.Administrator.assignAdminRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).assignAdminRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.assignAdminRightsResponse> Zenworks.Administrator.AdministratorAdminService.assignAdminRightsAsync(Zenworks.Administrator.assignAdminRightsRequest request) {
            return base.Channel.assignAdminRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.assignAdminRightsResponse> assignAdminRightsAsync(string adminUID, Zenworks.Administrator.Rights[] rights) {
            Zenworks.Administrator.assignAdminRightsRequest inValue = new Zenworks.Administrator.assignAdminRightsRequest();
            inValue.adminUID = adminUID;
            inValue.rights = rights;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).assignAdminRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.assignRoleResponse Zenworks.Administrator.AdministratorAdminService.assignRole(Zenworks.Administrator.assignRoleRequest request) {
            return base.Channel.assignRole(request);
        }
        
        public bool assignRole(string adminUID, string roleUID) {
            Zenworks.Administrator.assignRoleRequest inValue = new Zenworks.Administrator.assignRoleRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            Zenworks.Administrator.assignRoleResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).assignRole(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.assignRoleResponse> Zenworks.Administrator.AdministratorAdminService.assignRoleAsync(Zenworks.Administrator.assignRoleRequest request) {
            return base.Channel.assignRoleAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.assignRoleResponse> assignRoleAsync(string adminUID, string roleUID) {
            Zenworks.Administrator.assignRoleRequest inValue = new Zenworks.Administrator.assignRoleRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).assignRoleAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.assignRoleRightsResponse Zenworks.Administrator.AdministratorAdminService.assignRoleRights(Zenworks.Administrator.assignRoleRightsRequest request) {
            return base.Channel.assignRoleRights(request);
        }
        
        public bool assignRoleRights(string roleUID, Zenworks.Administrator.Rights[] rights) {
            Zenworks.Administrator.assignRoleRightsRequest inValue = new Zenworks.Administrator.assignRoleRightsRequest();
            inValue.roleUID = roleUID;
            inValue.rights = rights;
            Zenworks.Administrator.assignRoleRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).assignRoleRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.assignRoleRightsResponse> Zenworks.Administrator.AdministratorAdminService.assignRoleRightsAsync(Zenworks.Administrator.assignRoleRightsRequest request) {
            return base.Channel.assignRoleRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.assignRoleRightsResponse> assignRoleRightsAsync(string roleUID, Zenworks.Administrator.Rights[] rights) {
            Zenworks.Administrator.assignRoleRightsRequest inValue = new Zenworks.Administrator.assignRoleRightsRequest();
            inValue.roleUID = roleUID;
            inValue.rights = rights;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).assignRoleRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.clearAdminRightsResponse Zenworks.Administrator.AdministratorAdminService.clearAdminRights(Zenworks.Administrator.clearAdminRightsRequest request) {
            return base.Channel.clearAdminRights(request);
        }
        
        public bool clearAdminRights(string adminUID, Zenworks.Administrator.Rights[] rights) {
            Zenworks.Administrator.clearAdminRightsRequest inValue = new Zenworks.Administrator.clearAdminRightsRequest();
            inValue.adminUID = adminUID;
            inValue.rights = rights;
            Zenworks.Administrator.clearAdminRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).clearAdminRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.clearAdminRightsResponse> Zenworks.Administrator.AdministratorAdminService.clearAdminRightsAsync(Zenworks.Administrator.clearAdminRightsRequest request) {
            return base.Channel.clearAdminRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.clearAdminRightsResponse> clearAdminRightsAsync(string adminUID, Zenworks.Administrator.Rights[] rights) {
            Zenworks.Administrator.clearAdminRightsRequest inValue = new Zenworks.Administrator.clearAdminRightsRequest();
            inValue.adminUID = adminUID;
            inValue.rights = rights;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).clearAdminRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.clearRoleRightsResponse Zenworks.Administrator.AdministratorAdminService.clearRoleRights(Zenworks.Administrator.clearRoleRightsRequest request) {
            return base.Channel.clearRoleRights(request);
        }
        
        public bool clearRoleRights(string roleUID, Zenworks.Administrator.Rights[] rights) {
            Zenworks.Administrator.clearRoleRightsRequest inValue = new Zenworks.Administrator.clearRoleRightsRequest();
            inValue.roleUID = roleUID;
            inValue.rights = rights;
            Zenworks.Administrator.clearRoleRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).clearRoleRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.clearRoleRightsResponse> Zenworks.Administrator.AdministratorAdminService.clearRoleRightsAsync(Zenworks.Administrator.clearRoleRightsRequest request) {
            return base.Channel.clearRoleRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.clearRoleRightsResponse> clearRoleRightsAsync(string roleUID, Zenworks.Administrator.Rights[] rights) {
            Zenworks.Administrator.clearRoleRightsRequest inValue = new Zenworks.Administrator.clearRoleRightsRequest();
            inValue.roleUID = roleUID;
            inValue.rights = rights;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).clearRoleRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.cloneResponse Zenworks.Administrator.AdministratorAdminService.clone(Zenworks.Administrator.cloneRequest request) {
            return base.Channel.clone(request);
        }
        
        public Zenworks.Administrator.ZENObject clone(Zenworks.Administrator.ZENObject obj, string newName) {
            Zenworks.Administrator.cloneRequest inValue = new Zenworks.Administrator.cloneRequest();
            inValue.obj = obj;
            inValue.newName = newName;
            Zenworks.Administrator.cloneResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).clone(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.cloneResponse> Zenworks.Administrator.AdministratorAdminService.cloneAsync(Zenworks.Administrator.cloneRequest request) {
            return base.Channel.cloneAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.cloneResponse> cloneAsync(Zenworks.Administrator.ZENObject obj, string newName) {
            Zenworks.Administrator.cloneRequest inValue = new Zenworks.Administrator.cloneRequest();
            inValue.obj = obj;
            inValue.newName = newName;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).cloneAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.createResponse Zenworks.Administrator.AdministratorAdminService.create(Zenworks.Administrator.createRequest request) {
            return base.Channel.create(request);
        }
        
        public Zenworks.Administrator.ZENObject create(Zenworks.Administrator.ZENObject @object) {
            Zenworks.Administrator.createRequest inValue = new Zenworks.Administrator.createRequest();
            inValue.@object = @object;
            Zenworks.Administrator.createResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).create(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.createResponse> Zenworks.Administrator.AdministratorAdminService.createAsync(Zenworks.Administrator.createRequest request) {
            return base.Channel.createAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.createResponse> createAsync(Zenworks.Administrator.ZENObject @object) {
            Zenworks.Administrator.createRequest inValue = new Zenworks.Administrator.createRequest();
            inValue.@object = @object;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).createAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.createAdministratorResponse Zenworks.Administrator.AdministratorAdminService.createAdministrator(Zenworks.Administrator.createAdministratorRequest request) {
            return base.Channel.createAdministrator(request);
        }
        
        public Zenworks.Administrator.Administrator createAdministrator(string name, string fullName, string password, bool sameRightsAsMe) {
            Zenworks.Administrator.createAdministratorRequest inValue = new Zenworks.Administrator.createAdministratorRequest();
            inValue.name = name;
            inValue.fullName = fullName;
            inValue.password = password;
            inValue.sameRightsAsMe = sameRightsAsMe;
            Zenworks.Administrator.createAdministratorResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).createAdministrator(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.createAdministratorResponse> Zenworks.Administrator.AdministratorAdminService.createAdministratorAsync(Zenworks.Administrator.createAdministratorRequest request) {
            return base.Channel.createAdministratorAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.createAdministratorResponse> createAdministratorAsync(string name, string fullName, string password, bool sameRightsAsMe) {
            Zenworks.Administrator.createAdministratorRequest inValue = new Zenworks.Administrator.createAdministratorRequest();
            inValue.name = name;
            inValue.fullName = fullName;
            inValue.password = password;
            inValue.sameRightsAsMe = sameRightsAsMe;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).createAdministratorAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.deleteResponse Zenworks.Administrator.AdministratorAdminService.delete(Zenworks.Administrator.deleteRequest request) {
            return base.Channel.delete(request);
        }
        
        public bool delete(string uid) {
            Zenworks.Administrator.deleteRequest inValue = new Zenworks.Administrator.deleteRequest();
            inValue.uid = uid;
            Zenworks.Administrator.deleteResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).delete(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.deleteResponse> Zenworks.Administrator.AdministratorAdminService.deleteAsync(Zenworks.Administrator.deleteRequest request) {
            return base.Channel.deleteAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.deleteResponse> deleteAsync(string uid) {
            Zenworks.Administrator.deleteRequest inValue = new Zenworks.Administrator.deleteRequest();
            inValue.uid = uid;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).deleteAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.deleteRecursiveResponse Zenworks.Administrator.AdministratorAdminService.deleteRecursive(Zenworks.Administrator.deleteRecursiveRequest request) {
            return base.Channel.deleteRecursive(request);
        }
        
        public string[] deleteRecursive(string uid, bool recursive) {
            Zenworks.Administrator.deleteRecursiveRequest inValue = new Zenworks.Administrator.deleteRecursiveRequest();
            inValue.uid = uid;
            inValue.recursive = recursive;
            Zenworks.Administrator.deleteRecursiveResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).deleteRecursive(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.deleteRecursiveResponse> Zenworks.Administrator.AdministratorAdminService.deleteRecursiveAsync(Zenworks.Administrator.deleteRecursiveRequest request) {
            return base.Channel.deleteRecursiveAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.deleteRecursiveResponse> deleteRecursiveAsync(string uid, bool recursive) {
            Zenworks.Administrator.deleteRecursiveRequest inValue = new Zenworks.Administrator.deleteRecursiveRequest();
            inValue.uid = uid;
            inValue.recursive = recursive;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).deleteRecursiveAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.existsByParentAndNameResponse Zenworks.Administrator.AdministratorAdminService.existsByParentAndName(Zenworks.Administrator.existsByParentAndNameRequest request) {
            return base.Channel.existsByParentAndName(request);
        }
        
        public bool existsByParentAndName(string parentUID, string name) {
            Zenworks.Administrator.existsByParentAndNameRequest inValue = new Zenworks.Administrator.existsByParentAndNameRequest();
            inValue.parentUID = parentUID;
            inValue.name = name;
            Zenworks.Administrator.existsByParentAndNameResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).existsByParentAndName(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.existsByParentAndNameResponse> Zenworks.Administrator.AdministratorAdminService.existsByParentAndNameAsync(Zenworks.Administrator.existsByParentAndNameRequest request) {
            return base.Channel.existsByParentAndNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.existsByParentAndNameResponse> existsByParentAndNameAsync(string parentUID, string name) {
            Zenworks.Administrator.existsByParentAndNameRequest inValue = new Zenworks.Administrator.existsByParentAndNameRequest();
            inValue.parentUID = parentUID;
            inValue.name = name;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).existsByParentAndNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.existsByUIDResponse Zenworks.Administrator.AdministratorAdminService.existsByUID(Zenworks.Administrator.existsByUIDRequest request) {
            return base.Channel.existsByUID(request);
        }
        
        public bool existsByUID(string uid) {
            Zenworks.Administrator.existsByUIDRequest inValue = new Zenworks.Administrator.existsByUIDRequest();
            inValue.uid = uid;
            Zenworks.Administrator.existsByUIDResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).existsByUID(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.existsByUIDResponse> Zenworks.Administrator.AdministratorAdminService.existsByUIDAsync(Zenworks.Administrator.existsByUIDRequest request) {
            return base.Channel.existsByUIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.existsByUIDResponse> existsByUIDAsync(string uid) {
            Zenworks.Administrator.existsByUIDRequest inValue = new Zenworks.Administrator.existsByUIDRequest();
            inValue.uid = uid;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).existsByUIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getAdminRightsResponse Zenworks.Administrator.AdministratorAdminService.getAdminRights(Zenworks.Administrator.getAdminRightsRequest request) {
            return base.Channel.getAdminRights(request);
        }
        
        public Zenworks.Administrator.Rights[] getAdminRights(string adminUID, string category) {
            Zenworks.Administrator.getAdminRightsRequest inValue = new Zenworks.Administrator.getAdminRightsRequest();
            inValue.adminUID = adminUID;
            inValue.category = category;
            Zenworks.Administrator.getAdminRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getAdminRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAdminRightsResponse> Zenworks.Administrator.AdministratorAdminService.getAdminRightsAsync(Zenworks.Administrator.getAdminRightsRequest request) {
            return base.Channel.getAdminRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getAdminRightsResponse> getAdminRightsAsync(string adminUID, string category) {
            Zenworks.Administrator.getAdminRightsRequest inValue = new Zenworks.Administrator.getAdminRightsRequest();
            inValue.adminUID = adminUID;
            inValue.category = category;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getAdminRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getAdminRightsAtOrBelowResponse Zenworks.Administrator.AdministratorAdminService.getAdminRightsAtOrBelow(Zenworks.Administrator.getAdminRightsAtOrBelowRequest request) {
            return base.Channel.getAdminRightsAtOrBelow(request);
        }
        
        public Zenworks.Administrator.Rights[] getAdminRightsAtOrBelow(string adminUID, string contextUID, string category) {
            Zenworks.Administrator.getAdminRightsAtOrBelowRequest inValue = new Zenworks.Administrator.getAdminRightsAtOrBelowRequest();
            inValue.adminUID = adminUID;
            inValue.contextUID = contextUID;
            inValue.category = category;
            Zenworks.Administrator.getAdminRightsAtOrBelowResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getAdminRightsAtOrBelow(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAdminRightsAtOrBelowResponse> Zenworks.Administrator.AdministratorAdminService.getAdminRightsAtOrBelowAsync(Zenworks.Administrator.getAdminRightsAtOrBelowRequest request) {
            return base.Channel.getAdminRightsAtOrBelowAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getAdminRightsAtOrBelowResponse> getAdminRightsAtOrBelowAsync(string adminUID, string contextUID, string category) {
            Zenworks.Administrator.getAdminRightsAtOrBelowRequest inValue = new Zenworks.Administrator.getAdminRightsAtOrBelowRequest();
            inValue.adminUID = adminUID;
            inValue.contextUID = contextUID;
            inValue.category = category;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getAdminRightsAtOrBelowAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getAdministratorLoginNameResponse Zenworks.Administrator.AdministratorAdminService.getAdministratorLoginName(Zenworks.Administrator.getAdministratorLoginNameRequest request) {
            return base.Channel.getAdministratorLoginName(request);
        }
        
        public string getAdministratorLoginName(string uid) {
            Zenworks.Administrator.getAdministratorLoginNameRequest inValue = new Zenworks.Administrator.getAdministratorLoginNameRequest();
            inValue.uid = uid;
            Zenworks.Administrator.getAdministratorLoginNameResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getAdministratorLoginName(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAdministratorLoginNameResponse> Zenworks.Administrator.AdministratorAdminService.getAdministratorLoginNameAsync(Zenworks.Administrator.getAdministratorLoginNameRequest request) {
            return base.Channel.getAdministratorLoginNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getAdministratorLoginNameResponse> getAdministratorLoginNameAsync(string uid) {
            Zenworks.Administrator.getAdministratorLoginNameRequest inValue = new Zenworks.Administrator.getAdministratorLoginNameRequest();
            inValue.uid = uid;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getAdministratorLoginNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getAdministratorSettingsResponse Zenworks.Administrator.AdministratorAdminService.getAdministratorSettings(Zenworks.Administrator.getAdministratorSettingsRequest request) {
            return base.Channel.getAdministratorSettings(request);
        }
        
        public string getAdministratorSettings(string userUID) {
            Zenworks.Administrator.getAdministratorSettingsRequest inValue = new Zenworks.Administrator.getAdministratorSettingsRequest();
            inValue.userUID = userUID;
            Zenworks.Administrator.getAdministratorSettingsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getAdministratorSettings(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAdministratorSettingsResponse> Zenworks.Administrator.AdministratorAdminService.getAdministratorSettingsAsync(Zenworks.Administrator.getAdministratorSettingsRequest request) {
            return base.Channel.getAdministratorSettingsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getAdministratorSettingsResponse> getAdministratorSettingsAsync(string userUID) {
            Zenworks.Administrator.getAdministratorSettingsRequest inValue = new Zenworks.Administrator.getAdministratorSettingsRequest();
            inValue.userUID = userUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getAdministratorSettingsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getAllSearchResultsResponse Zenworks.Administrator.AdministratorAdminService.getAllSearchResults(Zenworks.Administrator.getAllSearchResultsRequest request) {
            return base.Channel.getAllSearchResults(request);
        }
        
        public Zenworks.Administrator.SearchResult[] getAllSearchResults(string folderUID, Zenworks.Administrator.SearchOptions options) {
            Zenworks.Administrator.getAllSearchResultsRequest inValue = new Zenworks.Administrator.getAllSearchResultsRequest();
            inValue.folderUID = folderUID;
            inValue.options = options;
            Zenworks.Administrator.getAllSearchResultsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getAllSearchResults(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAllSearchResultsResponse> Zenworks.Administrator.AdministratorAdminService.getAllSearchResultsAsync(Zenworks.Administrator.getAllSearchResultsRequest request) {
            return base.Channel.getAllSearchResultsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getAllSearchResultsResponse> getAllSearchResultsAsync(string folderUID, Zenworks.Administrator.SearchOptions options) {
            Zenworks.Administrator.getAllSearchResultsRequest inValue = new Zenworks.Administrator.getAllSearchResultsRequest();
            inValue.folderUID = folderUID;
            inValue.options = options;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getAllSearchResultsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getAllSearchResultsWIthTokenResponse Zenworks.Administrator.AdministratorAdminService.getAllSearchResultsWIthToken(Zenworks.Administrator.getAllSearchResultsWIthTokenRequest request) {
            return base.Channel.getAllSearchResultsWIthToken(request);
        }
        
        public Zenworks.Administrator.SearchResult[] getAllSearchResultsWIthToken(Zenworks.Administrator.SearchToken searchToken) {
            Zenworks.Administrator.getAllSearchResultsWIthTokenRequest inValue = new Zenworks.Administrator.getAllSearchResultsWIthTokenRequest();
            inValue.searchToken = searchToken;
            Zenworks.Administrator.getAllSearchResultsWIthTokenResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getAllSearchResultsWIthToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAllSearchResultsWIthTokenResponse> Zenworks.Administrator.AdministratorAdminService.getAllSearchResultsWIthTokenAsync(Zenworks.Administrator.getAllSearchResultsWIthTokenRequest request) {
            return base.Channel.getAllSearchResultsWIthTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getAllSearchResultsWIthTokenResponse> getAllSearchResultsWIthTokenAsync(Zenworks.Administrator.SearchToken searchToken) {
            Zenworks.Administrator.getAllSearchResultsWIthTokenRequest inValue = new Zenworks.Administrator.getAllSearchResultsWIthTokenRequest();
            inValue.searchToken = searchToken;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getAllSearchResultsWIthTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getAssignedAdministratorsResponse Zenworks.Administrator.AdministratorAdminService.getAssignedAdministrators(Zenworks.Administrator.getAssignedAdministratorsRequest request) {
            return base.Channel.getAssignedAdministrators(request);
        }
        
        public Zenworks.Administrator.Administrator[] getAssignedAdministrators(string roleUID) {
            Zenworks.Administrator.getAssignedAdministratorsRequest inValue = new Zenworks.Administrator.getAssignedAdministratorsRequest();
            inValue.roleUID = roleUID;
            Zenworks.Administrator.getAssignedAdministratorsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getAssignedAdministrators(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAssignedAdministratorsResponse> Zenworks.Administrator.AdministratorAdminService.getAssignedAdministratorsAsync(Zenworks.Administrator.getAssignedAdministratorsRequest request) {
            return base.Channel.getAssignedAdministratorsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getAssignedAdministratorsResponse> getAssignedAdministratorsAsync(string roleUID) {
            Zenworks.Administrator.getAssignedAdministratorsRequest inValue = new Zenworks.Administrator.getAssignedAdministratorsRequest();
            inValue.roleUID = roleUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getAssignedAdministratorsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getAssignedRolesResponse Zenworks.Administrator.AdministratorAdminService.getAssignedRoles(Zenworks.Administrator.getAssignedRolesRequest request) {
            return base.Channel.getAssignedRoles(request);
        }
        
        public Zenworks.Administrator.BasicObject[] getAssignedRoles(string adminUID) {
            Zenworks.Administrator.getAssignedRolesRequest inValue = new Zenworks.Administrator.getAssignedRolesRequest();
            inValue.adminUID = adminUID;
            Zenworks.Administrator.getAssignedRolesResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getAssignedRoles(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAssignedRolesResponse> Zenworks.Administrator.AdministratorAdminService.getAssignedRolesAsync(Zenworks.Administrator.getAssignedRolesRequest request) {
            return base.Channel.getAssignedRolesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getAssignedRolesResponse> getAssignedRolesAsync(string adminUID) {
            Zenworks.Administrator.getAssignedRolesRequest inValue = new Zenworks.Administrator.getAssignedRolesRequest();
            inValue.adminUID = adminUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getAssignedRolesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getAttributesResponse Zenworks.Administrator.AdministratorAdminService.getAttributes(Zenworks.Administrator.getAttributesRequest request) {
            return base.Channel.getAttributes(request);
        }
        
        public object[] getAttributes(string uid, string[] attributes) {
            Zenworks.Administrator.getAttributesRequest inValue = new Zenworks.Administrator.getAttributesRequest();
            inValue.uid = uid;
            inValue.attributes = attributes;
            Zenworks.Administrator.getAttributesResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getAttributes(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getAttributesResponse> Zenworks.Administrator.AdministratorAdminService.getAttributesAsync(Zenworks.Administrator.getAttributesRequest request) {
            return base.Channel.getAttributesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getAttributesResponse> getAttributesAsync(string uid, string[] attributes) {
            Zenworks.Administrator.getAttributesRequest inValue = new Zenworks.Administrator.getAttributesRequest();
            inValue.uid = uid;
            inValue.attributes = attributes;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getAttributesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getBasicObjectResponse Zenworks.Administrator.AdministratorAdminService.getBasicObject(Zenworks.Administrator.getBasicObjectRequest request) {
            return base.Channel.getBasicObject(request);
        }
        
        public Zenworks.Administrator.BasicObject getBasicObject(string uid) {
            Zenworks.Administrator.getBasicObjectRequest inValue = new Zenworks.Administrator.getBasicObjectRequest();
            inValue.uid = uid;
            Zenworks.Administrator.getBasicObjectResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getBasicObject(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getBasicObjectResponse> Zenworks.Administrator.AdministratorAdminService.getBasicObjectAsync(Zenworks.Administrator.getBasicObjectRequest request) {
            return base.Channel.getBasicObjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getBasicObjectResponse> getBasicObjectAsync(string uid) {
            Zenworks.Administrator.getBasicObjectRequest inValue = new Zenworks.Administrator.getBasicObjectRequest();
            inValue.uid = uid;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getBasicObjectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getByParentAndNameResponse Zenworks.Administrator.AdministratorAdminService.getByParentAndName(Zenworks.Administrator.getByParentAndNameRequest request) {
            return base.Channel.getByParentAndName(request);
        }
        
        public Zenworks.Administrator.ZENObject getByParentAndName(Zenworks.Administrator.ZENObject parent, string name) {
            Zenworks.Administrator.getByParentAndNameRequest inValue = new Zenworks.Administrator.getByParentAndNameRequest();
            inValue.parent = parent;
            inValue.name = name;
            Zenworks.Administrator.getByParentAndNameResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getByParentAndName(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getByParentAndNameResponse> Zenworks.Administrator.AdministratorAdminService.getByParentAndNameAsync(Zenworks.Administrator.getByParentAndNameRequest request) {
            return base.Channel.getByParentAndNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getByParentAndNameResponse> getByParentAndNameAsync(Zenworks.Administrator.ZENObject parent, string name) {
            Zenworks.Administrator.getByParentAndNameRequest inValue = new Zenworks.Administrator.getByParentAndNameRequest();
            inValue.parent = parent;
            inValue.name = name;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getByParentAndNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getByParentUIDAndNameResponse Zenworks.Administrator.AdministratorAdminService.getByParentUIDAndName(Zenworks.Administrator.getByParentUIDAndNameRequest request) {
            return base.Channel.getByParentUIDAndName(request);
        }
        
        public Zenworks.Administrator.ZENObject getByParentUIDAndName(string parentUID, string name) {
            Zenworks.Administrator.getByParentUIDAndNameRequest inValue = new Zenworks.Administrator.getByParentUIDAndNameRequest();
            inValue.parentUID = parentUID;
            inValue.name = name;
            Zenworks.Administrator.getByParentUIDAndNameResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getByParentUIDAndName(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getByParentUIDAndNameResponse> Zenworks.Administrator.AdministratorAdminService.getByParentUIDAndNameAsync(Zenworks.Administrator.getByParentUIDAndNameRequest request) {
            return base.Channel.getByParentUIDAndNameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getByParentUIDAndNameResponse> getByParentUIDAndNameAsync(string parentUID, string name) {
            Zenworks.Administrator.getByParentUIDAndNameRequest inValue = new Zenworks.Administrator.getByParentUIDAndNameRequest();
            inValue.parentUID = parentUID;
            inValue.name = name;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getByParentUIDAndNameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getByUIDResponse Zenworks.Administrator.AdministratorAdminService.getByUID(Zenworks.Administrator.getByUIDRequest request) {
            return base.Channel.getByUID(request);
        }
        
        public Zenworks.Administrator.ZENObject getByUID(string uid) {
            Zenworks.Administrator.getByUIDRequest inValue = new Zenworks.Administrator.getByUIDRequest();
            inValue.uid = uid;
            Zenworks.Administrator.getByUIDResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getByUID(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getByUIDResponse> Zenworks.Administrator.AdministratorAdminService.getByUIDAsync(Zenworks.Administrator.getByUIDRequest request) {
            return base.Channel.getByUIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getByUIDResponse> getByUIDAsync(string uid) {
            Zenworks.Administrator.getByUIDRequest inValue = new Zenworks.Administrator.getByUIDRequest();
            inValue.uid = uid;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getByUIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getEffectiveAdminRightsResponse Zenworks.Administrator.AdministratorAdminService.getEffectiveAdminRights(Zenworks.Administrator.getEffectiveAdminRightsRequest request) {
            return base.Channel.getEffectiveAdminRights(request);
        }
        
        public Zenworks.Administrator.Rights[] getEffectiveAdminRights(string adminUID, string category) {
            Zenworks.Administrator.getEffectiveAdminRightsRequest inValue = new Zenworks.Administrator.getEffectiveAdminRightsRequest();
            inValue.adminUID = adminUID;
            inValue.category = category;
            Zenworks.Administrator.getEffectiveAdminRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getEffectiveAdminRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getEffectiveAdminRightsResponse> Zenworks.Administrator.AdministratorAdminService.getEffectiveAdminRightsAsync(Zenworks.Administrator.getEffectiveAdminRightsRequest request) {
            return base.Channel.getEffectiveAdminRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getEffectiveAdminRightsResponse> getEffectiveAdminRightsAsync(string adminUID, string category) {
            Zenworks.Administrator.getEffectiveAdminRightsRequest inValue = new Zenworks.Administrator.getEffectiveAdminRightsRequest();
            inValue.adminUID = adminUID;
            inValue.category = category;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getEffectiveAdminRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowResponse Zenworks.Administrator.AdministratorAdminService.getEffectiveAdminRightsAtOrBelow(Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowRequest request) {
            return base.Channel.getEffectiveAdminRightsAtOrBelow(request);
        }
        
        public Zenworks.Administrator.Rights[] getEffectiveAdminRightsAtOrBelow(string adminUID, string contextUID, string category) {
            Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowRequest inValue = new Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowRequest();
            inValue.adminUID = adminUID;
            inValue.contextUID = contextUID;
            inValue.category = category;
            Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getEffectiveAdminRightsAtOrBelow(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowResponse> Zenworks.Administrator.AdministratorAdminService.getEffectiveAdminRightsAtOrBelowAsync(Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowRequest request) {
            return base.Channel.getEffectiveAdminRightsAtOrBelowAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowResponse> getEffectiveAdminRightsAtOrBelowAsync(string adminUID, string contextUID, string category) {
            Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowRequest inValue = new Zenworks.Administrator.getEffectiveAdminRightsAtOrBelowRequest();
            inValue.adminUID = adminUID;
            inValue.contextUID = contextUID;
            inValue.category = category;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getEffectiveAdminRightsAtOrBelowAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getObjectHierachyResponse Zenworks.Administrator.AdministratorAdminService.getObjectHierachy(Zenworks.Administrator.getObjectHierachyRequest request) {
            return base.Channel.getObjectHierachy(request);
        }
        
        public string[] getObjectHierachy(string uid) {
            Zenworks.Administrator.getObjectHierachyRequest inValue = new Zenworks.Administrator.getObjectHierachyRequest();
            inValue.uid = uid;
            Zenworks.Administrator.getObjectHierachyResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getObjectHierachy(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getObjectHierachyResponse> Zenworks.Administrator.AdministratorAdminService.getObjectHierachyAsync(Zenworks.Administrator.getObjectHierachyRequest request) {
            return base.Channel.getObjectHierachyAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getObjectHierachyResponse> getObjectHierachyAsync(string uid) {
            Zenworks.Administrator.getObjectHierachyRequest inValue = new Zenworks.Administrator.getObjectHierachyRequest();
            inValue.uid = uid;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getObjectHierachyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRightsByCategoryResponse Zenworks.Administrator.AdministratorAdminService.getRightsByCategory(Zenworks.Administrator.getRightsByCategoryRequest request) {
            return base.Channel.getRightsByCategory(request);
        }
        
        public Zenworks.Administrator.Rights[] getRightsByCategory(string adminUID, string category) {
            Zenworks.Administrator.getRightsByCategoryRequest inValue = new Zenworks.Administrator.getRightsByCategoryRequest();
            inValue.adminUID = adminUID;
            inValue.category = category;
            Zenworks.Administrator.getRightsByCategoryResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRightsByCategory(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRightsByCategoryResponse> Zenworks.Administrator.AdministratorAdminService.getRightsByCategoryAsync(Zenworks.Administrator.getRightsByCategoryRequest request) {
            return base.Channel.getRightsByCategoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRightsByCategoryResponse> getRightsByCategoryAsync(string adminUID, string category) {
            Zenworks.Administrator.getRightsByCategoryRequest inValue = new Zenworks.Administrator.getRightsByCategoryRequest();
            inValue.adminUID = adminUID;
            inValue.category = category;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRightsByCategoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRightsCategoriesResponse Zenworks.Administrator.AdministratorAdminService.getRightsCategories(Zenworks.Administrator.getRightsCategoriesRequest request) {
            return base.Channel.getRightsCategories(request);
        }
        
        public Zenworks.Administrator.RightsCategory[] getRightsCategories() {
            Zenworks.Administrator.getRightsCategoriesRequest inValue = new Zenworks.Administrator.getRightsCategoriesRequest();
            Zenworks.Administrator.getRightsCategoriesResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRightsCategories(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRightsCategoriesResponse> Zenworks.Administrator.AdministratorAdminService.getRightsCategoriesAsync(Zenworks.Administrator.getRightsCategoriesRequest request) {
            return base.Channel.getRightsCategoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRightsCategoriesResponse> getRightsCategoriesAsync() {
            Zenworks.Administrator.getRightsCategoriesRequest inValue = new Zenworks.Administrator.getRightsCategoriesRequest();
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRightsCategoriesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRightsCategoryResponse Zenworks.Administrator.AdministratorAdminService.getRightsCategory(Zenworks.Administrator.getRightsCategoryRequest request) {
            return base.Channel.getRightsCategory(request);
        }
        
        public Zenworks.Administrator.RightsCategory getRightsCategory(string key) {
            Zenworks.Administrator.getRightsCategoryRequest inValue = new Zenworks.Administrator.getRightsCategoryRequest();
            inValue.key = key;
            Zenworks.Administrator.getRightsCategoryResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRightsCategory(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRightsCategoryResponse> Zenworks.Administrator.AdministratorAdminService.getRightsCategoryAsync(Zenworks.Administrator.getRightsCategoryRequest request) {
            return base.Channel.getRightsCategoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRightsCategoryResponse> getRightsCategoryAsync(string key) {
            Zenworks.Administrator.getRightsCategoryRequest inValue = new Zenworks.Administrator.getRightsCategoryRequest();
            inValue.key = key;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRightsCategoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRoleAdminAssignmentsResponse Zenworks.Administrator.AdministratorAdminService.getRoleAdminAssignments(Zenworks.Administrator.getRoleAdminAssignmentsRequest request) {
            return base.Channel.getRoleAdminAssignments(request);
        }
        
        public Zenworks.Administrator.AdministratorRoleAssignment[] getRoleAdminAssignments(string roleUID) {
            Zenworks.Administrator.getRoleAdminAssignmentsRequest inValue = new Zenworks.Administrator.getRoleAdminAssignmentsRequest();
            inValue.roleUID = roleUID;
            Zenworks.Administrator.getRoleAdminAssignmentsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleAdminAssignments(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleAdminAssignmentsResponse> Zenworks.Administrator.AdministratorAdminService.getRoleAdminAssignmentsAsync(Zenworks.Administrator.getRoleAdminAssignmentsRequest request) {
            return base.Channel.getRoleAdminAssignmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRoleAdminAssignmentsResponse> getRoleAdminAssignmentsAsync(string roleUID) {
            Zenworks.Administrator.getRoleAdminAssignmentsRequest inValue = new Zenworks.Administrator.getRoleAdminAssignmentsRequest();
            inValue.roleUID = roleUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleAdminAssignmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRoleAssignmentResponse Zenworks.Administrator.AdministratorAdminService.getRoleAssignment(Zenworks.Administrator.getRoleAssignmentRequest request) {
            return base.Channel.getRoleAssignment(request);
        }
        
        public Zenworks.Administrator.AdministratorRoleAssignment getRoleAssignment(string adminUID, string roleUID) {
            Zenworks.Administrator.getRoleAssignmentRequest inValue = new Zenworks.Administrator.getRoleAssignmentRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            Zenworks.Administrator.getRoleAssignmentResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleAssignmentResponse> Zenworks.Administrator.AdministratorAdminService.getRoleAssignmentAsync(Zenworks.Administrator.getRoleAssignmentRequest request) {
            return base.Channel.getRoleAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRoleAssignmentResponse> getRoleAssignmentAsync(string adminUID, string roleUID) {
            Zenworks.Administrator.getRoleAssignmentRequest inValue = new Zenworks.Administrator.getRoleAssignmentRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleAssignmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRoleAssignmentsResponse Zenworks.Administrator.AdministratorAdminService.getRoleAssignments(Zenworks.Administrator.getRoleAssignmentsRequest request) {
            return base.Channel.getRoleAssignments(request);
        }
        
        public Zenworks.Administrator.AdministratorRoleAssignment[] getRoleAssignments(string adminUID) {
            Zenworks.Administrator.getRoleAssignmentsRequest inValue = new Zenworks.Administrator.getRoleAssignmentsRequest();
            inValue.adminUID = adminUID;
            Zenworks.Administrator.getRoleAssignmentsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleAssignments(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleAssignmentsResponse> Zenworks.Administrator.AdministratorAdminService.getRoleAssignmentsAsync(Zenworks.Administrator.getRoleAssignmentsRequest request) {
            return base.Channel.getRoleAssignmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRoleAssignmentsResponse> getRoleAssignmentsAsync(string adminUID) {
            Zenworks.Administrator.getRoleAssignmentsRequest inValue = new Zenworks.Administrator.getRoleAssignmentsRequest();
            inValue.adminUID = adminUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleAssignmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRoleFolderPathResponse Zenworks.Administrator.AdministratorAdminService.getRoleFolderPath(Zenworks.Administrator.getRoleFolderPathRequest request) {
            return base.Channel.getRoleFolderPath(request);
        }
        
        public string getRoleFolderPath() {
            Zenworks.Administrator.getRoleFolderPathRequest inValue = new Zenworks.Administrator.getRoleFolderPathRequest();
            Zenworks.Administrator.getRoleFolderPathResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleFolderPath(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleFolderPathResponse> Zenworks.Administrator.AdministratorAdminService.getRoleFolderPathAsync(Zenworks.Administrator.getRoleFolderPathRequest request) {
            return base.Channel.getRoleFolderPathAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRoleFolderPathResponse> getRoleFolderPathAsync() {
            Zenworks.Administrator.getRoleFolderPathRequest inValue = new Zenworks.Administrator.getRoleFolderPathRequest();
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleFolderPathAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRoleRightsResponse Zenworks.Administrator.AdministratorAdminService.getRoleRights(Zenworks.Administrator.getRoleRightsRequest request) {
            return base.Channel.getRoleRights(request);
        }
        
        public Zenworks.Administrator.Rights[] getRoleRights(string roleUID, string category) {
            Zenworks.Administrator.getRoleRightsRequest inValue = new Zenworks.Administrator.getRoleRightsRequest();
            inValue.roleUID = roleUID;
            inValue.category = category;
            Zenworks.Administrator.getRoleRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRoleRightsResponse> Zenworks.Administrator.AdministratorAdminService.getRoleRightsAsync(Zenworks.Administrator.getRoleRightsRequest request) {
            return base.Channel.getRoleRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRoleRightsResponse> getRoleRightsAsync(string roleUID, string category) {
            Zenworks.Administrator.getRoleRightsRequest inValue = new Zenworks.Administrator.getRoleRightsRequest();
            inValue.roleUID = roleUID;
            inValue.category = category;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoleRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRolesResponse Zenworks.Administrator.AdministratorAdminService.getRoles(Zenworks.Administrator.getRolesRequest request) {
            return base.Channel.getRoles(request);
        }
        
        public Zenworks.Administrator.RoleRights[] getRoles() {
            Zenworks.Administrator.getRolesRequest inValue = new Zenworks.Administrator.getRolesRequest();
            Zenworks.Administrator.getRolesResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoles(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRolesResponse> Zenworks.Administrator.AdministratorAdminService.getRolesAsync(Zenworks.Administrator.getRolesRequest request) {
            return base.Channel.getRolesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRolesResponse> getRolesAsync() {
            Zenworks.Administrator.getRolesRequest inValue = new Zenworks.Administrator.getRolesRequest();
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRolesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRootResponse Zenworks.Administrator.AdministratorAdminService.getRoot(Zenworks.Administrator.getRootRequest request) {
            return base.Channel.getRoot(request);
        }
        
        public Zenworks.Administrator.Folder getRoot() {
            Zenworks.Administrator.getRootRequest inValue = new Zenworks.Administrator.getRootRequest();
            Zenworks.Administrator.getRootResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRoot(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRootResponse> Zenworks.Administrator.AdministratorAdminService.getRootAsync(Zenworks.Administrator.getRootRequest request) {
            return base.Channel.getRootAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRootResponse> getRootAsync() {
            Zenworks.Administrator.getRootRequest inValue = new Zenworks.Administrator.getRootRequest();
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRootAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRootPathResponse Zenworks.Administrator.AdministratorAdminService.getRootPath(Zenworks.Administrator.getRootPathRequest request) {
            return base.Channel.getRootPath(request);
        }
        
        public string getRootPath() {
            Zenworks.Administrator.getRootPathRequest inValue = new Zenworks.Administrator.getRootPathRequest();
            Zenworks.Administrator.getRootPathResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRootPath(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRootPathResponse> Zenworks.Administrator.AdministratorAdminService.getRootPathAsync(Zenworks.Administrator.getRootPathRequest request) {
            return base.Channel.getRootPathAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRootPathResponse> getRootPathAsync() {
            Zenworks.Administrator.getRootPathRequest inValue = new Zenworks.Administrator.getRootPathRequest();
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRootPathAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getRootUIDResponse Zenworks.Administrator.AdministratorAdminService.getRootUID(Zenworks.Administrator.getRootUIDRequest request) {
            return base.Channel.getRootUID(request);
        }
        
        public string getRootUID() {
            Zenworks.Administrator.getRootUIDRequest inValue = new Zenworks.Administrator.getRootUIDRequest();
            Zenworks.Administrator.getRootUIDResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getRootUID(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getRootUIDResponse> Zenworks.Administrator.AdministratorAdminService.getRootUIDAsync(Zenworks.Administrator.getRootUIDRequest request) {
            return base.Channel.getRootUIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getRootUIDResponse> getRootUIDAsync() {
            Zenworks.Administrator.getRootUIDRequest inValue = new Zenworks.Administrator.getRootUIDRequest();
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getRootUIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getSearchResultsResponse Zenworks.Administrator.AdministratorAdminService.getSearchResults(Zenworks.Administrator.getSearchResultsRequest request) {
            return base.Channel.getSearchResults(request);
        }
        
        public Zenworks.Administrator.SearchResult[] getSearchResults(Zenworks.Administrator.SearchToken searchToken, int index, int count) {
            Zenworks.Administrator.getSearchResultsRequest inValue = new Zenworks.Administrator.getSearchResultsRequest();
            inValue.searchToken = searchToken;
            inValue.index = index;
            inValue.count = count;
            Zenworks.Administrator.getSearchResultsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getSearchResults(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getSearchResultsResponse> Zenworks.Administrator.AdministratorAdminService.getSearchResultsAsync(Zenworks.Administrator.getSearchResultsRequest request) {
            return base.Channel.getSearchResultsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getSearchResultsResponse> getSearchResultsAsync(Zenworks.Administrator.SearchToken searchToken, int index, int count) {
            Zenworks.Administrator.getSearchResultsRequest inValue = new Zenworks.Administrator.getSearchResultsRequest();
            inValue.searchToken = searchToken;
            inValue.index = index;
            inValue.count = count;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getSearchResultsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.getSettingResponse Zenworks.Administrator.AdministratorAdminService.getSetting(Zenworks.Administrator.getSettingRequest request) {
            return base.Channel.getSetting(request);
        }
        
        public string getSetting(string userUID, string name) {
            Zenworks.Administrator.getSettingRequest inValue = new Zenworks.Administrator.getSettingRequest();
            inValue.userUID = userUID;
            inValue.name = name;
            Zenworks.Administrator.getSettingResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).getSetting(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.getSettingResponse> Zenworks.Administrator.AdministratorAdminService.getSettingAsync(Zenworks.Administrator.getSettingRequest request) {
            return base.Channel.getSettingAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.getSettingResponse> getSettingAsync(string userUID, string name) {
            Zenworks.Administrator.getSettingRequest inValue = new Zenworks.Administrator.getSettingRequest();
            inValue.userUID = userUID;
            inValue.name = name;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).getSettingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.hasFullVLRightsResponse Zenworks.Administrator.AdministratorAdminService.hasFullVLRights(Zenworks.Administrator.hasFullVLRightsRequest request) {
            return base.Channel.hasFullVLRights(request);
        }
        
        public bool hasFullVLRights(string adminUID, string objectUID, string rightsString) {
            Zenworks.Administrator.hasFullVLRightsRequest inValue = new Zenworks.Administrator.hasFullVLRightsRequest();
            inValue.adminUID = adminUID;
            inValue.objectUID = objectUID;
            inValue.rightsString = rightsString;
            Zenworks.Administrator.hasFullVLRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).hasFullVLRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.hasFullVLRightsResponse> Zenworks.Administrator.AdministratorAdminService.hasFullVLRightsAsync(Zenworks.Administrator.hasFullVLRightsRequest request) {
            return base.Channel.hasFullVLRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.hasFullVLRightsResponse> hasFullVLRightsAsync(string adminUID, string objectUID, string rightsString) {
            Zenworks.Administrator.hasFullVLRightsRequest inValue = new Zenworks.Administrator.hasFullVLRightsRequest();
            inValue.adminUID = adminUID;
            inValue.objectUID = objectUID;
            inValue.rightsString = rightsString;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).hasFullVLRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.hasRightsResponse Zenworks.Administrator.AdministratorAdminService.hasRights(Zenworks.Administrator.hasRightsRequest request) {
            return base.Channel.hasRights(request);
        }
        
        public bool hasRights(string adminUID, string objectUID, string rightsString) {
            Zenworks.Administrator.hasRightsRequest inValue = new Zenworks.Administrator.hasRightsRequest();
            inValue.adminUID = adminUID;
            inValue.objectUID = objectUID;
            inValue.rightsString = rightsString;
            Zenworks.Administrator.hasRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).hasRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.hasRightsResponse> Zenworks.Administrator.AdministratorAdminService.hasRightsAsync(Zenworks.Administrator.hasRightsRequest request) {
            return base.Channel.hasRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.hasRightsResponse> hasRightsAsync(string adminUID, string objectUID, string rightsString) {
            Zenworks.Administrator.hasRightsRequest inValue = new Zenworks.Administrator.hasRightsRequest();
            inValue.adminUID = adminUID;
            inValue.objectUID = objectUID;
            inValue.rightsString = rightsString;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).hasRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.hasRightsByCategoryResponse Zenworks.Administrator.AdministratorAdminService.hasRightsByCategory(Zenworks.Administrator.hasRightsByCategoryRequest request) {
            return base.Channel.hasRightsByCategory(request);
        }
        
        public bool hasRightsByCategory(string adminUID, string objectUID, string category, string item) {
            Zenworks.Administrator.hasRightsByCategoryRequest inValue = new Zenworks.Administrator.hasRightsByCategoryRequest();
            inValue.adminUID = adminUID;
            inValue.objectUID = objectUID;
            inValue.category = category;
            inValue.item = item;
            Zenworks.Administrator.hasRightsByCategoryResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).hasRightsByCategory(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.hasRightsByCategoryResponse> Zenworks.Administrator.AdministratorAdminService.hasRightsByCategoryAsync(Zenworks.Administrator.hasRightsByCategoryRequest request) {
            return base.Channel.hasRightsByCategoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.hasRightsByCategoryResponse> hasRightsByCategoryAsync(string adminUID, string objectUID, string category, string item) {
            Zenworks.Administrator.hasRightsByCategoryRequest inValue = new Zenworks.Administrator.hasRightsByCategoryRequest();
            inValue.adminUID = adminUID;
            inValue.objectUID = objectUID;
            inValue.category = category;
            inValue.item = item;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).hasRightsByCategoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.hasRightsByComponentResponse Zenworks.Administrator.AdministratorAdminService.hasRightsByComponent(Zenworks.Administrator.hasRightsByComponentRequest request) {
            return base.Channel.hasRightsByComponent(request);
        }
        
        public bool hasRightsByComponent(string adminUID, string objectUID, string component, long rights) {
            Zenworks.Administrator.hasRightsByComponentRequest inValue = new Zenworks.Administrator.hasRightsByComponentRequest();
            inValue.adminUID = adminUID;
            inValue.objectUID = objectUID;
            inValue.component = component;
            inValue.rights = rights;
            Zenworks.Administrator.hasRightsByComponentResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).hasRightsByComponent(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.hasRightsByComponentResponse> Zenworks.Administrator.AdministratorAdminService.hasRightsByComponentAsync(Zenworks.Administrator.hasRightsByComponentRequest request) {
            return base.Channel.hasRightsByComponentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.hasRightsByComponentResponse> hasRightsByComponentAsync(string adminUID, string objectUID, string component, long rights) {
            Zenworks.Administrator.hasRightsByComponentRequest inValue = new Zenworks.Administrator.hasRightsByComponentRequest();
            inValue.adminUID = adminUID;
            inValue.objectUID = objectUID;
            inValue.component = component;
            inValue.rights = rights;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).hasRightsByComponentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.moveResponse Zenworks.Administrator.AdministratorAdminService.move(Zenworks.Administrator.moveRequest request) {
            return base.Channel.move(request);
        }
        
        public bool move(Zenworks.Administrator.ZENObject obj, Zenworks.Administrator.ZENObject newParent) {
            Zenworks.Administrator.moveRequest inValue = new Zenworks.Administrator.moveRequest();
            inValue.obj = obj;
            inValue.newParent = newParent;
            Zenworks.Administrator.moveResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).move(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.moveResponse> Zenworks.Administrator.AdministratorAdminService.moveAsync(Zenworks.Administrator.moveRequest request) {
            return base.Channel.moveAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.moveResponse> moveAsync(Zenworks.Administrator.ZENObject obj, Zenworks.Administrator.ZENObject newParent) {
            Zenworks.Administrator.moveRequest inValue = new Zenworks.Administrator.moveRequest();
            inValue.obj = obj;
            inValue.newParent = newParent;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).moveAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.refreshSearchTokenResponse Zenworks.Administrator.AdministratorAdminService.refreshSearchToken(Zenworks.Administrator.refreshSearchTokenRequest request) {
            return base.Channel.refreshSearchToken(request);
        }
        
        public Zenworks.Administrator.SearchToken refreshSearchToken(Zenworks.Administrator.SearchToken searchToken) {
            Zenworks.Administrator.refreshSearchTokenRequest inValue = new Zenworks.Administrator.refreshSearchTokenRequest();
            inValue.searchToken = searchToken;
            Zenworks.Administrator.refreshSearchTokenResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).refreshSearchToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.refreshSearchTokenResponse> Zenworks.Administrator.AdministratorAdminService.refreshSearchTokenAsync(Zenworks.Administrator.refreshSearchTokenRequest request) {
            return base.Channel.refreshSearchTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.refreshSearchTokenResponse> refreshSearchTokenAsync(Zenworks.Administrator.SearchToken searchToken) {
            Zenworks.Administrator.refreshSearchTokenRequest inValue = new Zenworks.Administrator.refreshSearchTokenRequest();
            inValue.searchToken = searchToken;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).refreshSearchTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.releaseSearchTokenResponse Zenworks.Administrator.AdministratorAdminService.releaseSearchToken(Zenworks.Administrator.releaseSearchTokenRequest request) {
            return base.Channel.releaseSearchToken(request);
        }
        
        public bool releaseSearchToken(Zenworks.Administrator.SearchToken searchToken) {
            Zenworks.Administrator.releaseSearchTokenRequest inValue = new Zenworks.Administrator.releaseSearchTokenRequest();
            inValue.searchToken = searchToken;
            Zenworks.Administrator.releaseSearchTokenResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).releaseSearchToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.releaseSearchTokenResponse> Zenworks.Administrator.AdministratorAdminService.releaseSearchTokenAsync(Zenworks.Administrator.releaseSearchTokenRequest request) {
            return base.Channel.releaseSearchTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.releaseSearchTokenResponse> releaseSearchTokenAsync(Zenworks.Administrator.SearchToken searchToken) {
            Zenworks.Administrator.releaseSearchTokenRequest inValue = new Zenworks.Administrator.releaseSearchTokenRequest();
            inValue.searchToken = searchToken;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).releaseSearchTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.removeRoleAssignmentResponse Zenworks.Administrator.AdministratorAdminService.removeRoleAssignment(Zenworks.Administrator.removeRoleAssignmentRequest request) {
            return base.Channel.removeRoleAssignment(request);
        }
        
        public bool removeRoleAssignment(string adminUID, string roleUID) {
            Zenworks.Administrator.removeRoleAssignmentRequest inValue = new Zenworks.Administrator.removeRoleAssignmentRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            Zenworks.Administrator.removeRoleAssignmentResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).removeRoleAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.removeRoleAssignmentResponse> Zenworks.Administrator.AdministratorAdminService.removeRoleAssignmentAsync(Zenworks.Administrator.removeRoleAssignmentRequest request) {
            return base.Channel.removeRoleAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.removeRoleAssignmentResponse> removeRoleAssignmentAsync(string adminUID, string roleUID) {
            Zenworks.Administrator.removeRoleAssignmentRequest inValue = new Zenworks.Administrator.removeRoleAssignmentRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).removeRoleAssignmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.renameResponse Zenworks.Administrator.AdministratorAdminService.rename(Zenworks.Administrator.renameRequest request) {
            return base.Channel.rename(request);
        }
        
        public bool rename(Zenworks.Administrator.ZENObject obj, string newName) {
            Zenworks.Administrator.renameRequest inValue = new Zenworks.Administrator.renameRequest();
            inValue.obj = obj;
            inValue.newName = newName;
            Zenworks.Administrator.renameResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).rename(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.renameResponse> Zenworks.Administrator.AdministratorAdminService.renameAsync(Zenworks.Administrator.renameRequest request) {
            return base.Channel.renameAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.renameResponse> renameAsync(Zenworks.Administrator.ZENObject obj, string newName) {
            Zenworks.Administrator.renameRequest inValue = new Zenworks.Administrator.renameRequest();
            inValue.obj = obj;
            inValue.newName = newName;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).renameAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.searchResponse Zenworks.Administrator.AdministratorAdminService.search(Zenworks.Administrator.searchRequest request) {
            return base.Channel.search(request);
        }
        
        public Zenworks.Administrator.SearchToken search(string folderUID, Zenworks.Administrator.SearchOptions options) {
            Zenworks.Administrator.searchRequest inValue = new Zenworks.Administrator.searchRequest();
            inValue.folderUID = folderUID;
            inValue.options = options;
            Zenworks.Administrator.searchResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).search(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.searchResponse> Zenworks.Administrator.AdministratorAdminService.searchAsync(Zenworks.Administrator.searchRequest request) {
            return base.Channel.searchAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.searchResponse> searchAsync(string folderUID, Zenworks.Administrator.SearchOptions options) {
            Zenworks.Administrator.searchRequest inValue = new Zenworks.Administrator.searchRequest();
            inValue.folderUID = folderUID;
            inValue.options = options;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).searchAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.setAdministratorSettingResponse Zenworks.Administrator.AdministratorAdminService.setAdministratorSetting(Zenworks.Administrator.setAdministratorSettingRequest request) {
            return base.Channel.setAdministratorSetting(request);
        }
        
        public bool setAdministratorSetting(string userUID, string settings) {
            Zenworks.Administrator.setAdministratorSettingRequest inValue = new Zenworks.Administrator.setAdministratorSettingRequest();
            inValue.userUID = userUID;
            inValue.settings = settings;
            Zenworks.Administrator.setAdministratorSettingResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).setAdministratorSetting(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.setAdministratorSettingResponse> Zenworks.Administrator.AdministratorAdminService.setAdministratorSettingAsync(Zenworks.Administrator.setAdministratorSettingRequest request) {
            return base.Channel.setAdministratorSettingAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.setAdministratorSettingResponse> setAdministratorSettingAsync(string userUID, string settings) {
            Zenworks.Administrator.setAdministratorSettingRequest inValue = new Zenworks.Administrator.setAdministratorSettingRequest();
            inValue.userUID = userUID;
            inValue.settings = settings;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).setAdministratorSettingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.setAllRoleContextsResponse Zenworks.Administrator.AdministratorAdminService.setAllRoleContexts(Zenworks.Administrator.setAllRoleContextsRequest request) {
            return base.Channel.setAllRoleContexts(request);
        }
        
        public bool setAllRoleContexts(string adminUID, string roleUID, Zenworks.Administrator.RightsCategoryContextUIDs[] categoryContexts) {
            Zenworks.Administrator.setAllRoleContextsRequest inValue = new Zenworks.Administrator.setAllRoleContextsRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            inValue.categoryContexts = categoryContexts;
            Zenworks.Administrator.setAllRoleContextsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).setAllRoleContexts(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.setAllRoleContextsResponse> Zenworks.Administrator.AdministratorAdminService.setAllRoleContextsAsync(Zenworks.Administrator.setAllRoleContextsRequest request) {
            return base.Channel.setAllRoleContextsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.setAllRoleContextsResponse> setAllRoleContextsAsync(string adminUID, string roleUID, Zenworks.Administrator.RightsCategoryContextUIDs[] categoryContexts) {
            Zenworks.Administrator.setAllRoleContextsRequest inValue = new Zenworks.Administrator.setAllRoleContextsRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            inValue.categoryContexts = categoryContexts;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).setAllRoleContextsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.setPasswordResponse Zenworks.Administrator.AdministratorAdminService.setPassword(Zenworks.Administrator.setPasswordRequest request) {
            return base.Channel.setPassword(request);
        }
        
        public bool setPassword(string adminName, string oldPassword, string newPassword) {
            Zenworks.Administrator.setPasswordRequest inValue = new Zenworks.Administrator.setPasswordRequest();
            inValue.adminName = adminName;
            inValue.oldPassword = oldPassword;
            inValue.newPassword = newPassword;
            Zenworks.Administrator.setPasswordResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).setPassword(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.setPasswordResponse> Zenworks.Administrator.AdministratorAdminService.setPasswordAsync(Zenworks.Administrator.setPasswordRequest request) {
            return base.Channel.setPasswordAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.setPasswordResponse> setPasswordAsync(string adminName, string oldPassword, string newPassword) {
            Zenworks.Administrator.setPasswordRequest inValue = new Zenworks.Administrator.setPasswordRequest();
            inValue.adminName = adminName;
            inValue.oldPassword = oldPassword;
            inValue.newPassword = newPassword;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).setPasswordAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.setRoleContextsResponse Zenworks.Administrator.AdministratorAdminService.setRoleContexts(Zenworks.Administrator.setRoleContextsRequest request) {
            return base.Channel.setRoleContexts(request);
        }
        
        public bool setRoleContexts(string adminUID, string roleUID, Zenworks.Administrator.RightsCategoryContextUIDs categoryContexts) {
            Zenworks.Administrator.setRoleContextsRequest inValue = new Zenworks.Administrator.setRoleContextsRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            inValue.categoryContexts = categoryContexts;
            Zenworks.Administrator.setRoleContextsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).setRoleContexts(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.setRoleContextsResponse> Zenworks.Administrator.AdministratorAdminService.setRoleContextsAsync(Zenworks.Administrator.setRoleContextsRequest request) {
            return base.Channel.setRoleContextsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.setRoleContextsResponse> setRoleContextsAsync(string adminUID, string roleUID, Zenworks.Administrator.RightsCategoryContextUIDs categoryContexts) {
            Zenworks.Administrator.setRoleContextsRequest inValue = new Zenworks.Administrator.setRoleContextsRequest();
            inValue.adminUID = adminUID;
            inValue.roleUID = roleUID;
            inValue.categoryContexts = categoryContexts;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).setRoleContextsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.setSettingResponse Zenworks.Administrator.AdministratorAdminService.setSetting(Zenworks.Administrator.setSettingRequest request) {
            return base.Channel.setSetting(request);
        }
        
        public bool setSetting(string userUID, string name, string settings) {
            Zenworks.Administrator.setSettingRequest inValue = new Zenworks.Administrator.setSettingRequest();
            inValue.userUID = userUID;
            inValue.name = name;
            inValue.settings = settings;
            Zenworks.Administrator.setSettingResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).setSetting(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.setSettingResponse> Zenworks.Administrator.AdministratorAdminService.setSettingAsync(Zenworks.Administrator.setSettingRequest request) {
            return base.Channel.setSettingAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.setSettingResponse> setSettingAsync(string userUID, string name, string settings) {
            Zenworks.Administrator.setSettingRequest inValue = new Zenworks.Administrator.setSettingRequest();
            inValue.userUID = userUID;
            inValue.name = name;
            inValue.settings = settings;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).setSettingAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.updateResponse Zenworks.Administrator.AdministratorAdminService.update(Zenworks.Administrator.updateRequest request) {
            return base.Channel.update(request);
        }
        
        public bool update(Zenworks.Administrator.ZENObject @object) {
            Zenworks.Administrator.updateRequest inValue = new Zenworks.Administrator.updateRequest();
            inValue.@object = @object;
            Zenworks.Administrator.updateResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).update(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.updateResponse> Zenworks.Administrator.AdministratorAdminService.updateAsync(Zenworks.Administrator.updateRequest request) {
            return base.Channel.updateAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.updateResponse> updateAsync(Zenworks.Administrator.ZENObject @object) {
            Zenworks.Administrator.updateRequest inValue = new Zenworks.Administrator.updateRequest();
            inValue.@object = @object;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).updateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.validateCredentialsResponse Zenworks.Administrator.AdministratorAdminService.validateCredentials(Zenworks.Administrator.validateCredentialsRequest request) {
            return base.Channel.validateCredentials(request);
        }
        
        public bool validateCredentials(string adminName, string oldpassword) {
            Zenworks.Administrator.validateCredentialsRequest inValue = new Zenworks.Administrator.validateCredentialsRequest();
            inValue.adminName = adminName;
            inValue.oldpassword = oldpassword;
            Zenworks.Administrator.validateCredentialsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).validateCredentials(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.validateCredentialsResponse> Zenworks.Administrator.AdministratorAdminService.validateCredentialsAsync(Zenworks.Administrator.validateCredentialsRequest request) {
            return base.Channel.validateCredentialsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.validateCredentialsResponse> validateCredentialsAsync(string adminName, string oldpassword) {
            Zenworks.Administrator.validateCredentialsRequest inValue = new Zenworks.Administrator.validateCredentialsRequest();
            inValue.adminName = adminName;
            inValue.oldpassword = oldpassword;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).validateCredentialsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.computeAdminRightsResponse Zenworks.Administrator.AdministratorAdminService.computeAdminRights(Zenworks.Administrator.computeAdminRightsRequest request) {
            return base.Channel.computeAdminRights(request);
        }
        
        public bool computeAdminRights(string adminUID) {
            Zenworks.Administrator.computeAdminRightsRequest inValue = new Zenworks.Administrator.computeAdminRightsRequest();
            inValue.adminUID = adminUID;
            Zenworks.Administrator.computeAdminRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).computeAdminRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.computeAdminRightsResponse> Zenworks.Administrator.AdministratorAdminService.computeAdminRightsAsync(Zenworks.Administrator.computeAdminRightsRequest request) {
            return base.Channel.computeAdminRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.computeAdminRightsResponse> computeAdminRightsAsync(string adminUID) {
            Zenworks.Administrator.computeAdminRightsRequest inValue = new Zenworks.Administrator.computeAdminRightsRequest();
            inValue.adminUID = adminUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).computeAdminRightsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Administrator.computeSuperAdminRightsResponse Zenworks.Administrator.AdministratorAdminService.computeSuperAdminRights(Zenworks.Administrator.computeSuperAdminRightsRequest request) {
            return base.Channel.computeSuperAdminRights(request);
        }
        
        public bool computeSuperAdminRights(string adminUID) {
            Zenworks.Administrator.computeSuperAdminRightsRequest inValue = new Zenworks.Administrator.computeSuperAdminRightsRequest();
            inValue.adminUID = adminUID;
            Zenworks.Administrator.computeSuperAdminRightsResponse retVal = ((Zenworks.Administrator.AdministratorAdminService)(this)).computeSuperAdminRights(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Administrator.computeSuperAdminRightsResponse> Zenworks.Administrator.AdministratorAdminService.computeSuperAdminRightsAsync(Zenworks.Administrator.computeSuperAdminRightsRequest request) {
            return base.Channel.computeSuperAdminRightsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Administrator.computeSuperAdminRightsResponse> computeSuperAdminRightsAsync(string adminUID) {
            Zenworks.Administrator.computeSuperAdminRightsRequest inValue = new Zenworks.Administrator.computeSuperAdminRightsRequest();
            inValue.adminUID = adminUID;
            return ((Zenworks.Administrator.AdministratorAdminService)(this)).computeSuperAdminRightsAsync(inValue);
        }
    }
}
