//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zenworks.Grouping {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/exceptions")]
    public partial class RemoteDataModelException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int codeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", ConfigurationName="Grouping.GroupingService")]
    public interface GroupingService {
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (addGroupsRequest) von Nachricht "addGroupsRequest" nicht mit dem Standardwert (addGroups) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addG" +
            "roupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addG" +
            "roupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.addGroupsResponse addGroups(Zenworks.Grouping.addGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addG" +
            "roupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addG" +
            "roupsResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.addGroupsResponse> addGroupsAsync(Zenworks.Grouping.addGroupsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (addGroupsWithTokenRequest) von Nachricht "addGroupsWithTokenRequest" nicht mit dem Standardwert (addGroupsWithToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addG" +
            "roupsWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addG" +
            "roupsWithTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.addGroupsWithTokenResponse addGroupsWithToken(Zenworks.Grouping.addGroupsWithTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addG" +
            "roupsWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addG" +
            "roupsWithTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.addGroupsWithTokenResponse> addGroupsWithTokenAsync(Zenworks.Grouping.addGroupsWithTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (addMembersRequest) von Nachricht "addMembersRequest" nicht mit dem Standardwert (addMembers) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addM" +
            "embersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addM" +
            "embersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.addMembersResponse addMembers(Zenworks.Grouping.addMembersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addM" +
            "embersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addM" +
            "embersResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.addMembersResponse> addMembersAsync(Zenworks.Grouping.addMembersRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (addMembersWithTokenRequest) von Nachricht "addMembersWithTokenRequest" nicht mit dem Standardwert (addMembersWithToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addM" +
            "embersWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addM" +
            "embersWithTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.addMembersWithTokenResponse addMembersWithToken(Zenworks.Grouping.addMembersWithTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addM" +
            "embersWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/addM" +
            "embersWithTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.addMembersWithTokenResponse> addMembersWithTokenAsync(Zenworks.Grouping.addMembersWithTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllGroupsRequest) von Nachricht "getAllGroupsRequest" nicht mit dem Standardwert (getAllGroups) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llGroupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getAllGroupsResponse getAllGroups(Zenworks.Grouping.getAllGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llGroupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llGroupsResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getAllGroupsResponse> getAllGroupsAsync(Zenworks.Grouping.getAllGroupsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllGroupsWithTokenRequest) von Nachricht "getAllGroupsWithTokenRequest" nicht mit dem Standardwert (getAllGroupsWithToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llGroupsWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llGroupsWithTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getAllGroupsWithTokenResponse getAllGroupsWithToken(Zenworks.Grouping.getAllGroupsWithTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llGroupsWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llGroupsWithTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getAllGroupsWithTokenResponse> getAllGroupsWithTokenAsync(Zenworks.Grouping.getAllGroupsWithTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllMembersRequest) von Nachricht "getAllMembersRequest" nicht mit dem Standardwert (getAllMembers) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llMembersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llMembersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getAllMembersResponse getAllMembers(Zenworks.Grouping.getAllMembersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llMembersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llMembersResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getAllMembersResponse> getAllMembersAsync(Zenworks.Grouping.getAllMembersRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllMembersWithTokenRequest) von Nachricht "getAllMembersWithTokenRequest" nicht mit dem Standardwert (getAllMembersWithToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llMembersWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llMembersWithTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getAllMembersWithTokenResponse getAllMembersWithToken(Zenworks.Grouping.getAllMembersWithTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llMembersWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getA" +
            "llMembersWithTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getAllMembersWithTokenResponse> getAllMembersWithTokenAsync(Zenworks.Grouping.getAllMembersWithTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getGroupMemberTokenRequest) von Nachricht "getGroupMemberTokenRequest" nicht mit dem Standardwert (getGroupMemberToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupMemberTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupMemberTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getGroupMemberTokenResponse getGroupMemberToken(Zenworks.Grouping.getGroupMemberTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupMemberTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupMemberTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getGroupMemberTokenResponse> getGroupMemberTokenAsync(Zenworks.Grouping.getGroupMemberTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getGroupTokenRequest) von Nachricht "getGroupTokenRequest" nicht mit dem Standardwert (getGroupToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getGroupTokenResponse getGroupToken(Zenworks.Grouping.getGroupTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getGroupTokenResponse> getGroupTokenAsync(Zenworks.Grouping.getGroupTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getGroupsRequest) von Nachricht "getGroupsRequest" nicht mit dem Standardwert (getGroups) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getGroupsResponse getGroups(Zenworks.Grouping.getGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getG" +
            "roupsResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getGroupsResponse> getGroupsAsync(Zenworks.Grouping.getGroupsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getMembersRequest) von Nachricht "getMembersRequest" nicht mit dem Standardwert (getMembers) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getM" +
            "embersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getM" +
            "embersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getMembersResponse getMembers(Zenworks.Grouping.getMembersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getM" +
            "embersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getM" +
            "embersResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getMembersResponse> getMembersAsync(Zenworks.Grouping.getMembersRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getValidGroupTypesRequest) von Nachricht "getValidGroupTypesRequest" nicht mit dem Standardwert (getValidGroupTypes) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getV" +
            "alidGroupTypesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getV" +
            "alidGroupTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getValidGroupTypesResponse getValidGroupTypes(Zenworks.Grouping.getValidGroupTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getV" +
            "alidGroupTypesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getV" +
            "alidGroupTypesResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getValidGroupTypesResponse> getValidGroupTypesAsync(Zenworks.Grouping.getValidGroupTypesRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getValidMemberTypesRequest) von Nachricht "getValidMemberTypesRequest" nicht mit dem Standardwert (getValidMemberTypes) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getV" +
            "alidMemberTypesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getV" +
            "alidMemberTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.getValidMemberTypesResponse getValidMemberTypes(Zenworks.Grouping.getValidMemberTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getV" +
            "alidMemberTypesRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/getV" +
            "alidMemberTypesResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.getValidMemberTypesResponse> getValidMemberTypesAsync(Zenworks.Grouping.getValidMemberTypesRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (moveGroupsRequest) von Nachricht "moveGroupsRequest" nicht mit dem Standardwert (moveGroups) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/move" +
            "GroupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/move" +
            "GroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.moveGroupsResponse moveGroups(Zenworks.Grouping.moveGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/move" +
            "GroupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/move" +
            "GroupsResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.moveGroupsResponse> moveGroupsAsync(Zenworks.Grouping.moveGroupsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (moveMembersRequest) von Nachricht "moveMembersRequest" nicht mit dem Standardwert (moveMembers) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/move" +
            "MembersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/move" +
            "MembersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.moveMembersResponse moveMembers(Zenworks.Grouping.moveMembersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/move" +
            "MembersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/move" +
            "MembersResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.moveMembersResponse> moveMembersAsync(Zenworks.Grouping.moveMembersRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (refreshGroupMemberTokenRequest) von Nachricht "refreshGroupMemberTokenRequest" nicht mit dem Standardwert (refreshGroupMemberToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/refr" +
            "eshGroupMemberTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/refr" +
            "eshGroupMemberTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.refreshGroupMemberTokenResponse refreshGroupMemberToken(Zenworks.Grouping.refreshGroupMemberTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/refr" +
            "eshGroupMemberTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/refr" +
            "eshGroupMemberTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.refreshGroupMemberTokenResponse> refreshGroupMemberTokenAsync(Zenworks.Grouping.refreshGroupMemberTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (refreshGroupTokenRequest) von Nachricht "refreshGroupTokenRequest" nicht mit dem Standardwert (refreshGroupToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/refr" +
            "eshGroupTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/refr" +
            "eshGroupTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.refreshGroupTokenResponse refreshGroupToken(Zenworks.Grouping.refreshGroupTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/refr" +
            "eshGroupTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/refr" +
            "eshGroupTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.refreshGroupTokenResponse> refreshGroupTokenAsync(Zenworks.Grouping.refreshGroupTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (releaseGroupMemberTokenRequest) von Nachricht "releaseGroupMemberTokenRequest" nicht mit dem Standardwert (releaseGroupMemberToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/rele" +
            "aseGroupMemberTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/rele" +
            "aseGroupMemberTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.releaseGroupMemberTokenResponse releaseGroupMemberToken(Zenworks.Grouping.releaseGroupMemberTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/rele" +
            "aseGroupMemberTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/rele" +
            "aseGroupMemberTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.releaseGroupMemberTokenResponse> releaseGroupMemberTokenAsync(Zenworks.Grouping.releaseGroupMemberTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (releaseGroupTokenRequest) von Nachricht "releaseGroupTokenRequest" nicht mit dem Standardwert (releaseGroupToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/rele" +
            "aseGroupTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/rele" +
            "aseGroupTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.releaseGroupTokenResponse releaseGroupToken(Zenworks.Grouping.releaseGroupTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/rele" +
            "aseGroupTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/rele" +
            "aseGroupTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.releaseGroupTokenResponse> releaseGroupTokenAsync(Zenworks.Grouping.releaseGroupTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (removeGroupsRequest) von Nachricht "removeGroupsRequest" nicht mit dem Standardwert (removeGroups) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veGroupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.removeGroupsResponse removeGroups(Zenworks.Grouping.removeGroupsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veGroupsRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veGroupsResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.removeGroupsResponse> removeGroupsAsync(Zenworks.Grouping.removeGroupsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (removeGroupsWithTokenRequest) von Nachricht "removeGroupsWithTokenRequest" nicht mit dem Standardwert (removeGroupsWithToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veGroupsWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veGroupsWithTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.removeGroupsWithTokenResponse removeGroupsWithToken(Zenworks.Grouping.removeGroupsWithTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veGroupsWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veGroupsWithTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.removeGroupsWithTokenResponse> removeGroupsWithTokenAsync(Zenworks.Grouping.removeGroupsWithTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (removeMembersRequest) von Nachricht "removeMembersRequest" nicht mit dem Standardwert (removeMembers) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veMembersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veMembersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.removeMembersResponse removeMembers(Zenworks.Grouping.removeMembersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veMembersRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veMembersResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.removeMembersResponse> removeMembersAsync(Zenworks.Grouping.removeMembersRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (removeMembersWithTokenRequest) von Nachricht "removeMembersWithTokenRequest" nicht mit dem Standardwert (removeMembersWithToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veMembersWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veMembersWithTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Grouping.RemoteDataModelException), Action="http://www.w3.org/2005/08/addressing/soap/fault", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Grouping.removeMembersWithTokenResponse removeMembersWithToken(Zenworks.Grouping.removeMembersWithTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veMembersWithTokenRequest", ReplyAction="http://novell.com/zenworks/datamodel/services/groupings/soap/GroupingService/remo" +
            "veMembersWithTokenResponse")]
        System.Threading.Tasks.Task<Zenworks.Grouping.removeMembersWithTokenResponse> removeMembersWithTokenAsync(Zenworks.Grouping.removeMembersWithTokenRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addGroupsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class addGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public string memberUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public string groupType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("groupUIDs")]
        public string[] groupUIDs;
        
        public addGroupsRequest() {
        }
        
        public addGroupsRequest(string memberUID, string groupType, string[] groupUIDs) {
            this.memberUID = memberUID;
            this.groupType = groupType;
            this.groupUIDs = groupUIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addGroupsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class addGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public bool @return;
        
        public addGroupsResponse() {
        }
        
        public addGroupsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/groupings")]
    public partial class GroupToken : Token {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/groupings", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchToken))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupToken))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupMemberToken))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class Token : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uIDField;
        
        private int countField;
        
        private bool countCompleteField;
        
        private bool orderedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
                this.RaisePropertyChanged("UID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("Count");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool CountComplete {
            get {
                return this.countCompleteField;
            }
            set {
                this.countCompleteField = value;
                this.RaisePropertyChanged("CountComplete");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Ordered {
            get {
                return this.orderedField;
            }
            set {
                this.orderedField = value;
                this.RaisePropertyChanged("Ordered");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class SearchToken : Token {
        
        private string adminIDField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AdminID {
            get {
                return this.adminIDField;
            }
            set {
                this.adminIDField = value;
                this.RaisePropertyChanged("AdminID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/groupings")]
    public partial class GroupMemberToken : Token {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/groupings", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addGroupsWithTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class addGroupsWithTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("groupUIDs")]
        public string[] groupUIDs;
        
        public addGroupsWithTokenRequest() {
        }
        
        public addGroupsWithTokenRequest(Zenworks.Grouping.GroupToken token, string[] groupUIDs) {
            this.token = token;
            this.groupUIDs = groupUIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addGroupsWithTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class addGroupsWithTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken @return;
        
        public addGroupsWithTokenResponse() {
        }
        
        public addGroupsWithTokenResponse(Zenworks.Grouping.GroupToken @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addMembersRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class addMembersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public string groupUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public string groupType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("memberUIDs")]
        public string[] memberUIDs;
        
        public addMembersRequest() {
        }
        
        public addMembersRequest(string groupUID, string groupType, string[] memberUIDs) {
            this.groupUID = groupUID;
            this.groupType = groupType;
            this.memberUIDs = memberUIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addMembersResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class addMembersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public bool @return;
        
        public addMembersResponse() {
        }
        
        public addMembersResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addMembersWithTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class addMembersWithTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("memberUIDs")]
        public string[] memberUIDs;
        
        public addMembersWithTokenRequest() {
        }
        
        public addMembersWithTokenRequest(Zenworks.Grouping.GroupMemberToken token, string[] memberUIDs) {
            this.token = token;
            this.memberUIDs = memberUIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addMembersWithTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class addMembersWithTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken @return;
        
        public addMembersWithTokenResponse() {
        }
        
        public addMembersWithTokenResponse(Zenworks.Grouping.GroupMemberToken @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllGroupsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getAllGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public string memberUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public string groupType;
        
        public getAllGroupsRequest() {
        }
        
        public getAllGroupsRequest(string memberUID, string groupType) {
            this.memberUID = memberUID;
            this.groupType = groupType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllGroupsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getAllGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getAllGroupsResponse() {
        }
        
        public getAllGroupsResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllGroupsWithTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getAllGroupsWithTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken token;
        
        public getAllGroupsWithTokenRequest() {
        }
        
        public getAllGroupsWithTokenRequest(Zenworks.Grouping.GroupToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllGroupsWithTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getAllGroupsWithTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getAllGroupsWithTokenResponse() {
        }
        
        public getAllGroupsWithTokenResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllMembersRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getAllMembersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public string groupUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public string groupType;
        
        public getAllMembersRequest() {
        }
        
        public getAllMembersRequest(string groupUID, string groupType) {
            this.groupUID = groupUID;
            this.groupType = groupType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllMembersResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getAllMembersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getAllMembersResponse() {
        }
        
        public getAllMembersResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllMembersWithTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getAllMembersWithTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken token;
        
        public getAllMembersWithTokenRequest() {
        }
        
        public getAllMembersWithTokenRequest(Zenworks.Grouping.GroupMemberToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllMembersWithTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getAllMembersWithTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getAllMembersWithTokenResponse() {
        }
        
        public getAllMembersWithTokenResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getGroupMemberTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getGroupMemberTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public string groupUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public string groupType;
        
        public getGroupMemberTokenRequest() {
        }
        
        public getGroupMemberTokenRequest(string groupUID, string groupType) {
            this.groupUID = groupUID;
            this.groupType = groupType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getGroupMemberTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getGroupMemberTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken @return;
        
        public getGroupMemberTokenResponse() {
        }
        
        public getGroupMemberTokenResponse(Zenworks.Grouping.GroupMemberToken @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getGroupTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getGroupTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public string memberUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public string groupType;
        
        public getGroupTokenRequest() {
        }
        
        public getGroupTokenRequest(string memberUID, string groupType) {
            this.memberUID = memberUID;
            this.groupType = groupType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getGroupTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getGroupTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken @return;
        
        public getGroupTokenResponse() {
        }
        
        public getGroupTokenResponse(Zenworks.Grouping.GroupToken @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getGroupsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public int index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=2)]
        public int count;
        
        public getGroupsRequest() {
        }
        
        public getGroupsRequest(Zenworks.Grouping.GroupToken token, int index, int count) {
            this.token = token;
            this.index = index;
            this.count = count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getGroupsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getGroupsResponse() {
        }
        
        public getGroupsResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getMembersRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getMembersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public int index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=2)]
        public int count;
        
        public getMembersRequest() {
        }
        
        public getMembersRequest(Zenworks.Grouping.GroupMemberToken token, int index, int count) {
            this.token = token;
            this.index = index;
            this.count = count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getMembersResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getMembersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getMembersResponse() {
        }
        
        public getMembersResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class BasicObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uIDField;
        
        private string nameField;
        
        private string internalNameField;
        
        private string parentUIDField;
        
        private string pathField;
        
        private string internalPathField;
        
        private string primaryTypeField;
        
        private string subTypeField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
                this.RaisePropertyChanged("UID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string InternalName {
            get {
                return this.internalNameField;
            }
            set {
                this.internalNameField = value;
                this.RaisePropertyChanged("InternalName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ParentUID {
            get {
                return this.parentUIDField;
            }
            set {
                this.parentUIDField = value;
                this.RaisePropertyChanged("ParentUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
                this.RaisePropertyChanged("Path");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string InternalPath {
            get {
                return this.internalPathField;
            }
            set {
                this.internalPathField = value;
                this.RaisePropertyChanged("InternalPath");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string PrimaryType {
            get {
                return this.primaryTypeField;
            }
            set {
                this.primaryTypeField = value;
                this.RaisePropertyChanged("PrimaryType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string SubType {
            get {
                return this.subTypeField;
            }
            set {
                this.subTypeField = value;
                this.RaisePropertyChanged("SubType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=8)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getValidGroupTypesRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getValidGroupTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.BasicObject originalConsumerObj;
        
        public getValidGroupTypesRequest() {
        }
        
        public getValidGroupTypesRequest(Zenworks.Grouping.BasicObject originalConsumerObj) {
            this.originalConsumerObj = originalConsumerObj;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getValidGroupTypesResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getValidGroupTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getValidGroupTypesResponse() {
        }
        
        public getValidGroupTypesResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getValidMemberTypesRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getValidMemberTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public string groupType;
        
        public getValidMemberTypesRequest() {
        }
        
        public getValidMemberTypesRequest(string groupType) {
            this.groupType = groupType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getValidMemberTypesResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class getValidMemberTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getValidMemberTypesResponse() {
        }
        
        public getValidMemberTypesResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="moveGroupsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class moveGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("currentPositions")]
        public int[] currentPositions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=2)]
        public int offset;
        
        public moveGroupsRequest() {
        }
        
        public moveGroupsRequest(Zenworks.Grouping.GroupToken token, int[] currentPositions, int offset) {
            this.token = token;
            this.currentPositions = currentPositions;
            this.offset = offset;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="moveGroupsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class moveGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public bool @return;
        
        public moveGroupsResponse() {
        }
        
        public moveGroupsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="moveMembersRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class moveMembersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("currentPositions")]
        public int[] currentPositions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=2)]
        public int offset;
        
        public moveMembersRequest() {
        }
        
        public moveMembersRequest(Zenworks.Grouping.GroupMemberToken token, int[] currentPositions, int offset) {
            this.token = token;
            this.currentPositions = currentPositions;
            this.offset = offset;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="moveMembersResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class moveMembersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public bool @return;
        
        public moveMembersResponse() {
        }
        
        public moveMembersResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="refreshGroupMemberTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class refreshGroupMemberTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken token;
        
        public refreshGroupMemberTokenRequest() {
        }
        
        public refreshGroupMemberTokenRequest(Zenworks.Grouping.GroupMemberToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="refreshGroupMemberTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class refreshGroupMemberTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken @return;
        
        public refreshGroupMemberTokenResponse() {
        }
        
        public refreshGroupMemberTokenResponse(Zenworks.Grouping.GroupMemberToken @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="refreshGroupTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class refreshGroupTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken token;
        
        public refreshGroupTokenRequest() {
        }
        
        public refreshGroupTokenRequest(Zenworks.Grouping.GroupToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="refreshGroupTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class refreshGroupTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken @return;
        
        public refreshGroupTokenResponse() {
        }
        
        public refreshGroupTokenResponse(Zenworks.Grouping.GroupToken @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="releaseGroupMemberTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class releaseGroupMemberTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken token;
        
        public releaseGroupMemberTokenRequest() {
        }
        
        public releaseGroupMemberTokenRequest(Zenworks.Grouping.GroupMemberToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="releaseGroupMemberTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class releaseGroupMemberTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public bool @return;
        
        public releaseGroupMemberTokenResponse() {
        }
        
        public releaseGroupMemberTokenResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="releaseGroupTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class releaseGroupTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken token;
        
        public releaseGroupTokenRequest() {
        }
        
        public releaseGroupTokenRequest(Zenworks.Grouping.GroupToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="releaseGroupTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class releaseGroupTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public bool @return;
        
        public releaseGroupTokenResponse() {
        }
        
        public releaseGroupTokenResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeGroupsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class removeGroupsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public string memberUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public string groupType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("groupUIDs")]
        public string[] groupUIDs;
        
        public removeGroupsRequest() {
        }
        
        public removeGroupsRequest(string memberUID, string groupType, string[] groupUIDs) {
            this.memberUID = memberUID;
            this.groupType = groupType;
            this.groupUIDs = groupUIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeGroupsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class removeGroupsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public bool @return;
        
        public removeGroupsResponse() {
        }
        
        public removeGroupsResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeGroupsWithTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class removeGroupsWithTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("groupUIDs")]
        public string[] groupUIDs;
        
        public removeGroupsWithTokenRequest() {
        }
        
        public removeGroupsWithTokenRequest(Zenworks.Grouping.GroupToken token, string[] groupUIDs) {
            this.token = token;
            this.groupUIDs = groupUIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeGroupsWithTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class removeGroupsWithTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupToken @return;
        
        public removeGroupsWithTokenResponse() {
        }
        
        public removeGroupsWithTokenResponse(Zenworks.Grouping.GroupToken @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeMembersRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class removeMembersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public string groupUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        public string groupType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("memberUIDs")]
        public string[] memberUIDs;
        
        public removeMembersRequest() {
        }
        
        public removeMembersRequest(string groupUID, string groupType, string[] memberUIDs) {
            this.groupUID = groupUID;
            this.groupType = groupType;
            this.memberUIDs = memberUIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeMembersResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class removeMembersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public bool @return;
        
        public removeMembersResponse() {
        }
        
        public removeMembersResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeMembersWithTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class removeMembersWithTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("memberUIDs")]
        public string[] memberUIDs;
        
        public removeMembersWithTokenRequest() {
        }
        
        public removeMembersWithTokenRequest(Zenworks.Grouping.GroupMemberToken token, string[] memberUIDs) {
            this.token = token;
            this.memberUIDs = memberUIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeMembersWithTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/groupings/soap", IsWrapped=true)]
    public partial class removeMembersWithTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/groupings/soap", Order=0)]
        public Zenworks.Grouping.GroupMemberToken @return;
        
        public removeMembersWithTokenResponse() {
        }
        
        public removeMembersWithTokenResponse(Zenworks.Grouping.GroupMemberToken @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GroupingServiceChannel : Zenworks.Grouping.GroupingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GroupingServiceClient : System.ServiceModel.ClientBase<Zenworks.Grouping.GroupingService>, Zenworks.Grouping.GroupingService {
        
        public GroupingServiceClient() {
        }
        
        public GroupingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GroupingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GroupingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.addGroupsResponse Zenworks.Grouping.GroupingService.addGroups(Zenworks.Grouping.addGroupsRequest request) {
            return base.Channel.addGroups(request);
        }
        
        public bool addGroups(string memberUID, string groupType, string[] groupUIDs) {
            Zenworks.Grouping.addGroupsRequest inValue = new Zenworks.Grouping.addGroupsRequest();
            inValue.memberUID = memberUID;
            inValue.groupType = groupType;
            inValue.groupUIDs = groupUIDs;
            Zenworks.Grouping.addGroupsResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).addGroups(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.addGroupsResponse> Zenworks.Grouping.GroupingService.addGroupsAsync(Zenworks.Grouping.addGroupsRequest request) {
            return base.Channel.addGroupsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.addGroupsResponse> addGroupsAsync(string memberUID, string groupType, string[] groupUIDs) {
            Zenworks.Grouping.addGroupsRequest inValue = new Zenworks.Grouping.addGroupsRequest();
            inValue.memberUID = memberUID;
            inValue.groupType = groupType;
            inValue.groupUIDs = groupUIDs;
            return ((Zenworks.Grouping.GroupingService)(this)).addGroupsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.addGroupsWithTokenResponse Zenworks.Grouping.GroupingService.addGroupsWithToken(Zenworks.Grouping.addGroupsWithTokenRequest request) {
            return base.Channel.addGroupsWithToken(request);
        }
        
        public Zenworks.Grouping.GroupToken addGroupsWithToken(Zenworks.Grouping.GroupToken token, string[] groupUIDs) {
            Zenworks.Grouping.addGroupsWithTokenRequest inValue = new Zenworks.Grouping.addGroupsWithTokenRequest();
            inValue.token = token;
            inValue.groupUIDs = groupUIDs;
            Zenworks.Grouping.addGroupsWithTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).addGroupsWithToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.addGroupsWithTokenResponse> Zenworks.Grouping.GroupingService.addGroupsWithTokenAsync(Zenworks.Grouping.addGroupsWithTokenRequest request) {
            return base.Channel.addGroupsWithTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.addGroupsWithTokenResponse> addGroupsWithTokenAsync(Zenworks.Grouping.GroupToken token, string[] groupUIDs) {
            Zenworks.Grouping.addGroupsWithTokenRequest inValue = new Zenworks.Grouping.addGroupsWithTokenRequest();
            inValue.token = token;
            inValue.groupUIDs = groupUIDs;
            return ((Zenworks.Grouping.GroupingService)(this)).addGroupsWithTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.addMembersResponse Zenworks.Grouping.GroupingService.addMembers(Zenworks.Grouping.addMembersRequest request) {
            return base.Channel.addMembers(request);
        }
        
        public bool addMembers(string groupUID, string groupType, string[] memberUIDs) {
            Zenworks.Grouping.addMembersRequest inValue = new Zenworks.Grouping.addMembersRequest();
            inValue.groupUID = groupUID;
            inValue.groupType = groupType;
            inValue.memberUIDs = memberUIDs;
            Zenworks.Grouping.addMembersResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).addMembers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.addMembersResponse> Zenworks.Grouping.GroupingService.addMembersAsync(Zenworks.Grouping.addMembersRequest request) {
            return base.Channel.addMembersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.addMembersResponse> addMembersAsync(string groupUID, string groupType, string[] memberUIDs) {
            Zenworks.Grouping.addMembersRequest inValue = new Zenworks.Grouping.addMembersRequest();
            inValue.groupUID = groupUID;
            inValue.groupType = groupType;
            inValue.memberUIDs = memberUIDs;
            return ((Zenworks.Grouping.GroupingService)(this)).addMembersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.addMembersWithTokenResponse Zenworks.Grouping.GroupingService.addMembersWithToken(Zenworks.Grouping.addMembersWithTokenRequest request) {
            return base.Channel.addMembersWithToken(request);
        }
        
        public Zenworks.Grouping.GroupMemberToken addMembersWithToken(Zenworks.Grouping.GroupMemberToken token, string[] memberUIDs) {
            Zenworks.Grouping.addMembersWithTokenRequest inValue = new Zenworks.Grouping.addMembersWithTokenRequest();
            inValue.token = token;
            inValue.memberUIDs = memberUIDs;
            Zenworks.Grouping.addMembersWithTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).addMembersWithToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.addMembersWithTokenResponse> Zenworks.Grouping.GroupingService.addMembersWithTokenAsync(Zenworks.Grouping.addMembersWithTokenRequest request) {
            return base.Channel.addMembersWithTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.addMembersWithTokenResponse> addMembersWithTokenAsync(Zenworks.Grouping.GroupMemberToken token, string[] memberUIDs) {
            Zenworks.Grouping.addMembersWithTokenRequest inValue = new Zenworks.Grouping.addMembersWithTokenRequest();
            inValue.token = token;
            inValue.memberUIDs = memberUIDs;
            return ((Zenworks.Grouping.GroupingService)(this)).addMembersWithTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getAllGroupsResponse Zenworks.Grouping.GroupingService.getAllGroups(Zenworks.Grouping.getAllGroupsRequest request) {
            return base.Channel.getAllGroups(request);
        }
        
        public string[] getAllGroups(string memberUID, string groupType) {
            Zenworks.Grouping.getAllGroupsRequest inValue = new Zenworks.Grouping.getAllGroupsRequest();
            inValue.memberUID = memberUID;
            inValue.groupType = groupType;
            Zenworks.Grouping.getAllGroupsResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getAllGroups(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getAllGroupsResponse> Zenworks.Grouping.GroupingService.getAllGroupsAsync(Zenworks.Grouping.getAllGroupsRequest request) {
            return base.Channel.getAllGroupsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getAllGroupsResponse> getAllGroupsAsync(string memberUID, string groupType) {
            Zenworks.Grouping.getAllGroupsRequest inValue = new Zenworks.Grouping.getAllGroupsRequest();
            inValue.memberUID = memberUID;
            inValue.groupType = groupType;
            return ((Zenworks.Grouping.GroupingService)(this)).getAllGroupsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getAllGroupsWithTokenResponse Zenworks.Grouping.GroupingService.getAllGroupsWithToken(Zenworks.Grouping.getAllGroupsWithTokenRequest request) {
            return base.Channel.getAllGroupsWithToken(request);
        }
        
        public string[] getAllGroupsWithToken(Zenworks.Grouping.GroupToken token) {
            Zenworks.Grouping.getAllGroupsWithTokenRequest inValue = new Zenworks.Grouping.getAllGroupsWithTokenRequest();
            inValue.token = token;
            Zenworks.Grouping.getAllGroupsWithTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getAllGroupsWithToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getAllGroupsWithTokenResponse> Zenworks.Grouping.GroupingService.getAllGroupsWithTokenAsync(Zenworks.Grouping.getAllGroupsWithTokenRequest request) {
            return base.Channel.getAllGroupsWithTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getAllGroupsWithTokenResponse> getAllGroupsWithTokenAsync(Zenworks.Grouping.GroupToken token) {
            Zenworks.Grouping.getAllGroupsWithTokenRequest inValue = new Zenworks.Grouping.getAllGroupsWithTokenRequest();
            inValue.token = token;
            return ((Zenworks.Grouping.GroupingService)(this)).getAllGroupsWithTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getAllMembersResponse Zenworks.Grouping.GroupingService.getAllMembers(Zenworks.Grouping.getAllMembersRequest request) {
            return base.Channel.getAllMembers(request);
        }
        
        public string[] getAllMembers(string groupUID, string groupType) {
            Zenworks.Grouping.getAllMembersRequest inValue = new Zenworks.Grouping.getAllMembersRequest();
            inValue.groupUID = groupUID;
            inValue.groupType = groupType;
            Zenworks.Grouping.getAllMembersResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getAllMembers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getAllMembersResponse> Zenworks.Grouping.GroupingService.getAllMembersAsync(Zenworks.Grouping.getAllMembersRequest request) {
            return base.Channel.getAllMembersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getAllMembersResponse> getAllMembersAsync(string groupUID, string groupType) {
            Zenworks.Grouping.getAllMembersRequest inValue = new Zenworks.Grouping.getAllMembersRequest();
            inValue.groupUID = groupUID;
            inValue.groupType = groupType;
            return ((Zenworks.Grouping.GroupingService)(this)).getAllMembersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getAllMembersWithTokenResponse Zenworks.Grouping.GroupingService.getAllMembersWithToken(Zenworks.Grouping.getAllMembersWithTokenRequest request) {
            return base.Channel.getAllMembersWithToken(request);
        }
        
        public string[] getAllMembersWithToken(Zenworks.Grouping.GroupMemberToken token) {
            Zenworks.Grouping.getAllMembersWithTokenRequest inValue = new Zenworks.Grouping.getAllMembersWithTokenRequest();
            inValue.token = token;
            Zenworks.Grouping.getAllMembersWithTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getAllMembersWithToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getAllMembersWithTokenResponse> Zenworks.Grouping.GroupingService.getAllMembersWithTokenAsync(Zenworks.Grouping.getAllMembersWithTokenRequest request) {
            return base.Channel.getAllMembersWithTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getAllMembersWithTokenResponse> getAllMembersWithTokenAsync(Zenworks.Grouping.GroupMemberToken token) {
            Zenworks.Grouping.getAllMembersWithTokenRequest inValue = new Zenworks.Grouping.getAllMembersWithTokenRequest();
            inValue.token = token;
            return ((Zenworks.Grouping.GroupingService)(this)).getAllMembersWithTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getGroupMemberTokenResponse Zenworks.Grouping.GroupingService.getGroupMemberToken(Zenworks.Grouping.getGroupMemberTokenRequest request) {
            return base.Channel.getGroupMemberToken(request);
        }
        
        public Zenworks.Grouping.GroupMemberToken getGroupMemberToken(string groupUID, string groupType) {
            Zenworks.Grouping.getGroupMemberTokenRequest inValue = new Zenworks.Grouping.getGroupMemberTokenRequest();
            inValue.groupUID = groupUID;
            inValue.groupType = groupType;
            Zenworks.Grouping.getGroupMemberTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getGroupMemberToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getGroupMemberTokenResponse> Zenworks.Grouping.GroupingService.getGroupMemberTokenAsync(Zenworks.Grouping.getGroupMemberTokenRequest request) {
            return base.Channel.getGroupMemberTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getGroupMemberTokenResponse> getGroupMemberTokenAsync(string groupUID, string groupType) {
            Zenworks.Grouping.getGroupMemberTokenRequest inValue = new Zenworks.Grouping.getGroupMemberTokenRequest();
            inValue.groupUID = groupUID;
            inValue.groupType = groupType;
            return ((Zenworks.Grouping.GroupingService)(this)).getGroupMemberTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getGroupTokenResponse Zenworks.Grouping.GroupingService.getGroupToken(Zenworks.Grouping.getGroupTokenRequest request) {
            return base.Channel.getGroupToken(request);
        }
        
        public Zenworks.Grouping.GroupToken getGroupToken(string memberUID, string groupType) {
            Zenworks.Grouping.getGroupTokenRequest inValue = new Zenworks.Grouping.getGroupTokenRequest();
            inValue.memberUID = memberUID;
            inValue.groupType = groupType;
            Zenworks.Grouping.getGroupTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getGroupToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getGroupTokenResponse> Zenworks.Grouping.GroupingService.getGroupTokenAsync(Zenworks.Grouping.getGroupTokenRequest request) {
            return base.Channel.getGroupTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getGroupTokenResponse> getGroupTokenAsync(string memberUID, string groupType) {
            Zenworks.Grouping.getGroupTokenRequest inValue = new Zenworks.Grouping.getGroupTokenRequest();
            inValue.memberUID = memberUID;
            inValue.groupType = groupType;
            return ((Zenworks.Grouping.GroupingService)(this)).getGroupTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getGroupsResponse Zenworks.Grouping.GroupingService.getGroups(Zenworks.Grouping.getGroupsRequest request) {
            return base.Channel.getGroups(request);
        }
        
        public string[] getGroups(Zenworks.Grouping.GroupToken token, int index, int count) {
            Zenworks.Grouping.getGroupsRequest inValue = new Zenworks.Grouping.getGroupsRequest();
            inValue.token = token;
            inValue.index = index;
            inValue.count = count;
            Zenworks.Grouping.getGroupsResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getGroups(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getGroupsResponse> Zenworks.Grouping.GroupingService.getGroupsAsync(Zenworks.Grouping.getGroupsRequest request) {
            return base.Channel.getGroupsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getGroupsResponse> getGroupsAsync(Zenworks.Grouping.GroupToken token, int index, int count) {
            Zenworks.Grouping.getGroupsRequest inValue = new Zenworks.Grouping.getGroupsRequest();
            inValue.token = token;
            inValue.index = index;
            inValue.count = count;
            return ((Zenworks.Grouping.GroupingService)(this)).getGroupsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getMembersResponse Zenworks.Grouping.GroupingService.getMembers(Zenworks.Grouping.getMembersRequest request) {
            return base.Channel.getMembers(request);
        }
        
        public string[] getMembers(Zenworks.Grouping.GroupMemberToken token, int index, int count) {
            Zenworks.Grouping.getMembersRequest inValue = new Zenworks.Grouping.getMembersRequest();
            inValue.token = token;
            inValue.index = index;
            inValue.count = count;
            Zenworks.Grouping.getMembersResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getMembers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getMembersResponse> Zenworks.Grouping.GroupingService.getMembersAsync(Zenworks.Grouping.getMembersRequest request) {
            return base.Channel.getMembersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getMembersResponse> getMembersAsync(Zenworks.Grouping.GroupMemberToken token, int index, int count) {
            Zenworks.Grouping.getMembersRequest inValue = new Zenworks.Grouping.getMembersRequest();
            inValue.token = token;
            inValue.index = index;
            inValue.count = count;
            return ((Zenworks.Grouping.GroupingService)(this)).getMembersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getValidGroupTypesResponse Zenworks.Grouping.GroupingService.getValidGroupTypes(Zenworks.Grouping.getValidGroupTypesRequest request) {
            return base.Channel.getValidGroupTypes(request);
        }
        
        public string[] getValidGroupTypes(Zenworks.Grouping.BasicObject originalConsumerObj) {
            Zenworks.Grouping.getValidGroupTypesRequest inValue = new Zenworks.Grouping.getValidGroupTypesRequest();
            inValue.originalConsumerObj = originalConsumerObj;
            Zenworks.Grouping.getValidGroupTypesResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getValidGroupTypes(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getValidGroupTypesResponse> Zenworks.Grouping.GroupingService.getValidGroupTypesAsync(Zenworks.Grouping.getValidGroupTypesRequest request) {
            return base.Channel.getValidGroupTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getValidGroupTypesResponse> getValidGroupTypesAsync(Zenworks.Grouping.BasicObject originalConsumerObj) {
            Zenworks.Grouping.getValidGroupTypesRequest inValue = new Zenworks.Grouping.getValidGroupTypesRequest();
            inValue.originalConsumerObj = originalConsumerObj;
            return ((Zenworks.Grouping.GroupingService)(this)).getValidGroupTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.getValidMemberTypesResponse Zenworks.Grouping.GroupingService.getValidMemberTypes(Zenworks.Grouping.getValidMemberTypesRequest request) {
            return base.Channel.getValidMemberTypes(request);
        }
        
        public string[] getValidMemberTypes(string groupType) {
            Zenworks.Grouping.getValidMemberTypesRequest inValue = new Zenworks.Grouping.getValidMemberTypesRequest();
            inValue.groupType = groupType;
            Zenworks.Grouping.getValidMemberTypesResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).getValidMemberTypes(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.getValidMemberTypesResponse> Zenworks.Grouping.GroupingService.getValidMemberTypesAsync(Zenworks.Grouping.getValidMemberTypesRequest request) {
            return base.Channel.getValidMemberTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.getValidMemberTypesResponse> getValidMemberTypesAsync(string groupType) {
            Zenworks.Grouping.getValidMemberTypesRequest inValue = new Zenworks.Grouping.getValidMemberTypesRequest();
            inValue.groupType = groupType;
            return ((Zenworks.Grouping.GroupingService)(this)).getValidMemberTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.moveGroupsResponse Zenworks.Grouping.GroupingService.moveGroups(Zenworks.Grouping.moveGroupsRequest request) {
            return base.Channel.moveGroups(request);
        }
        
        public bool moveGroups(Zenworks.Grouping.GroupToken token, int[] currentPositions, int offset) {
            Zenworks.Grouping.moveGroupsRequest inValue = new Zenworks.Grouping.moveGroupsRequest();
            inValue.token = token;
            inValue.currentPositions = currentPositions;
            inValue.offset = offset;
            Zenworks.Grouping.moveGroupsResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).moveGroups(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.moveGroupsResponse> Zenworks.Grouping.GroupingService.moveGroupsAsync(Zenworks.Grouping.moveGroupsRequest request) {
            return base.Channel.moveGroupsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.moveGroupsResponse> moveGroupsAsync(Zenworks.Grouping.GroupToken token, int[] currentPositions, int offset) {
            Zenworks.Grouping.moveGroupsRequest inValue = new Zenworks.Grouping.moveGroupsRequest();
            inValue.token = token;
            inValue.currentPositions = currentPositions;
            inValue.offset = offset;
            return ((Zenworks.Grouping.GroupingService)(this)).moveGroupsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.moveMembersResponse Zenworks.Grouping.GroupingService.moveMembers(Zenworks.Grouping.moveMembersRequest request) {
            return base.Channel.moveMembers(request);
        }
        
        public bool moveMembers(Zenworks.Grouping.GroupMemberToken token, int[] currentPositions, int offset) {
            Zenworks.Grouping.moveMembersRequest inValue = new Zenworks.Grouping.moveMembersRequest();
            inValue.token = token;
            inValue.currentPositions = currentPositions;
            inValue.offset = offset;
            Zenworks.Grouping.moveMembersResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).moveMembers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.moveMembersResponse> Zenworks.Grouping.GroupingService.moveMembersAsync(Zenworks.Grouping.moveMembersRequest request) {
            return base.Channel.moveMembersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.moveMembersResponse> moveMembersAsync(Zenworks.Grouping.GroupMemberToken token, int[] currentPositions, int offset) {
            Zenworks.Grouping.moveMembersRequest inValue = new Zenworks.Grouping.moveMembersRequest();
            inValue.token = token;
            inValue.currentPositions = currentPositions;
            inValue.offset = offset;
            return ((Zenworks.Grouping.GroupingService)(this)).moveMembersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.refreshGroupMemberTokenResponse Zenworks.Grouping.GroupingService.refreshGroupMemberToken(Zenworks.Grouping.refreshGroupMemberTokenRequest request) {
            return base.Channel.refreshGroupMemberToken(request);
        }
        
        public Zenworks.Grouping.GroupMemberToken refreshGroupMemberToken(Zenworks.Grouping.GroupMemberToken token) {
            Zenworks.Grouping.refreshGroupMemberTokenRequest inValue = new Zenworks.Grouping.refreshGroupMemberTokenRequest();
            inValue.token = token;
            Zenworks.Grouping.refreshGroupMemberTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).refreshGroupMemberToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.refreshGroupMemberTokenResponse> Zenworks.Grouping.GroupingService.refreshGroupMemberTokenAsync(Zenworks.Grouping.refreshGroupMemberTokenRequest request) {
            return base.Channel.refreshGroupMemberTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.refreshGroupMemberTokenResponse> refreshGroupMemberTokenAsync(Zenworks.Grouping.GroupMemberToken token) {
            Zenworks.Grouping.refreshGroupMemberTokenRequest inValue = new Zenworks.Grouping.refreshGroupMemberTokenRequest();
            inValue.token = token;
            return ((Zenworks.Grouping.GroupingService)(this)).refreshGroupMemberTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.refreshGroupTokenResponse Zenworks.Grouping.GroupingService.refreshGroupToken(Zenworks.Grouping.refreshGroupTokenRequest request) {
            return base.Channel.refreshGroupToken(request);
        }
        
        public Zenworks.Grouping.GroupToken refreshGroupToken(Zenworks.Grouping.GroupToken token) {
            Zenworks.Grouping.refreshGroupTokenRequest inValue = new Zenworks.Grouping.refreshGroupTokenRequest();
            inValue.token = token;
            Zenworks.Grouping.refreshGroupTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).refreshGroupToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.refreshGroupTokenResponse> Zenworks.Grouping.GroupingService.refreshGroupTokenAsync(Zenworks.Grouping.refreshGroupTokenRequest request) {
            return base.Channel.refreshGroupTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.refreshGroupTokenResponse> refreshGroupTokenAsync(Zenworks.Grouping.GroupToken token) {
            Zenworks.Grouping.refreshGroupTokenRequest inValue = new Zenworks.Grouping.refreshGroupTokenRequest();
            inValue.token = token;
            return ((Zenworks.Grouping.GroupingService)(this)).refreshGroupTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.releaseGroupMemberTokenResponse Zenworks.Grouping.GroupingService.releaseGroupMemberToken(Zenworks.Grouping.releaseGroupMemberTokenRequest request) {
            return base.Channel.releaseGroupMemberToken(request);
        }
        
        public bool releaseGroupMemberToken(Zenworks.Grouping.GroupMemberToken token) {
            Zenworks.Grouping.releaseGroupMemberTokenRequest inValue = new Zenworks.Grouping.releaseGroupMemberTokenRequest();
            inValue.token = token;
            Zenworks.Grouping.releaseGroupMemberTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).releaseGroupMemberToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.releaseGroupMemberTokenResponse> Zenworks.Grouping.GroupingService.releaseGroupMemberTokenAsync(Zenworks.Grouping.releaseGroupMemberTokenRequest request) {
            return base.Channel.releaseGroupMemberTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.releaseGroupMemberTokenResponse> releaseGroupMemberTokenAsync(Zenworks.Grouping.GroupMemberToken token) {
            Zenworks.Grouping.releaseGroupMemberTokenRequest inValue = new Zenworks.Grouping.releaseGroupMemberTokenRequest();
            inValue.token = token;
            return ((Zenworks.Grouping.GroupingService)(this)).releaseGroupMemberTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.releaseGroupTokenResponse Zenworks.Grouping.GroupingService.releaseGroupToken(Zenworks.Grouping.releaseGroupTokenRequest request) {
            return base.Channel.releaseGroupToken(request);
        }
        
        public bool releaseGroupToken(Zenworks.Grouping.GroupToken token) {
            Zenworks.Grouping.releaseGroupTokenRequest inValue = new Zenworks.Grouping.releaseGroupTokenRequest();
            inValue.token = token;
            Zenworks.Grouping.releaseGroupTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).releaseGroupToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.releaseGroupTokenResponse> Zenworks.Grouping.GroupingService.releaseGroupTokenAsync(Zenworks.Grouping.releaseGroupTokenRequest request) {
            return base.Channel.releaseGroupTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.releaseGroupTokenResponse> releaseGroupTokenAsync(Zenworks.Grouping.GroupToken token) {
            Zenworks.Grouping.releaseGroupTokenRequest inValue = new Zenworks.Grouping.releaseGroupTokenRequest();
            inValue.token = token;
            return ((Zenworks.Grouping.GroupingService)(this)).releaseGroupTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.removeGroupsResponse Zenworks.Grouping.GroupingService.removeGroups(Zenworks.Grouping.removeGroupsRequest request) {
            return base.Channel.removeGroups(request);
        }
        
        public bool removeGroups(string memberUID, string groupType, string[] groupUIDs) {
            Zenworks.Grouping.removeGroupsRequest inValue = new Zenworks.Grouping.removeGroupsRequest();
            inValue.memberUID = memberUID;
            inValue.groupType = groupType;
            inValue.groupUIDs = groupUIDs;
            Zenworks.Grouping.removeGroupsResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).removeGroups(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.removeGroupsResponse> Zenworks.Grouping.GroupingService.removeGroupsAsync(Zenworks.Grouping.removeGroupsRequest request) {
            return base.Channel.removeGroupsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.removeGroupsResponse> removeGroupsAsync(string memberUID, string groupType, string[] groupUIDs) {
            Zenworks.Grouping.removeGroupsRequest inValue = new Zenworks.Grouping.removeGroupsRequest();
            inValue.memberUID = memberUID;
            inValue.groupType = groupType;
            inValue.groupUIDs = groupUIDs;
            return ((Zenworks.Grouping.GroupingService)(this)).removeGroupsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.removeGroupsWithTokenResponse Zenworks.Grouping.GroupingService.removeGroupsWithToken(Zenworks.Grouping.removeGroupsWithTokenRequest request) {
            return base.Channel.removeGroupsWithToken(request);
        }
        
        public Zenworks.Grouping.GroupToken removeGroupsWithToken(Zenworks.Grouping.GroupToken token, string[] groupUIDs) {
            Zenworks.Grouping.removeGroupsWithTokenRequest inValue = new Zenworks.Grouping.removeGroupsWithTokenRequest();
            inValue.token = token;
            inValue.groupUIDs = groupUIDs;
            Zenworks.Grouping.removeGroupsWithTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).removeGroupsWithToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.removeGroupsWithTokenResponse> Zenworks.Grouping.GroupingService.removeGroupsWithTokenAsync(Zenworks.Grouping.removeGroupsWithTokenRequest request) {
            return base.Channel.removeGroupsWithTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.removeGroupsWithTokenResponse> removeGroupsWithTokenAsync(Zenworks.Grouping.GroupToken token, string[] groupUIDs) {
            Zenworks.Grouping.removeGroupsWithTokenRequest inValue = new Zenworks.Grouping.removeGroupsWithTokenRequest();
            inValue.token = token;
            inValue.groupUIDs = groupUIDs;
            return ((Zenworks.Grouping.GroupingService)(this)).removeGroupsWithTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.removeMembersResponse Zenworks.Grouping.GroupingService.removeMembers(Zenworks.Grouping.removeMembersRequest request) {
            return base.Channel.removeMembers(request);
        }
        
        public bool removeMembers(string groupUID, string groupType, string[] memberUIDs) {
            Zenworks.Grouping.removeMembersRequest inValue = new Zenworks.Grouping.removeMembersRequest();
            inValue.groupUID = groupUID;
            inValue.groupType = groupType;
            inValue.memberUIDs = memberUIDs;
            Zenworks.Grouping.removeMembersResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).removeMembers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.removeMembersResponse> Zenworks.Grouping.GroupingService.removeMembersAsync(Zenworks.Grouping.removeMembersRequest request) {
            return base.Channel.removeMembersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.removeMembersResponse> removeMembersAsync(string groupUID, string groupType, string[] memberUIDs) {
            Zenworks.Grouping.removeMembersRequest inValue = new Zenworks.Grouping.removeMembersRequest();
            inValue.groupUID = groupUID;
            inValue.groupType = groupType;
            inValue.memberUIDs = memberUIDs;
            return ((Zenworks.Grouping.GroupingService)(this)).removeMembersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Grouping.removeMembersWithTokenResponse Zenworks.Grouping.GroupingService.removeMembersWithToken(Zenworks.Grouping.removeMembersWithTokenRequest request) {
            return base.Channel.removeMembersWithToken(request);
        }
        
        public Zenworks.Grouping.GroupMemberToken removeMembersWithToken(Zenworks.Grouping.GroupMemberToken token, string[] memberUIDs) {
            Zenworks.Grouping.removeMembersWithTokenRequest inValue = new Zenworks.Grouping.removeMembersWithTokenRequest();
            inValue.token = token;
            inValue.memberUIDs = memberUIDs;
            Zenworks.Grouping.removeMembersWithTokenResponse retVal = ((Zenworks.Grouping.GroupingService)(this)).removeMembersWithToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Grouping.removeMembersWithTokenResponse> Zenworks.Grouping.GroupingService.removeMembersWithTokenAsync(Zenworks.Grouping.removeMembersWithTokenRequest request) {
            return base.Channel.removeMembersWithTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Grouping.removeMembersWithTokenResponse> removeMembersWithTokenAsync(Zenworks.Grouping.GroupMemberToken token, string[] memberUIDs) {
            Zenworks.Grouping.removeMembersWithTokenRequest inValue = new Zenworks.Grouping.removeMembersWithTokenRequest();
            inValue.token = token;
            inValue.memberUIDs = memberUIDs;
            return ((Zenworks.Grouping.GroupingService)(this)).removeMembersWithTokenAsync(inValue);
        }
    }
}
