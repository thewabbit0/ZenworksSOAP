//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zenworks.Assignment {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/exceptions")]
    public partial class RemoteDataModelException : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int codeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments")]
    public partial class ExtraAssignmentData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private string typeField;
        
        private string valueField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments", Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments")]
    public partial class Assignment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uIDField;
        
        private string typeField;
        
        private int positionField;
        
        private bool positionModifiedField;
        
        private string consumerUIDField;
        
        private string contentUIDField;
        
        private ExtraAssignmentData[] extraDataField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
                this.RaisePropertyChanged("UID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
                this.RaisePropertyChanged("Position");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool PositionModified {
            get {
                return this.positionModifiedField;
            }
            set {
                this.positionModifiedField = value;
                this.RaisePropertyChanged("PositionModified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ConsumerUID {
            get {
                return this.consumerUIDField;
            }
            set {
                this.consumerUIDField = value;
                this.RaisePropertyChanged("ConsumerUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ContentUID {
            get {
                return this.contentUIDField;
            }
            set {
                this.contentUIDField = value;
                this.RaisePropertyChanged("ContentUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExtraData", Order=6)]
        public ExtraAssignmentData[] ExtraData {
            get {
                return this.extraDataField;
            }
            set {
                this.extraDataField = value;
                this.RaisePropertyChanged("ExtraData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments", Order=7)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", ConfigurationName="Assignment.AssignmentService")]
    public interface AssignmentService {
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (addAssignmentRequest) von Nachricht "addAssignmentRequest" nicht mit dem Standardwert (addAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/addAssignment", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/addAssignment", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.addAssignmentResponse addAssignment(Zenworks.Assignment.addAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/addAssignment", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.addAssignmentResponse> addAssignmentAsync(Zenworks.Assignment.addAssignmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (afterAssignmentsCompletedRequest) von Nachricht "afterAssignmentsCompletedRequest" nicht mit dem Standardwert (afterAssignmentsCompleted) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/afterAssignmentsCo" +
            "mpleted", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/afterAssignmentsCo" +
            "mpleted", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.afterAssignmentsCompletedResponse afterAssignmentsCompleted(Zenworks.Assignment.afterAssignmentsCompletedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/afterAssignmentsCo" +
            "mpleted", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.afterAssignmentsCompletedResponse> afterAssignmentsCompletedAsync(Zenworks.Assignment.afterAssignmentsCompletedRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (beforeAssignmentsAddedRequest) von Nachricht "beforeAssignmentsAddedRequest" nicht mit dem Standardwert (beforeAssignmentsAdded) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/beforeAssignmentsA" +
            "dded", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/beforeAssignmentsA" +
            "dded", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.beforeAssignmentsAddedResponse beforeAssignmentsAdded(Zenworks.Assignment.beforeAssignmentsAddedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/beforeAssignmentsA" +
            "dded", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.beforeAssignmentsAddedResponse> beforeAssignmentsAddedAsync(Zenworks.Assignment.beforeAssignmentsAddedRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (blockAssignmentRequest) von Nachricht "blockAssignmentRequest" nicht mit dem Standardwert (blockAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/blockAssignment", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/blockAssignment", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.blockAssignmentResponse blockAssignment(Zenworks.Assignment.blockAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/blockAssignment", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.blockAssignmentResponse> blockAssignmentAsync(Zenworks.Assignment.blockAssignmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (cloneAssignmentsRequest) von Nachricht "cloneAssignmentsRequest" nicht mit dem Standardwert (cloneAssignments) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/cloneAssignments", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/cloneAssignments", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.cloneAssignmentsResponse cloneAssignments(Zenworks.Assignment.cloneAssignmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/cloneAssignments", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.cloneAssignmentsResponse> cloneAssignmentsAsync(Zenworks.Assignment.cloneAssignmentsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (cloneConsumerAssignmentRequest) von Nachricht "cloneConsumerAssignmentRequest" nicht mit dem Standardwert (cloneConsumerAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/cloneConsumerAssig" +
            "nment", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/cloneConsumerAssig" +
            "nment", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.cloneConsumerAssignmentResponse cloneConsumerAssignment(Zenworks.Assignment.cloneConsumerAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/cloneConsumerAssig" +
            "nment", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.cloneConsumerAssignmentResponse> cloneConsumerAssignmentAsync(Zenworks.Assignment.cloneConsumerAssignmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllAssignmentsRequest) von Nachricht "getAllAssignmentsRequest" nicht mit dem Standardwert (getAllAssignments) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignments", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignments", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAllAssignmentsResponse getAllAssignments(Zenworks.Assignment.getAllAssignmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignments", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignmentsResponse> getAllAssignmentsAsync(Zenworks.Assignment.getAllAssignmentsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllAssignments2Request) von Nachricht "getAllAssignments2Request" nicht mit dem Standardwert (getAllAssignments2) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignments2" +
            "", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignments2" +
            "", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAllAssignments2Response getAllAssignments2(Zenworks.Assignment.getAllAssignments2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignments2" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignments2Response> getAllAssignments2Async(Zenworks.Assignment.getAllAssignments2Request request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllAssignmentsByTypeRequest) von Nachricht "getAllAssignmentsByTypeRequest" nicht mit dem Standardwert (getAllAssignmentsByType) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignmentsB" +
            "yType", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignmentsB" +
            "yType", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAllAssignmentsByTypeResponse getAllAssignmentsByType(Zenworks.Assignment.getAllAssignmentsByTypeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignmentsB" +
            "yType", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignmentsByTypeResponse> getAllAssignmentsByTypeAsync(Zenworks.Assignment.getAllAssignmentsByTypeRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAllAssignmentsWithTokenRequest) von Nachricht "getAllAssignmentsWithTokenRequest" nicht mit dem Standardwert (getAllAssignmentsWithToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignmentsW" +
            "ithToken", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignmentsW" +
            "ithToken", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAllAssignmentsWithTokenResponse getAllAssignmentsWithToken(Zenworks.Assignment.getAllAssignmentsWithTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAllAssignmentsW" +
            "ithToken", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignmentsWithTokenResponse> getAllAssignmentsWithTokenAsync(Zenworks.Assignment.getAllAssignmentsWithTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAssignedPendingAndTargetedDevicesCountRequest) von Nachricht "getAssignedPendingAndTargetedDevicesCountRequest" nicht mit dem Standardwert (getAssignedPendingAndTargetedDevicesCount) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignedPending" +
            "AndTargetedDevicesCount", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignedPending" +
            "AndTargetedDevicesCount", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountResponse getAssignedPendingAndTargetedDevicesCount(Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignedPending" +
            "AndTargetedDevicesCount", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountResponse> getAssignedPendingAndTargetedDevicesCountAsync(Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAssignmentRequest) von Nachricht "getAssignmentRequest" nicht mit dem Standardwert (getAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignment", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignment", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAssignmentResponse getAssignment(Zenworks.Assignment.getAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignment", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentResponse> getAssignmentAsync(Zenworks.Assignment.getAssignmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAssignmentByIDRequest) von Nachricht "getAssignmentByIDRequest" nicht mit dem Standardwert (getAssignmentByID) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentByID", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentByID", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAssignmentByIDResponse getAssignmentByID(Zenworks.Assignment.getAssignmentByIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentByID", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentByIDResponse> getAssignmentByIDAsync(Zenworks.Assignment.getAssignmentByIDRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAssignmentTokenRequest) von Nachricht "getAssignmentTokenRequest" nicht mit dem Standardwert (getAssignmentToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentToken" +
            "", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentToken" +
            "", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAssignmentTokenResponse getAssignmentToken(Zenworks.Assignment.getAssignmentTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentToken" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentTokenResponse> getAssignmentTokenAsync(Zenworks.Assignment.getAssignmentTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAssignmentTypeInformationRequest) von Nachricht "getAssignmentTypeInformationRequest" nicht mit dem Standardwert (getAssignmentTypeInformation) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentTypeI" +
            "nformation", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentTypeI" +
            "nformation", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAssignmentTypeInformationResponse getAssignmentTypeInformation(Zenworks.Assignment.getAssignmentTypeInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentTypeI" +
            "nformation", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentTypeInformationResponse> getAssignmentTypeInformationAsync(Zenworks.Assignment.getAssignmentTypeInformationRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAssignmentWithScheduleUIDRequest) von Nachricht "getAssignmentWithScheduleUIDRequest" nicht mit dem Standardwert (getAssignmentWithScheduleUID) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentWithS" +
            "cheduleUID", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentWithS" +
            "cheduleUID", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAssignmentWithScheduleUIDResponse getAssignmentWithScheduleUID(Zenworks.Assignment.getAssignmentWithScheduleUIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignmentWithS" +
            "cheduleUID", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentWithScheduleUIDResponse> getAssignmentWithScheduleUIDAsync(Zenworks.Assignment.getAssignmentWithScheduleUIDRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getAssignmentsRequest) von Nachricht "getAssignmentsRequest" nicht mit dem Standardwert (getAssignments) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignments", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignments", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getAssignmentsResponse getAssignments(Zenworks.Assignment.getAssignmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getAssignments", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentsResponse> getAssignmentsAsync(Zenworks.Assignment.getAssignmentsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getBlockedAssignmentsRequest) von Nachricht "getBlockedAssignmentsRequest" nicht mit dem Standardwert (getBlockedAssignments) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getBlockedAssignme" +
            "nts", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getBlockedAssignme" +
            "nts", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getBlockedAssignmentsResponse getBlockedAssignments(Zenworks.Assignment.getBlockedAssignmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getBlockedAssignme" +
            "nts", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getBlockedAssignmentsResponse> getBlockedAssignmentsAsync(Zenworks.Assignment.getBlockedAssignmentsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getBlockedDevicesORUsersRequest) von Nachricht "getBlockedDevicesORUsersRequest" nicht mit dem Standardwert (getBlockedDevicesORUsers) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getBlockedDevicesO" +
            "RUsers", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getBlockedDevicesO" +
            "RUsers", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getBlockedDevicesORUsersResponse getBlockedDevicesORUsers(Zenworks.Assignment.getBlockedDevicesORUsersRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getBlockedDevicesO" +
            "RUsers", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getBlockedDevicesORUsersResponse> getBlockedDevicesORUsersAsync(Zenworks.Assignment.getBlockedDevicesORUsersRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getBlockedDevicesORUsersCountRequest) von Nachricht "getBlockedDevicesORUsersCountRequest" nicht mit dem Standardwert (getBlockedDevicesORUsersCount) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getBlockedDevicesO" +
            "RUsersCount", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getBlockedDevicesO" +
            "RUsersCount", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getBlockedDevicesORUsersCountResponse getBlockedDevicesORUsersCount(Zenworks.Assignment.getBlockedDevicesORUsersCountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getBlockedDevicesO" +
            "RUsersCount", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getBlockedDevicesORUsersCountResponse> getBlockedDevicesORUsersCountAsync(Zenworks.Assignment.getBlockedDevicesORUsersCountRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getConsumerTypesRequest) von Nachricht "getConsumerTypesRequest" nicht mit dem Standardwert (getConsumerTypes) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getConsumerTypes", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getConsumerTypes", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getConsumerTypesResponse getConsumerTypes(Zenworks.Assignment.getConsumerTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getConsumerTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getConsumerTypesResponse> getConsumerTypesAsync(Zenworks.Assignment.getConsumerTypesRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getContentTypesRequest) von Nachricht "getContentTypesRequest" nicht mit dem Standardwert (getContentTypes) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getContentTypes", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getContentTypes", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getContentTypesResponse getContentTypes(Zenworks.Assignment.getContentTypesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getContentTypes", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getContentTypesResponse> getContentTypesAsync(Zenworks.Assignment.getContentTypesRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (getSchedulesRequest) von Nachricht "getSchedulesRequest" nicht mit dem Standardwert (getSchedules) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getSchedules", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getSchedules", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.getSchedulesResponse getSchedules(Zenworks.Assignment.getSchedulesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/getSchedules", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.getSchedulesResponse> getSchedulesAsync(Zenworks.Assignment.getSchedulesRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (isValidConsumerRequest) von Nachricht "isValidConsumerRequest" nicht mit dem Standardwert (isValidConsumer) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/isValidConsumer", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/isValidConsumer", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.isValidConsumerResponse isValidConsumer(Zenworks.Assignment.isValidConsumerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/isValidConsumer", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.isValidConsumerResponse> isValidConsumerAsync(Zenworks.Assignment.isValidConsumerRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (moveAssignmentRequest) von Nachricht "moveAssignmentRequest" nicht mit dem Standardwert (moveAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/moveAssignment", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/moveAssignment", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.moveAssignmentResponse moveAssignment(Zenworks.Assignment.moveAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/moveAssignment", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.moveAssignmentResponse> moveAssignmentAsync(Zenworks.Assignment.moveAssignmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (releaseAssignmentTokenRequest) von Nachricht "releaseAssignmentTokenRequest" nicht mit dem Standardwert (releaseAssignmentToken) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/releaseAssignmentT" +
            "oken", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/releaseAssignmentT" +
            "oken", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.releaseAssignmentTokenResponse releaseAssignmentToken(Zenworks.Assignment.releaseAssignmentTokenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/releaseAssignmentT" +
            "oken", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.releaseAssignmentTokenResponse> releaseAssignmentTokenAsync(Zenworks.Assignment.releaseAssignmentTokenRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (removeAllAssignmentsRequest) von Nachricht "removeAllAssignmentsRequest" nicht mit dem Standardwert (removeAllAssignments) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/removeAllAssignmen" +
            "ts", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/removeAllAssignmen" +
            "ts", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.removeAllAssignmentsResponse removeAllAssignments(Zenworks.Assignment.removeAllAssignmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/removeAllAssignmen" +
            "ts", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.removeAllAssignmentsResponse> removeAllAssignmentsAsync(Zenworks.Assignment.removeAllAssignmentsRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (removeAssignmentRequest) von Nachricht "removeAssignmentRequest" nicht mit dem Standardwert (removeAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/removeAssignment", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/removeAssignment", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.removeAssignmentResponse removeAssignment(Zenworks.Assignment.removeAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/removeAssignment", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.removeAssignmentResponse> removeAssignmentAsync(Zenworks.Assignment.removeAssignmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (removeAssignment2Request) von Nachricht "removeAssignment2Request" nicht mit dem Standardwert (removeAssignment2) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/removeAssignment2", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/removeAssignment2", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.removeAssignment2Response removeAssignment2(Zenworks.Assignment.removeAssignment2Request request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/removeAssignment2", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.removeAssignment2Response> removeAssignment2Async(Zenworks.Assignment.removeAssignment2Request request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (unblockAssignmentRequest) von Nachricht "unblockAssignmentRequest" nicht mit dem Standardwert (unblockAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/unblockAssignment", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/unblockAssignment", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.unblockAssignmentResponse unblockAssignment(Zenworks.Assignment.unblockAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/unblockAssignment", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.unblockAssignmentResponse> unblockAssignmentAsync(Zenworks.Assignment.unblockAssignmentRequest request);
        
        // CODEGEN: Der Nachrichtenvertrag wird generiert, da der Wrappername (updateAssignmentRequest) von Nachricht "updateAssignmentRequest" nicht mit dem Standardwert (updateAssignment) übereinstimmt.
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/updateAssignment", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Zenworks.Assignment.RemoteDataModelException), Action="http://novell.com/zenworks/datamodel/services/assignments/soap/updateAssignment", Name="RemoteDataModelException", Namespace="http://novell.com/zenworks/datamodel/exceptions")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Zenworks.Assignment.updateAssignmentResponse updateAssignment(Zenworks.Assignment.updateAssignmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://novell.com/zenworks/datamodel/services/assignments/soap/updateAssignment", ReplyAction="*")]
        System.Threading.Tasks.Task<Zenworks.Assignment.updateAssignmentResponse> updateAssignmentAsync(Zenworks.Assignment.updateAssignmentRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class addAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.Assignment data;
        
        public addAssignmentRequest() {
        }
        
        public addAssignmentRequest(Zenworks.Assignment.Assignment data) {
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="addAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class addAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public addAssignmentResponse() {
        }
        
        public addAssignmentResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="afterAssignmentsCompletedRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class afterAssignmentsCompletedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string objGUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("assignments")]
        public Zenworks.Assignment.Assignment[] assignments;
        
        public afterAssignmentsCompletedRequest() {
        }
        
        public afterAssignmentsCompletedRequest(string objGUID, Zenworks.Assignment.Assignment[] assignments) {
            this.objGUID = objGUID;
            this.assignments = assignments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="afterAssignmentsCompletedResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class afterAssignmentsCompletedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public afterAssignmentsCompletedResponse() {
        }
        
        public afterAssignmentsCompletedResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="beforeAssignmentsAddedRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class beforeAssignmentsAddedRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string contentUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("assignments")]
        public Zenworks.Assignment.Assignment[] assignments;
        
        public beforeAssignmentsAddedRequest() {
        }
        
        public beforeAssignmentsAddedRequest(string contentUID, Zenworks.Assignment.Assignment[] assignments) {
            this.contentUID = contentUID;
            this.assignments = assignments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="beforeAssignmentsAddedResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class beforeAssignmentsAddedResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public beforeAssignmentsAddedResponse() {
        }
        
        public beforeAssignmentsAddedResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments")]
    public partial class BlockedAssignment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string consumerUIDField;
        
        private string contentUIDField;
        
        private string assignmentUIDField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ConsumerUID {
            get {
                return this.consumerUIDField;
            }
            set {
                this.consumerUIDField = value;
                this.RaisePropertyChanged("ConsumerUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ContentUID {
            get {
                return this.contentUIDField;
            }
            set {
                this.contentUIDField = value;
                this.RaisePropertyChanged("ContentUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string AssignmentUID {
            get {
                return this.assignmentUIDField;
            }
            set {
                this.assignmentUIDField = value;
                this.RaisePropertyChanged("AssignmentUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments", Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="blockAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class blockAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.BlockedAssignment blockedAssignment;
        
        public blockAssignmentRequest() {
        }
        
        public blockAssignmentRequest(Zenworks.Assignment.BlockedAssignment blockedAssignment) {
            this.blockedAssignment = blockedAssignment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="blockAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class blockAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public blockAssignmentResponse() {
        }
        
        public blockAssignmentResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments")]
    public partial class AssignmentResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Assignment[] assignmentsAddedField;
        
        private Assignment[] assignmentsRemovedField;
        
        private AssignmentFailure[] assignmentsFailedField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AssignmentsAdded", Order=0)]
        public Assignment[] AssignmentsAdded {
            get {
                return this.assignmentsAddedField;
            }
            set {
                this.assignmentsAddedField = value;
                this.RaisePropertyChanged("AssignmentsAdded");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AssignmentsRemoved", Order=1)]
        public Assignment[] AssignmentsRemoved {
            get {
                return this.assignmentsRemovedField;
            }
            set {
                this.assignmentsRemovedField = value;
                this.RaisePropertyChanged("AssignmentsRemoved");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("AssignmentsFailed", Order=2)]
        public AssignmentFailure[] AssignmentsFailed {
            get {
                return this.assignmentsFailedField;
            }
            set {
                this.assignmentsFailedField = value;
                this.RaisePropertyChanged("AssignmentsFailed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments", Order=3)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments")]
    public partial class AssignmentFailure : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Assignment assignmentObjectField;
        
        private string errorMessageField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Assignment AssignmentObject {
            get {
                return this.assignmentObjectField;
            }
            set {
                this.assignmentObjectField = value;
                this.RaisePropertyChanged("AssignmentObject");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments", Order=2)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cloneAssignmentsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class cloneAssignmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string srcConsumerUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("contentUIDs")]
        public string[] contentUIDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("consumerUIDs")]
        public string[] consumerUIDs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=3)]
        public string assignmentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=4)]
        public bool deleteExistingAssignments;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=5)]
        public bool replaceExistingAssignments;
        
        public cloneAssignmentsRequest() {
        }
        
        public cloneAssignmentsRequest(string srcConsumerUID, string[] contentUIDs, string[] consumerUIDs, string assignmentType, bool deleteExistingAssignments, bool replaceExistingAssignments) {
            this.srcConsumerUID = srcConsumerUID;
            this.contentUIDs = contentUIDs;
            this.consumerUIDs = consumerUIDs;
            this.assignmentType = assignmentType;
            this.deleteExistingAssignments = deleteExistingAssignments;
            this.replaceExistingAssignments = replaceExistingAssignments;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cloneAssignmentsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class cloneAssignmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.AssignmentResult @return;
        
        public cloneAssignmentsResponse() {
        }
        
        public cloneAssignmentsResponse(Zenworks.Assignment.AssignmentResult @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cloneConsumerAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class cloneConsumerAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string srcConsumerUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public string contentUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=2)]
        public string targetConsumerUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=3)]
        public string assignmentType;
        
        public cloneConsumerAssignmentRequest() {
        }
        
        public cloneConsumerAssignmentRequest(string srcConsumerUID, string contentUID, string targetConsumerUID, string assignmentType) {
            this.srcConsumerUID = srcConsumerUID;
            this.contentUID = contentUID;
            this.targetConsumerUID = targetConsumerUID;
            this.assignmentType = assignmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="cloneConsumerAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class cloneConsumerAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.Assignment @return;
        
        public cloneConsumerAssignmentResponse() {
        }
        
        public cloneConsumerAssignmentResponse(Zenworks.Assignment.Assignment @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAssignmentsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAllAssignmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string objectUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public string assignmentType;
        
        public getAllAssignmentsRequest() {
        }
        
        public getAllAssignmentsRequest(string objectUID, string assignmentType) {
            this.objectUID = objectUID;
            this.assignmentType = assignmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAssignmentsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAllAssignmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Assignment.Assignment[] @return;
        
        public getAllAssignmentsResponse() {
        }
        
        public getAllAssignmentsResponse(Zenworks.Assignment.Assignment[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAssignments2Request", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAllAssignments2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string objectUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("assignmentTypes")]
        public string[] assignmentTypes;
        
        public getAllAssignments2Request() {
        }
        
        public getAllAssignments2Request(string objectUID, string[] assignmentTypes) {
            this.objectUID = objectUID;
            this.assignmentTypes = assignmentTypes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAssignments2Response", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAllAssignments2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Assignment.Assignment[] @return;
        
        public getAllAssignments2Response() {
        }
        
        public getAllAssignments2Response(Zenworks.Assignment.Assignment[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAssignmentsByTypeRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAllAssignmentsByTypeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("assignmentTypes")]
        public string[] assignmentTypes;
        
        public getAllAssignmentsByTypeRequest() {
        }
        
        public getAllAssignmentsByTypeRequest(string[] assignmentTypes) {
            this.assignmentTypes = assignmentTypes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAssignmentsByTypeResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAllAssignmentsByTypeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Assignment.Assignment[] @return;
        
        public getAllAssignmentsByTypeResponse() {
        }
        
        public getAllAssignmentsByTypeResponse(Zenworks.Assignment.Assignment[] @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments")]
    public partial class AssignmentToken : Token {
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments", Order=0)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SearchToken))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AssignmentToken))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class Token : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string uIDField;
        
        private int countField;
        
        private bool countCompleteField;
        
        private bool orderedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UID {
            get {
                return this.uIDField;
            }
            set {
                this.uIDField = value;
                this.RaisePropertyChanged("UID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("Count");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool CountComplete {
            get {
                return this.countCompleteField;
            }
            set {
                this.countCompleteField = value;
                this.RaisePropertyChanged("CountComplete");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Ordered {
            get {
                return this.orderedField;
            }
            set {
                this.orderedField = value;
                this.RaisePropertyChanged("Ordered");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects")]
    public partial class SearchToken : Token {
        
        private string adminIDField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AdminID {
            get {
                return this.adminIDField;
            }
            set {
                this.adminIDField = value;
                this.RaisePropertyChanged("AdminID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects", Order=1)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAssignmentsWithTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAllAssignmentsWithTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.AssignmentToken token;
        
        public getAllAssignmentsWithTokenRequest() {
        }
        
        public getAllAssignmentsWithTokenRequest(Zenworks.Assignment.AssignmentToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllAssignmentsWithTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAllAssignmentsWithTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Assignment.Assignment[] @return;
        
        public getAllAssignmentsWithTokenResponse() {
        }
        
        public getAllAssignmentsWithTokenResponse(Zenworks.Assignment.Assignment[] @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments")]
    public partial class AssignmentInfoFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int startingIndexField;
        
        private string[] targetTypesField;
        
        private string targetNameField;
        
        private string objectUIDField;
        
        private int consumerCategoryField;
        
        private int pageSizeField;
        
        private string sortOrderField;
        
        private int totalSizeField;
        
        private int versionField;
        
        private bool consolidatedStatusField;
        
        private string[] objectTypesStringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int StartingIndex {
            get {
                return this.startingIndexField;
            }
            set {
                this.startingIndexField = value;
                this.RaisePropertyChanged("StartingIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("TargetTypes", Order=1)]
        public string[] TargetTypes {
            get {
                return this.targetTypesField;
            }
            set {
                this.targetTypesField = value;
                this.RaisePropertyChanged("TargetTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TargetName {
            get {
                return this.targetNameField;
            }
            set {
                this.targetNameField = value;
                this.RaisePropertyChanged("TargetName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ObjectUID {
            get {
                return this.objectUIDField;
            }
            set {
                this.objectUIDField = value;
                this.RaisePropertyChanged("ObjectUID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int ConsumerCategory {
            get {
                return this.consumerCategoryField;
            }
            set {
                this.consumerCategoryField = value;
                this.RaisePropertyChanged("ConsumerCategory");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
                this.RaisePropertyChanged("PageSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string SortOrder {
            get {
                return this.sortOrderField;
            }
            set {
                this.sortOrderField = value;
                this.RaisePropertyChanged("SortOrder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int TotalSize {
            get {
                return this.totalSizeField;
            }
            set {
                this.totalSizeField = value;
                this.RaisePropertyChanged("TotalSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool ConsolidatedStatus {
            get {
                return this.consolidatedStatusField;
            }
            set {
                this.consolidatedStatusField = value;
                this.RaisePropertyChanged("ConsolidatedStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ObjectTypesString", Order=10)]
        public string[] ObjectTypesString {
            get {
                return this.objectTypesStringField;
            }
            set {
                this.objectTypesStringField = value;
                this.RaisePropertyChanged("ObjectTypesString");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignedPendingAndTargetedDevicesCountRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignedPendingAndTargetedDevicesCountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string objectUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public string assignmentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=2)]
        public Zenworks.Assignment.AssignmentInfoFilter aiFilter;
        
        public getAssignedPendingAndTargetedDevicesCountRequest() {
        }
        
        public getAssignedPendingAndTargetedDevicesCountRequest(string objectUID, string assignmentType, Zenworks.Assignment.AssignmentInfoFilter aiFilter) {
            this.objectUID = objectUID;
            this.assignmentType = assignmentType;
            this.aiFilter = aiFilter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignedPendingAndTargetedDevicesCountResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignedPendingAndTargetedDevicesCountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public int[] @return;
        
        public getAssignedPendingAndTargetedDevicesCountResponse() {
        }
        
        public getAssignedPendingAndTargetedDevicesCountResponse(int[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string consumerUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public string contentUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=2)]
        public string assignmentType;
        
        public getAssignmentRequest() {
        }
        
        public getAssignmentRequest(string consumerUID, string contentUID, string assignmentType) {
            this.consumerUID = consumerUID;
            this.contentUID = contentUID;
            this.assignmentType = assignmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.Assignment @return;
        
        public getAssignmentResponse() {
        }
        
        public getAssignmentResponse(Zenworks.Assignment.Assignment @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentByIDRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentByIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string assignmentID;
        
        public getAssignmentByIDRequest() {
        }
        
        public getAssignmentByIDRequest(string assignmentID) {
            this.assignmentID = assignmentID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentByIDResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentByIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.Assignment @return;
        
        public getAssignmentByIDResponse() {
        }
        
        public getAssignmentByIDResponse(Zenworks.Assignment.Assignment @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string objectUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public string assignmentType;
        
        public getAssignmentTokenRequest() {
        }
        
        public getAssignmentTokenRequest(string objectUID, string assignmentType) {
            this.objectUID = objectUID;
            this.assignmentType = assignmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.AssignmentToken @return;
        
        public getAssignmentTokenResponse() {
        }
        
        public getAssignmentTokenResponse(Zenworks.Assignment.AssignmentToken @return) {
            this.@return = @return;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments")]
    public partial class AssignmentTypeInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string consumerAdminIDField;
        
        private string[] consumerTypesField;
        
        private string contentAdminIDField;
        
        private string[] contentTypesField;
        
        private System.Xml.XmlElement[] anyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ConsumerAdminID {
            get {
                return this.consumerAdminIDField;
            }
            set {
                this.consumerAdminIDField = value;
                this.RaisePropertyChanged("ConsumerAdminID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ConsumerTypes", Order=1)]
        public string[] ConsumerTypes {
            get {
                return this.consumerTypesField;
            }
            set {
                this.consumerTypesField = value;
                this.RaisePropertyChanged("ConsumerTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ContentAdminID {
            get {
                return this.contentAdminIDField;
            }
            set {
                this.contentAdminIDField = value;
                this.RaisePropertyChanged("ContentAdminID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ContentTypes", Order=3)]
        public string[] ContentTypes {
            get {
                return this.contentTypesField;
            }
            set {
                this.contentTypesField = value;
                this.RaisePropertyChanged("ContentTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute(Namespace="http://novell.com/zenworks/datamodel/objects/assignments", Order=4)]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentTypeInformationRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentTypeInformationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string assignmentType;
        
        public getAssignmentTypeInformationRequest() {
        }
        
        public getAssignmentTypeInformationRequest(string assignmentType) {
            this.assignmentType = assignmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentTypeInformationResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentTypeInformationResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.AssignmentTypeInformation @return;
        
        public getAssignmentTypeInformationResponse() {
        }
        
        public getAssignmentTypeInformationResponse(Zenworks.Assignment.AssignmentTypeInformation @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentWithScheduleUIDRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentWithScheduleUIDRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string scheduleUID;
        
        public getAssignmentWithScheduleUIDRequest() {
        }
        
        public getAssignmentWithScheduleUIDRequest(string scheduleUID) {
            this.scheduleUID = scheduleUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentWithScheduleUIDResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentWithScheduleUIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.Assignment @return;
        
        public getAssignmentWithScheduleUIDResponse() {
        }
        
        public getAssignmentWithScheduleUIDResponse(Zenworks.Assignment.Assignment @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.AssignmentToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public int index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=2)]
        public int count;
        
        public getAssignmentsRequest() {
        }
        
        public getAssignmentsRequest(Zenworks.Assignment.AssignmentToken token, int index, int count) {
            this.token = token;
            this.index = index;
            this.count = count;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAssignmentsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getAssignmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Assignment.Assignment[] @return;
        
        public getAssignmentsResponse() {
        }
        
        public getAssignmentsResponse(Zenworks.Assignment.Assignment[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBlockedAssignmentsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getBlockedAssignmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string objectUID;
        
        public getBlockedAssignmentsRequest() {
        }
        
        public getBlockedAssignmentsRequest(string objectUID) {
            this.objectUID = objectUID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBlockedAssignmentsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getBlockedAssignmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Assignment.BlockedAssignment[] @return;
        
        public getBlockedAssignmentsResponse() {
        }
        
        public getBlockedAssignmentsResponse(Zenworks.Assignment.BlockedAssignment[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBlockedDevicesORUsersRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getBlockedDevicesORUsersRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string contentUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("targetTypes")]
        public string[] targetTypes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=3)]
        public string primaryType;
        
        public getBlockedDevicesORUsersRequest() {
        }
        
        public getBlockedDevicesORUsersRequest(string contentUID, string name, string[] targetTypes, string primaryType) {
            this.contentUID = contentUID;
            this.name = name;
            this.targetTypes = targetTypes;
            this.primaryType = primaryType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBlockedDevicesORUsersResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getBlockedDevicesORUsersResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getBlockedDevicesORUsersResponse() {
        }
        
        public getBlockedDevicesORUsersResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBlockedDevicesORUsersCountRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getBlockedDevicesORUsersCountRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string contentUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public string name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute("targetTypes")]
        public string[] targetTypes;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=3)]
        public string primaryType;
        
        public getBlockedDevicesORUsersCountRequest() {
        }
        
        public getBlockedDevicesORUsersCountRequest(string contentUID, string name, string[] targetTypes, string primaryType) {
            this.contentUID = contentUID;
            this.name = name;
            this.targetTypes = targetTypes;
            this.primaryType = primaryType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getBlockedDevicesORUsersCountResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getBlockedDevicesORUsersCountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public int @return;
        
        public getBlockedDevicesORUsersCountResponse() {
        }
        
        public getBlockedDevicesORUsersCountResponse(int @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getConsumerTypesRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getConsumerTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string assignmentType;
        
        public getConsumerTypesRequest() {
        }
        
        public getConsumerTypesRequest(string assignmentType) {
            this.assignmentType = assignmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getConsumerTypesResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getConsumerTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getConsumerTypesResponse() {
        }
        
        public getConsumerTypesResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getContentTypesRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getContentTypesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string assignmentType;
        
        public getContentTypesRequest() {
        }
        
        public getContentTypesRequest(string assignmentType) {
            this.assignmentType = assignmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getContentTypesResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getContentTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getContentTypesResponse() {
        }
        
        public getContentTypesResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSchedulesRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getSchedulesRequest {
        
        public getSchedulesRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSchedulesResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class getSchedulesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public string[] @return;
        
        public getSchedulesResponse() {
        }
        
        public getSchedulesResponse(string[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isValidConsumerRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class isValidConsumerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string consumerUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public string assignmentType;
        
        public isValidConsumerRequest() {
        }
        
        public isValidConsumerRequest(string consumerUID, string assignmentType) {
            this.consumerUID = consumerUID;
            this.assignmentType = assignmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="isValidConsumerResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class isValidConsumerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public isValidConsumerResponse() {
        }
        
        public isValidConsumerResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="moveAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class moveAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.AssignmentToken token;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("currentPositions")]
        public int[] currentPositions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=2)]
        public int offset;
        
        public moveAssignmentRequest() {
        }
        
        public moveAssignmentRequest(Zenworks.Assignment.AssignmentToken token, int[] currentPositions, int offset) {
            this.token = token;
            this.currentPositions = currentPositions;
            this.offset = offset;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="moveAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class moveAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public moveAssignmentResponse() {
        }
        
        public moveAssignmentResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="releaseAssignmentTokenRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class releaseAssignmentTokenRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.AssignmentToken token;
        
        public releaseAssignmentTokenRequest() {
        }
        
        public releaseAssignmentTokenRequest(Zenworks.Assignment.AssignmentToken token) {
            this.token = token;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="releaseAssignmentTokenResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class releaseAssignmentTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public releaseAssignmentTokenResponse() {
        }
        
        public releaseAssignmentTokenResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeAllAssignmentsRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class removeAllAssignmentsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string objectUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("assignmentTypes")]
        public string[] assignmentTypes;
        
        public removeAllAssignmentsRequest() {
        }
        
        public removeAllAssignmentsRequest(string objectUID, string[] assignmentTypes) {
            this.objectUID = objectUID;
            this.assignmentTypes = assignmentTypes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeAllAssignmentsResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class removeAllAssignmentsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("return")]
        public Zenworks.Assignment.Assignment[] @return;
        
        public removeAllAssignmentsResponse() {
        }
        
        public removeAllAssignmentsResponse(Zenworks.Assignment.Assignment[] @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class removeAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public string consumerUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=1)]
        public string contentUID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=2)]
        public string assignmentType;
        
        public removeAssignmentRequest() {
        }
        
        public removeAssignmentRequest(string consumerUID, string contentUID, string assignmentType) {
            this.consumerUID = consumerUID;
            this.contentUID = contentUID;
            this.assignmentType = assignmentType;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class removeAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public removeAssignmentResponse() {
        }
        
        public removeAssignmentResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeAssignment2Request", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class removeAssignment2Request {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.Assignment assignment;
        
        public removeAssignment2Request() {
        }
        
        public removeAssignment2Request(Zenworks.Assignment.Assignment assignment) {
            this.assignment = assignment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="removeAssignment2Response", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class removeAssignment2Response {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public removeAssignment2Response() {
        }
        
        public removeAssignment2Response(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="unblockAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class unblockAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.BlockedAssignment blockedAssignment;
        
        public unblockAssignmentRequest() {
        }
        
        public unblockAssignmentRequest(Zenworks.Assignment.BlockedAssignment blockedAssignment) {
            this.blockedAssignment = blockedAssignment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="unblockAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class unblockAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public unblockAssignmentResponse() {
        }
        
        public unblockAssignmentResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateAssignmentRequest", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class updateAssignmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public Zenworks.Assignment.Assignment data;
        
        public updateAssignmentRequest() {
        }
        
        public updateAssignmentRequest(Zenworks.Assignment.Assignment data) {
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateAssignmentResponse", WrapperNamespace="http://novell.com/zenworks/datamodel/services/assignments/soap", IsWrapped=true)]
    public partial class updateAssignmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://novell.com/zenworks/datamodel/services/assignments/soap", Order=0)]
        public bool @return;
        
        public updateAssignmentResponse() {
        }
        
        public updateAssignmentResponse(bool @return) {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AssignmentServiceChannel : Zenworks.Assignment.AssignmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssignmentServiceClient : System.ServiceModel.ClientBase<Zenworks.Assignment.AssignmentService>, Zenworks.Assignment.AssignmentService {
        
        public AssignmentServiceClient() {
        }
        
        public AssignmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AssignmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssignmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AssignmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.addAssignmentResponse Zenworks.Assignment.AssignmentService.addAssignment(Zenworks.Assignment.addAssignmentRequest request) {
            return base.Channel.addAssignment(request);
        }
        
        public bool addAssignment(Zenworks.Assignment.Assignment data) {
            Zenworks.Assignment.addAssignmentRequest inValue = new Zenworks.Assignment.addAssignmentRequest();
            inValue.data = data;
            Zenworks.Assignment.addAssignmentResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).addAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.addAssignmentResponse> Zenworks.Assignment.AssignmentService.addAssignmentAsync(Zenworks.Assignment.addAssignmentRequest request) {
            return base.Channel.addAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.addAssignmentResponse> addAssignmentAsync(Zenworks.Assignment.Assignment data) {
            Zenworks.Assignment.addAssignmentRequest inValue = new Zenworks.Assignment.addAssignmentRequest();
            inValue.data = data;
            return ((Zenworks.Assignment.AssignmentService)(this)).addAssignmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.afterAssignmentsCompletedResponse Zenworks.Assignment.AssignmentService.afterAssignmentsCompleted(Zenworks.Assignment.afterAssignmentsCompletedRequest request) {
            return base.Channel.afterAssignmentsCompleted(request);
        }
        
        public bool afterAssignmentsCompleted(string objGUID, Zenworks.Assignment.Assignment[] assignments) {
            Zenworks.Assignment.afterAssignmentsCompletedRequest inValue = new Zenworks.Assignment.afterAssignmentsCompletedRequest();
            inValue.objGUID = objGUID;
            inValue.assignments = assignments;
            Zenworks.Assignment.afterAssignmentsCompletedResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).afterAssignmentsCompleted(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.afterAssignmentsCompletedResponse> Zenworks.Assignment.AssignmentService.afterAssignmentsCompletedAsync(Zenworks.Assignment.afterAssignmentsCompletedRequest request) {
            return base.Channel.afterAssignmentsCompletedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.afterAssignmentsCompletedResponse> afterAssignmentsCompletedAsync(string objGUID, Zenworks.Assignment.Assignment[] assignments) {
            Zenworks.Assignment.afterAssignmentsCompletedRequest inValue = new Zenworks.Assignment.afterAssignmentsCompletedRequest();
            inValue.objGUID = objGUID;
            inValue.assignments = assignments;
            return ((Zenworks.Assignment.AssignmentService)(this)).afterAssignmentsCompletedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.beforeAssignmentsAddedResponse Zenworks.Assignment.AssignmentService.beforeAssignmentsAdded(Zenworks.Assignment.beforeAssignmentsAddedRequest request) {
            return base.Channel.beforeAssignmentsAdded(request);
        }
        
        public bool beforeAssignmentsAdded(string contentUID, Zenworks.Assignment.Assignment[] assignments) {
            Zenworks.Assignment.beforeAssignmentsAddedRequest inValue = new Zenworks.Assignment.beforeAssignmentsAddedRequest();
            inValue.contentUID = contentUID;
            inValue.assignments = assignments;
            Zenworks.Assignment.beforeAssignmentsAddedResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).beforeAssignmentsAdded(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.beforeAssignmentsAddedResponse> Zenworks.Assignment.AssignmentService.beforeAssignmentsAddedAsync(Zenworks.Assignment.beforeAssignmentsAddedRequest request) {
            return base.Channel.beforeAssignmentsAddedAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.beforeAssignmentsAddedResponse> beforeAssignmentsAddedAsync(string contentUID, Zenworks.Assignment.Assignment[] assignments) {
            Zenworks.Assignment.beforeAssignmentsAddedRequest inValue = new Zenworks.Assignment.beforeAssignmentsAddedRequest();
            inValue.contentUID = contentUID;
            inValue.assignments = assignments;
            return ((Zenworks.Assignment.AssignmentService)(this)).beforeAssignmentsAddedAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.blockAssignmentResponse Zenworks.Assignment.AssignmentService.blockAssignment(Zenworks.Assignment.blockAssignmentRequest request) {
            return base.Channel.blockAssignment(request);
        }
        
        public bool blockAssignment(Zenworks.Assignment.BlockedAssignment blockedAssignment) {
            Zenworks.Assignment.blockAssignmentRequest inValue = new Zenworks.Assignment.blockAssignmentRequest();
            inValue.blockedAssignment = blockedAssignment;
            Zenworks.Assignment.blockAssignmentResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).blockAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.blockAssignmentResponse> Zenworks.Assignment.AssignmentService.blockAssignmentAsync(Zenworks.Assignment.blockAssignmentRequest request) {
            return base.Channel.blockAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.blockAssignmentResponse> blockAssignmentAsync(Zenworks.Assignment.BlockedAssignment blockedAssignment) {
            Zenworks.Assignment.blockAssignmentRequest inValue = new Zenworks.Assignment.blockAssignmentRequest();
            inValue.blockedAssignment = blockedAssignment;
            return ((Zenworks.Assignment.AssignmentService)(this)).blockAssignmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.cloneAssignmentsResponse Zenworks.Assignment.AssignmentService.cloneAssignments(Zenworks.Assignment.cloneAssignmentsRequest request) {
            return base.Channel.cloneAssignments(request);
        }
        
        public Zenworks.Assignment.AssignmentResult cloneAssignments(string srcConsumerUID, string[] contentUIDs, string[] consumerUIDs, string assignmentType, bool deleteExistingAssignments, bool replaceExistingAssignments) {
            Zenworks.Assignment.cloneAssignmentsRequest inValue = new Zenworks.Assignment.cloneAssignmentsRequest();
            inValue.srcConsumerUID = srcConsumerUID;
            inValue.contentUIDs = contentUIDs;
            inValue.consumerUIDs = consumerUIDs;
            inValue.assignmentType = assignmentType;
            inValue.deleteExistingAssignments = deleteExistingAssignments;
            inValue.replaceExistingAssignments = replaceExistingAssignments;
            Zenworks.Assignment.cloneAssignmentsResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).cloneAssignments(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.cloneAssignmentsResponse> Zenworks.Assignment.AssignmentService.cloneAssignmentsAsync(Zenworks.Assignment.cloneAssignmentsRequest request) {
            return base.Channel.cloneAssignmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.cloneAssignmentsResponse> cloneAssignmentsAsync(string srcConsumerUID, string[] contentUIDs, string[] consumerUIDs, string assignmentType, bool deleteExistingAssignments, bool replaceExistingAssignments) {
            Zenworks.Assignment.cloneAssignmentsRequest inValue = new Zenworks.Assignment.cloneAssignmentsRequest();
            inValue.srcConsumerUID = srcConsumerUID;
            inValue.contentUIDs = contentUIDs;
            inValue.consumerUIDs = consumerUIDs;
            inValue.assignmentType = assignmentType;
            inValue.deleteExistingAssignments = deleteExistingAssignments;
            inValue.replaceExistingAssignments = replaceExistingAssignments;
            return ((Zenworks.Assignment.AssignmentService)(this)).cloneAssignmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.cloneConsumerAssignmentResponse Zenworks.Assignment.AssignmentService.cloneConsumerAssignment(Zenworks.Assignment.cloneConsumerAssignmentRequest request) {
            return base.Channel.cloneConsumerAssignment(request);
        }
        
        public Zenworks.Assignment.Assignment cloneConsumerAssignment(string srcConsumerUID, string contentUID, string targetConsumerUID, string assignmentType) {
            Zenworks.Assignment.cloneConsumerAssignmentRequest inValue = new Zenworks.Assignment.cloneConsumerAssignmentRequest();
            inValue.srcConsumerUID = srcConsumerUID;
            inValue.contentUID = contentUID;
            inValue.targetConsumerUID = targetConsumerUID;
            inValue.assignmentType = assignmentType;
            Zenworks.Assignment.cloneConsumerAssignmentResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).cloneConsumerAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.cloneConsumerAssignmentResponse> Zenworks.Assignment.AssignmentService.cloneConsumerAssignmentAsync(Zenworks.Assignment.cloneConsumerAssignmentRequest request) {
            return base.Channel.cloneConsumerAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.cloneConsumerAssignmentResponse> cloneConsumerAssignmentAsync(string srcConsumerUID, string contentUID, string targetConsumerUID, string assignmentType) {
            Zenworks.Assignment.cloneConsumerAssignmentRequest inValue = new Zenworks.Assignment.cloneConsumerAssignmentRequest();
            inValue.srcConsumerUID = srcConsumerUID;
            inValue.contentUID = contentUID;
            inValue.targetConsumerUID = targetConsumerUID;
            inValue.assignmentType = assignmentType;
            return ((Zenworks.Assignment.AssignmentService)(this)).cloneConsumerAssignmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAllAssignmentsResponse Zenworks.Assignment.AssignmentService.getAllAssignments(Zenworks.Assignment.getAllAssignmentsRequest request) {
            return base.Channel.getAllAssignments(request);
        }
        
        public Zenworks.Assignment.Assignment[] getAllAssignments(string objectUID, string assignmentType) {
            Zenworks.Assignment.getAllAssignmentsRequest inValue = new Zenworks.Assignment.getAllAssignmentsRequest();
            inValue.objectUID = objectUID;
            inValue.assignmentType = assignmentType;
            Zenworks.Assignment.getAllAssignmentsResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAllAssignments(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignmentsResponse> Zenworks.Assignment.AssignmentService.getAllAssignmentsAsync(Zenworks.Assignment.getAllAssignmentsRequest request) {
            return base.Channel.getAllAssignmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignmentsResponse> getAllAssignmentsAsync(string objectUID, string assignmentType) {
            Zenworks.Assignment.getAllAssignmentsRequest inValue = new Zenworks.Assignment.getAllAssignmentsRequest();
            inValue.objectUID = objectUID;
            inValue.assignmentType = assignmentType;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAllAssignmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAllAssignments2Response Zenworks.Assignment.AssignmentService.getAllAssignments2(Zenworks.Assignment.getAllAssignments2Request request) {
            return base.Channel.getAllAssignments2(request);
        }
        
        public Zenworks.Assignment.Assignment[] getAllAssignments2(string objectUID, string[] assignmentTypes) {
            Zenworks.Assignment.getAllAssignments2Request inValue = new Zenworks.Assignment.getAllAssignments2Request();
            inValue.objectUID = objectUID;
            inValue.assignmentTypes = assignmentTypes;
            Zenworks.Assignment.getAllAssignments2Response retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAllAssignments2(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignments2Response> Zenworks.Assignment.AssignmentService.getAllAssignments2Async(Zenworks.Assignment.getAllAssignments2Request request) {
            return base.Channel.getAllAssignments2Async(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignments2Response> getAllAssignments2Async(string objectUID, string[] assignmentTypes) {
            Zenworks.Assignment.getAllAssignments2Request inValue = new Zenworks.Assignment.getAllAssignments2Request();
            inValue.objectUID = objectUID;
            inValue.assignmentTypes = assignmentTypes;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAllAssignments2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAllAssignmentsByTypeResponse Zenworks.Assignment.AssignmentService.getAllAssignmentsByType(Zenworks.Assignment.getAllAssignmentsByTypeRequest request) {
            return base.Channel.getAllAssignmentsByType(request);
        }
        
        public Zenworks.Assignment.Assignment[] getAllAssignmentsByType(string[] assignmentTypes) {
            Zenworks.Assignment.getAllAssignmentsByTypeRequest inValue = new Zenworks.Assignment.getAllAssignmentsByTypeRequest();
            inValue.assignmentTypes = assignmentTypes;
            Zenworks.Assignment.getAllAssignmentsByTypeResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAllAssignmentsByType(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignmentsByTypeResponse> Zenworks.Assignment.AssignmentService.getAllAssignmentsByTypeAsync(Zenworks.Assignment.getAllAssignmentsByTypeRequest request) {
            return base.Channel.getAllAssignmentsByTypeAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignmentsByTypeResponse> getAllAssignmentsByTypeAsync(string[] assignmentTypes) {
            Zenworks.Assignment.getAllAssignmentsByTypeRequest inValue = new Zenworks.Assignment.getAllAssignmentsByTypeRequest();
            inValue.assignmentTypes = assignmentTypes;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAllAssignmentsByTypeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAllAssignmentsWithTokenResponse Zenworks.Assignment.AssignmentService.getAllAssignmentsWithToken(Zenworks.Assignment.getAllAssignmentsWithTokenRequest request) {
            return base.Channel.getAllAssignmentsWithToken(request);
        }
        
        public Zenworks.Assignment.Assignment[] getAllAssignmentsWithToken(Zenworks.Assignment.AssignmentToken token) {
            Zenworks.Assignment.getAllAssignmentsWithTokenRequest inValue = new Zenworks.Assignment.getAllAssignmentsWithTokenRequest();
            inValue.token = token;
            Zenworks.Assignment.getAllAssignmentsWithTokenResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAllAssignmentsWithToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignmentsWithTokenResponse> Zenworks.Assignment.AssignmentService.getAllAssignmentsWithTokenAsync(Zenworks.Assignment.getAllAssignmentsWithTokenRequest request) {
            return base.Channel.getAllAssignmentsWithTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAllAssignmentsWithTokenResponse> getAllAssignmentsWithTokenAsync(Zenworks.Assignment.AssignmentToken token) {
            Zenworks.Assignment.getAllAssignmentsWithTokenRequest inValue = new Zenworks.Assignment.getAllAssignmentsWithTokenRequest();
            inValue.token = token;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAllAssignmentsWithTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountResponse Zenworks.Assignment.AssignmentService.getAssignedPendingAndTargetedDevicesCount(Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountRequest request) {
            return base.Channel.getAssignedPendingAndTargetedDevicesCount(request);
        }
        
        public int[] getAssignedPendingAndTargetedDevicesCount(string objectUID, string assignmentType, Zenworks.Assignment.AssignmentInfoFilter aiFilter) {
            Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountRequest inValue = new Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountRequest();
            inValue.objectUID = objectUID;
            inValue.assignmentType = assignmentType;
            inValue.aiFilter = aiFilter;
            Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAssignedPendingAndTargetedDevicesCount(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountResponse> Zenworks.Assignment.AssignmentService.getAssignedPendingAndTargetedDevicesCountAsync(Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountRequest request) {
            return base.Channel.getAssignedPendingAndTargetedDevicesCountAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountResponse> getAssignedPendingAndTargetedDevicesCountAsync(string objectUID, string assignmentType, Zenworks.Assignment.AssignmentInfoFilter aiFilter) {
            Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountRequest inValue = new Zenworks.Assignment.getAssignedPendingAndTargetedDevicesCountRequest();
            inValue.objectUID = objectUID;
            inValue.assignmentType = assignmentType;
            inValue.aiFilter = aiFilter;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAssignedPendingAndTargetedDevicesCountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAssignmentResponse Zenworks.Assignment.AssignmentService.getAssignment(Zenworks.Assignment.getAssignmentRequest request) {
            return base.Channel.getAssignment(request);
        }
        
        public Zenworks.Assignment.Assignment getAssignment(string consumerUID, string contentUID, string assignmentType) {
            Zenworks.Assignment.getAssignmentRequest inValue = new Zenworks.Assignment.getAssignmentRequest();
            inValue.consumerUID = consumerUID;
            inValue.contentUID = contentUID;
            inValue.assignmentType = assignmentType;
            Zenworks.Assignment.getAssignmentResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentResponse> Zenworks.Assignment.AssignmentService.getAssignmentAsync(Zenworks.Assignment.getAssignmentRequest request) {
            return base.Channel.getAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentResponse> getAssignmentAsync(string consumerUID, string contentUID, string assignmentType) {
            Zenworks.Assignment.getAssignmentRequest inValue = new Zenworks.Assignment.getAssignmentRequest();
            inValue.consumerUID = consumerUID;
            inValue.contentUID = contentUID;
            inValue.assignmentType = assignmentType;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAssignmentByIDResponse Zenworks.Assignment.AssignmentService.getAssignmentByID(Zenworks.Assignment.getAssignmentByIDRequest request) {
            return base.Channel.getAssignmentByID(request);
        }
        
        public Zenworks.Assignment.Assignment getAssignmentByID(string assignmentID) {
            Zenworks.Assignment.getAssignmentByIDRequest inValue = new Zenworks.Assignment.getAssignmentByIDRequest();
            inValue.assignmentID = assignmentID;
            Zenworks.Assignment.getAssignmentByIDResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentByID(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentByIDResponse> Zenworks.Assignment.AssignmentService.getAssignmentByIDAsync(Zenworks.Assignment.getAssignmentByIDRequest request) {
            return base.Channel.getAssignmentByIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentByIDResponse> getAssignmentByIDAsync(string assignmentID) {
            Zenworks.Assignment.getAssignmentByIDRequest inValue = new Zenworks.Assignment.getAssignmentByIDRequest();
            inValue.assignmentID = assignmentID;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentByIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAssignmentTokenResponse Zenworks.Assignment.AssignmentService.getAssignmentToken(Zenworks.Assignment.getAssignmentTokenRequest request) {
            return base.Channel.getAssignmentToken(request);
        }
        
        public Zenworks.Assignment.AssignmentToken getAssignmentToken(string objectUID, string assignmentType) {
            Zenworks.Assignment.getAssignmentTokenRequest inValue = new Zenworks.Assignment.getAssignmentTokenRequest();
            inValue.objectUID = objectUID;
            inValue.assignmentType = assignmentType;
            Zenworks.Assignment.getAssignmentTokenResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentTokenResponse> Zenworks.Assignment.AssignmentService.getAssignmentTokenAsync(Zenworks.Assignment.getAssignmentTokenRequest request) {
            return base.Channel.getAssignmentTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentTokenResponse> getAssignmentTokenAsync(string objectUID, string assignmentType) {
            Zenworks.Assignment.getAssignmentTokenRequest inValue = new Zenworks.Assignment.getAssignmentTokenRequest();
            inValue.objectUID = objectUID;
            inValue.assignmentType = assignmentType;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAssignmentTypeInformationResponse Zenworks.Assignment.AssignmentService.getAssignmentTypeInformation(Zenworks.Assignment.getAssignmentTypeInformationRequest request) {
            return base.Channel.getAssignmentTypeInformation(request);
        }
        
        public Zenworks.Assignment.AssignmentTypeInformation getAssignmentTypeInformation(string assignmentType) {
            Zenworks.Assignment.getAssignmentTypeInformationRequest inValue = new Zenworks.Assignment.getAssignmentTypeInformationRequest();
            inValue.assignmentType = assignmentType;
            Zenworks.Assignment.getAssignmentTypeInformationResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentTypeInformation(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentTypeInformationResponse> Zenworks.Assignment.AssignmentService.getAssignmentTypeInformationAsync(Zenworks.Assignment.getAssignmentTypeInformationRequest request) {
            return base.Channel.getAssignmentTypeInformationAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentTypeInformationResponse> getAssignmentTypeInformationAsync(string assignmentType) {
            Zenworks.Assignment.getAssignmentTypeInformationRequest inValue = new Zenworks.Assignment.getAssignmentTypeInformationRequest();
            inValue.assignmentType = assignmentType;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentTypeInformationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAssignmentWithScheduleUIDResponse Zenworks.Assignment.AssignmentService.getAssignmentWithScheduleUID(Zenworks.Assignment.getAssignmentWithScheduleUIDRequest request) {
            return base.Channel.getAssignmentWithScheduleUID(request);
        }
        
        public Zenworks.Assignment.Assignment getAssignmentWithScheduleUID(string scheduleUID) {
            Zenworks.Assignment.getAssignmentWithScheduleUIDRequest inValue = new Zenworks.Assignment.getAssignmentWithScheduleUIDRequest();
            inValue.scheduleUID = scheduleUID;
            Zenworks.Assignment.getAssignmentWithScheduleUIDResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentWithScheduleUID(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentWithScheduleUIDResponse> Zenworks.Assignment.AssignmentService.getAssignmentWithScheduleUIDAsync(Zenworks.Assignment.getAssignmentWithScheduleUIDRequest request) {
            return base.Channel.getAssignmentWithScheduleUIDAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentWithScheduleUIDResponse> getAssignmentWithScheduleUIDAsync(string scheduleUID) {
            Zenworks.Assignment.getAssignmentWithScheduleUIDRequest inValue = new Zenworks.Assignment.getAssignmentWithScheduleUIDRequest();
            inValue.scheduleUID = scheduleUID;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentWithScheduleUIDAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getAssignmentsResponse Zenworks.Assignment.AssignmentService.getAssignments(Zenworks.Assignment.getAssignmentsRequest request) {
            return base.Channel.getAssignments(request);
        }
        
        public Zenworks.Assignment.Assignment[] getAssignments(Zenworks.Assignment.AssignmentToken token, int index, int count) {
            Zenworks.Assignment.getAssignmentsRequest inValue = new Zenworks.Assignment.getAssignmentsRequest();
            inValue.token = token;
            inValue.index = index;
            inValue.count = count;
            Zenworks.Assignment.getAssignmentsResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getAssignments(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentsResponse> Zenworks.Assignment.AssignmentService.getAssignmentsAsync(Zenworks.Assignment.getAssignmentsRequest request) {
            return base.Channel.getAssignmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getAssignmentsResponse> getAssignmentsAsync(Zenworks.Assignment.AssignmentToken token, int index, int count) {
            Zenworks.Assignment.getAssignmentsRequest inValue = new Zenworks.Assignment.getAssignmentsRequest();
            inValue.token = token;
            inValue.index = index;
            inValue.count = count;
            return ((Zenworks.Assignment.AssignmentService)(this)).getAssignmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getBlockedAssignmentsResponse Zenworks.Assignment.AssignmentService.getBlockedAssignments(Zenworks.Assignment.getBlockedAssignmentsRequest request) {
            return base.Channel.getBlockedAssignments(request);
        }
        
        public Zenworks.Assignment.BlockedAssignment[] getBlockedAssignments(string objectUID) {
            Zenworks.Assignment.getBlockedAssignmentsRequest inValue = new Zenworks.Assignment.getBlockedAssignmentsRequest();
            inValue.objectUID = objectUID;
            Zenworks.Assignment.getBlockedAssignmentsResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getBlockedAssignments(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getBlockedAssignmentsResponse> Zenworks.Assignment.AssignmentService.getBlockedAssignmentsAsync(Zenworks.Assignment.getBlockedAssignmentsRequest request) {
            return base.Channel.getBlockedAssignmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getBlockedAssignmentsResponse> getBlockedAssignmentsAsync(string objectUID) {
            Zenworks.Assignment.getBlockedAssignmentsRequest inValue = new Zenworks.Assignment.getBlockedAssignmentsRequest();
            inValue.objectUID = objectUID;
            return ((Zenworks.Assignment.AssignmentService)(this)).getBlockedAssignmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getBlockedDevicesORUsersResponse Zenworks.Assignment.AssignmentService.getBlockedDevicesORUsers(Zenworks.Assignment.getBlockedDevicesORUsersRequest request) {
            return base.Channel.getBlockedDevicesORUsers(request);
        }
        
        public string[] getBlockedDevicesORUsers(string contentUID, string name, string[] targetTypes, string primaryType) {
            Zenworks.Assignment.getBlockedDevicesORUsersRequest inValue = new Zenworks.Assignment.getBlockedDevicesORUsersRequest();
            inValue.contentUID = contentUID;
            inValue.name = name;
            inValue.targetTypes = targetTypes;
            inValue.primaryType = primaryType;
            Zenworks.Assignment.getBlockedDevicesORUsersResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getBlockedDevicesORUsers(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getBlockedDevicesORUsersResponse> Zenworks.Assignment.AssignmentService.getBlockedDevicesORUsersAsync(Zenworks.Assignment.getBlockedDevicesORUsersRequest request) {
            return base.Channel.getBlockedDevicesORUsersAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getBlockedDevicesORUsersResponse> getBlockedDevicesORUsersAsync(string contentUID, string name, string[] targetTypes, string primaryType) {
            Zenworks.Assignment.getBlockedDevicesORUsersRequest inValue = new Zenworks.Assignment.getBlockedDevicesORUsersRequest();
            inValue.contentUID = contentUID;
            inValue.name = name;
            inValue.targetTypes = targetTypes;
            inValue.primaryType = primaryType;
            return ((Zenworks.Assignment.AssignmentService)(this)).getBlockedDevicesORUsersAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getBlockedDevicesORUsersCountResponse Zenworks.Assignment.AssignmentService.getBlockedDevicesORUsersCount(Zenworks.Assignment.getBlockedDevicesORUsersCountRequest request) {
            return base.Channel.getBlockedDevicesORUsersCount(request);
        }
        
        public int getBlockedDevicesORUsersCount(string contentUID, string name, string[] targetTypes, string primaryType) {
            Zenworks.Assignment.getBlockedDevicesORUsersCountRequest inValue = new Zenworks.Assignment.getBlockedDevicesORUsersCountRequest();
            inValue.contentUID = contentUID;
            inValue.name = name;
            inValue.targetTypes = targetTypes;
            inValue.primaryType = primaryType;
            Zenworks.Assignment.getBlockedDevicesORUsersCountResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getBlockedDevicesORUsersCount(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getBlockedDevicesORUsersCountResponse> Zenworks.Assignment.AssignmentService.getBlockedDevicesORUsersCountAsync(Zenworks.Assignment.getBlockedDevicesORUsersCountRequest request) {
            return base.Channel.getBlockedDevicesORUsersCountAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getBlockedDevicesORUsersCountResponse> getBlockedDevicesORUsersCountAsync(string contentUID, string name, string[] targetTypes, string primaryType) {
            Zenworks.Assignment.getBlockedDevicesORUsersCountRequest inValue = new Zenworks.Assignment.getBlockedDevicesORUsersCountRequest();
            inValue.contentUID = contentUID;
            inValue.name = name;
            inValue.targetTypes = targetTypes;
            inValue.primaryType = primaryType;
            return ((Zenworks.Assignment.AssignmentService)(this)).getBlockedDevicesORUsersCountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getConsumerTypesResponse Zenworks.Assignment.AssignmentService.getConsumerTypes(Zenworks.Assignment.getConsumerTypesRequest request) {
            return base.Channel.getConsumerTypes(request);
        }
        
        public string[] getConsumerTypes(string assignmentType) {
            Zenworks.Assignment.getConsumerTypesRequest inValue = new Zenworks.Assignment.getConsumerTypesRequest();
            inValue.assignmentType = assignmentType;
            Zenworks.Assignment.getConsumerTypesResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getConsumerTypes(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getConsumerTypesResponse> Zenworks.Assignment.AssignmentService.getConsumerTypesAsync(Zenworks.Assignment.getConsumerTypesRequest request) {
            return base.Channel.getConsumerTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getConsumerTypesResponse> getConsumerTypesAsync(string assignmentType) {
            Zenworks.Assignment.getConsumerTypesRequest inValue = new Zenworks.Assignment.getConsumerTypesRequest();
            inValue.assignmentType = assignmentType;
            return ((Zenworks.Assignment.AssignmentService)(this)).getConsumerTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getContentTypesResponse Zenworks.Assignment.AssignmentService.getContentTypes(Zenworks.Assignment.getContentTypesRequest request) {
            return base.Channel.getContentTypes(request);
        }
        
        public string[] getContentTypes(string assignmentType) {
            Zenworks.Assignment.getContentTypesRequest inValue = new Zenworks.Assignment.getContentTypesRequest();
            inValue.assignmentType = assignmentType;
            Zenworks.Assignment.getContentTypesResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getContentTypes(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getContentTypesResponse> Zenworks.Assignment.AssignmentService.getContentTypesAsync(Zenworks.Assignment.getContentTypesRequest request) {
            return base.Channel.getContentTypesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getContentTypesResponse> getContentTypesAsync(string assignmentType) {
            Zenworks.Assignment.getContentTypesRequest inValue = new Zenworks.Assignment.getContentTypesRequest();
            inValue.assignmentType = assignmentType;
            return ((Zenworks.Assignment.AssignmentService)(this)).getContentTypesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.getSchedulesResponse Zenworks.Assignment.AssignmentService.getSchedules(Zenworks.Assignment.getSchedulesRequest request) {
            return base.Channel.getSchedules(request);
        }
        
        public string[] getSchedules() {
            Zenworks.Assignment.getSchedulesRequest inValue = new Zenworks.Assignment.getSchedulesRequest();
            Zenworks.Assignment.getSchedulesResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).getSchedules(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.getSchedulesResponse> Zenworks.Assignment.AssignmentService.getSchedulesAsync(Zenworks.Assignment.getSchedulesRequest request) {
            return base.Channel.getSchedulesAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.getSchedulesResponse> getSchedulesAsync() {
            Zenworks.Assignment.getSchedulesRequest inValue = new Zenworks.Assignment.getSchedulesRequest();
            return ((Zenworks.Assignment.AssignmentService)(this)).getSchedulesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.isValidConsumerResponse Zenworks.Assignment.AssignmentService.isValidConsumer(Zenworks.Assignment.isValidConsumerRequest request) {
            return base.Channel.isValidConsumer(request);
        }
        
        public bool isValidConsumer(string consumerUID, string assignmentType) {
            Zenworks.Assignment.isValidConsumerRequest inValue = new Zenworks.Assignment.isValidConsumerRequest();
            inValue.consumerUID = consumerUID;
            inValue.assignmentType = assignmentType;
            Zenworks.Assignment.isValidConsumerResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).isValidConsumer(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.isValidConsumerResponse> Zenworks.Assignment.AssignmentService.isValidConsumerAsync(Zenworks.Assignment.isValidConsumerRequest request) {
            return base.Channel.isValidConsumerAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.isValidConsumerResponse> isValidConsumerAsync(string consumerUID, string assignmentType) {
            Zenworks.Assignment.isValidConsumerRequest inValue = new Zenworks.Assignment.isValidConsumerRequest();
            inValue.consumerUID = consumerUID;
            inValue.assignmentType = assignmentType;
            return ((Zenworks.Assignment.AssignmentService)(this)).isValidConsumerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.moveAssignmentResponse Zenworks.Assignment.AssignmentService.moveAssignment(Zenworks.Assignment.moveAssignmentRequest request) {
            return base.Channel.moveAssignment(request);
        }
        
        public bool moveAssignment(Zenworks.Assignment.AssignmentToken token, int[] currentPositions, int offset) {
            Zenworks.Assignment.moveAssignmentRequest inValue = new Zenworks.Assignment.moveAssignmentRequest();
            inValue.token = token;
            inValue.currentPositions = currentPositions;
            inValue.offset = offset;
            Zenworks.Assignment.moveAssignmentResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).moveAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.moveAssignmentResponse> Zenworks.Assignment.AssignmentService.moveAssignmentAsync(Zenworks.Assignment.moveAssignmentRequest request) {
            return base.Channel.moveAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.moveAssignmentResponse> moveAssignmentAsync(Zenworks.Assignment.AssignmentToken token, int[] currentPositions, int offset) {
            Zenworks.Assignment.moveAssignmentRequest inValue = new Zenworks.Assignment.moveAssignmentRequest();
            inValue.token = token;
            inValue.currentPositions = currentPositions;
            inValue.offset = offset;
            return ((Zenworks.Assignment.AssignmentService)(this)).moveAssignmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.releaseAssignmentTokenResponse Zenworks.Assignment.AssignmentService.releaseAssignmentToken(Zenworks.Assignment.releaseAssignmentTokenRequest request) {
            return base.Channel.releaseAssignmentToken(request);
        }
        
        public bool releaseAssignmentToken(Zenworks.Assignment.AssignmentToken token) {
            Zenworks.Assignment.releaseAssignmentTokenRequest inValue = new Zenworks.Assignment.releaseAssignmentTokenRequest();
            inValue.token = token;
            Zenworks.Assignment.releaseAssignmentTokenResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).releaseAssignmentToken(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.releaseAssignmentTokenResponse> Zenworks.Assignment.AssignmentService.releaseAssignmentTokenAsync(Zenworks.Assignment.releaseAssignmentTokenRequest request) {
            return base.Channel.releaseAssignmentTokenAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.releaseAssignmentTokenResponse> releaseAssignmentTokenAsync(Zenworks.Assignment.AssignmentToken token) {
            Zenworks.Assignment.releaseAssignmentTokenRequest inValue = new Zenworks.Assignment.releaseAssignmentTokenRequest();
            inValue.token = token;
            return ((Zenworks.Assignment.AssignmentService)(this)).releaseAssignmentTokenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.removeAllAssignmentsResponse Zenworks.Assignment.AssignmentService.removeAllAssignments(Zenworks.Assignment.removeAllAssignmentsRequest request) {
            return base.Channel.removeAllAssignments(request);
        }
        
        public Zenworks.Assignment.Assignment[] removeAllAssignments(string objectUID, string[] assignmentTypes) {
            Zenworks.Assignment.removeAllAssignmentsRequest inValue = new Zenworks.Assignment.removeAllAssignmentsRequest();
            inValue.objectUID = objectUID;
            inValue.assignmentTypes = assignmentTypes;
            Zenworks.Assignment.removeAllAssignmentsResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).removeAllAssignments(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.removeAllAssignmentsResponse> Zenworks.Assignment.AssignmentService.removeAllAssignmentsAsync(Zenworks.Assignment.removeAllAssignmentsRequest request) {
            return base.Channel.removeAllAssignmentsAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.removeAllAssignmentsResponse> removeAllAssignmentsAsync(string objectUID, string[] assignmentTypes) {
            Zenworks.Assignment.removeAllAssignmentsRequest inValue = new Zenworks.Assignment.removeAllAssignmentsRequest();
            inValue.objectUID = objectUID;
            inValue.assignmentTypes = assignmentTypes;
            return ((Zenworks.Assignment.AssignmentService)(this)).removeAllAssignmentsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.removeAssignmentResponse Zenworks.Assignment.AssignmentService.removeAssignment(Zenworks.Assignment.removeAssignmentRequest request) {
            return base.Channel.removeAssignment(request);
        }
        
        public bool removeAssignment(string consumerUID, string contentUID, string assignmentType) {
            Zenworks.Assignment.removeAssignmentRequest inValue = new Zenworks.Assignment.removeAssignmentRequest();
            inValue.consumerUID = consumerUID;
            inValue.contentUID = contentUID;
            inValue.assignmentType = assignmentType;
            Zenworks.Assignment.removeAssignmentResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).removeAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.removeAssignmentResponse> Zenworks.Assignment.AssignmentService.removeAssignmentAsync(Zenworks.Assignment.removeAssignmentRequest request) {
            return base.Channel.removeAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.removeAssignmentResponse> removeAssignmentAsync(string consumerUID, string contentUID, string assignmentType) {
            Zenworks.Assignment.removeAssignmentRequest inValue = new Zenworks.Assignment.removeAssignmentRequest();
            inValue.consumerUID = consumerUID;
            inValue.contentUID = contentUID;
            inValue.assignmentType = assignmentType;
            return ((Zenworks.Assignment.AssignmentService)(this)).removeAssignmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.removeAssignment2Response Zenworks.Assignment.AssignmentService.removeAssignment2(Zenworks.Assignment.removeAssignment2Request request) {
            return base.Channel.removeAssignment2(request);
        }
        
        public bool removeAssignment2(Zenworks.Assignment.Assignment assignment) {
            Zenworks.Assignment.removeAssignment2Request inValue = new Zenworks.Assignment.removeAssignment2Request();
            inValue.assignment = assignment;
            Zenworks.Assignment.removeAssignment2Response retVal = ((Zenworks.Assignment.AssignmentService)(this)).removeAssignment2(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.removeAssignment2Response> Zenworks.Assignment.AssignmentService.removeAssignment2Async(Zenworks.Assignment.removeAssignment2Request request) {
            return base.Channel.removeAssignment2Async(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.removeAssignment2Response> removeAssignment2Async(Zenworks.Assignment.Assignment assignment) {
            Zenworks.Assignment.removeAssignment2Request inValue = new Zenworks.Assignment.removeAssignment2Request();
            inValue.assignment = assignment;
            return ((Zenworks.Assignment.AssignmentService)(this)).removeAssignment2Async(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.unblockAssignmentResponse Zenworks.Assignment.AssignmentService.unblockAssignment(Zenworks.Assignment.unblockAssignmentRequest request) {
            return base.Channel.unblockAssignment(request);
        }
        
        public bool unblockAssignment(Zenworks.Assignment.BlockedAssignment blockedAssignment) {
            Zenworks.Assignment.unblockAssignmentRequest inValue = new Zenworks.Assignment.unblockAssignmentRequest();
            inValue.blockedAssignment = blockedAssignment;
            Zenworks.Assignment.unblockAssignmentResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).unblockAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.unblockAssignmentResponse> Zenworks.Assignment.AssignmentService.unblockAssignmentAsync(Zenworks.Assignment.unblockAssignmentRequest request) {
            return base.Channel.unblockAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.unblockAssignmentResponse> unblockAssignmentAsync(Zenworks.Assignment.BlockedAssignment blockedAssignment) {
            Zenworks.Assignment.unblockAssignmentRequest inValue = new Zenworks.Assignment.unblockAssignmentRequest();
            inValue.blockedAssignment = blockedAssignment;
            return ((Zenworks.Assignment.AssignmentService)(this)).unblockAssignmentAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Zenworks.Assignment.updateAssignmentResponse Zenworks.Assignment.AssignmentService.updateAssignment(Zenworks.Assignment.updateAssignmentRequest request) {
            return base.Channel.updateAssignment(request);
        }
        
        public bool updateAssignment(Zenworks.Assignment.Assignment data) {
            Zenworks.Assignment.updateAssignmentRequest inValue = new Zenworks.Assignment.updateAssignmentRequest();
            inValue.data = data;
            Zenworks.Assignment.updateAssignmentResponse retVal = ((Zenworks.Assignment.AssignmentService)(this)).updateAssignment(inValue);
            return retVal.@return;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Zenworks.Assignment.updateAssignmentResponse> Zenworks.Assignment.AssignmentService.updateAssignmentAsync(Zenworks.Assignment.updateAssignmentRequest request) {
            return base.Channel.updateAssignmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<Zenworks.Assignment.updateAssignmentResponse> updateAssignmentAsync(Zenworks.Assignment.Assignment data) {
            Zenworks.Assignment.updateAssignmentRequest inValue = new Zenworks.Assignment.updateAssignmentRequest();
            inValue.data = data;
            return ((Zenworks.Assignment.AssignmentService)(this)).updateAssignmentAsync(inValue);
        }
    }
}
